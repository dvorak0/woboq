<def f='opencv/modules/contrib/src/basicretinafilter.hpp' l='223' type='void cv::BasicRetinaFilter::runProgressiveFilter(std::valarray&lt;float&gt; &amp; inputFrame, const unsigned int filterIndex = 0)'/>
<doc f='opencv/modules/contrib/src/basicretinafilter.hpp' l='217'>/**
        * run low pass filtering with progressive parameters (models the retina log sampling of the photoreceptors and its low pass filtering effect consequence: more powerfull low pass filtering effect on the corners)
        * @param inputFrame: the input image to be processed
        * @param filterIndex: the index which specifies the parameter set that should be used for the filtering
        * @return the processed image, the output is reachable later by using function getOutput() if outputFrame is NULL
        */</doc>
