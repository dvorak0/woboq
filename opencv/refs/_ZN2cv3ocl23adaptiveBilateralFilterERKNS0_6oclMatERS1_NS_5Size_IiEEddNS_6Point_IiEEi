<dec f='opencv/modules/ocl/include/opencv2/ocl/ocl.hpp' l='564' type='void cv::ocl::adaptiveBilateralFilter(const cv::ocl::oclMat &amp; src, cv::ocl::oclMat &amp; dst, Size ksize, double sigmaSpace, double maxSigmaColor = 20., Point anchor = Point(-1, -1), int borderType = BORDER_DEFAULT)'/>
<doc f='opencv/modules/ocl/include/opencv2/ocl/ocl.hpp' l='558'>//! Applies an adaptive bilateral filter to the input image
        //  Unlike the usual bilateral filter that uses fixed value for sigmaColor,
        //  the adaptive version calculates the local variance in he ksize neighborhood
        //  and use this as sigmaColor, for the value filtering. However, the local standard deviation is
        //  clamped to the maxSigmaColor.
        //  supports 8UC1, 8UC3</doc>
<def f='opencv/modules/ocl/src/filtering.cpp' l='1600' ll='1708' type='void cv::ocl::adaptiveBilateralFilter(const cv::ocl::oclMat &amp; src, cv::ocl::oclMat &amp; dst, Size ksize, double sigmaSpace, double maxSigmaColor = 20., Point anchor = Point(-1, -1), int borderType = BORDER_DEFAULT)'/>
<doc f='opencv/modules/ocl/src/filtering.cpp' l='1597'>////////////////////////////////////////////////////////////////////////////////////////////////////
// Adaptive Bilateral Filter</doc>
<use f='opencv/modules/ocl/test/test_filters.cpp' l='346' u='c' c='_ZN35AdaptiveBilateral_DISABLED_Mat_Test11OCLTestBodyEv'/>
