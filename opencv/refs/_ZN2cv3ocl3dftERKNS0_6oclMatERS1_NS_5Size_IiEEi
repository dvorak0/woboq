<dec f='opencv/modules/ocl/include/opencv2/ocl/ocl.hpp' l='1027' type='void cv::ocl::dft(const cv::ocl::oclMat &amp; src, cv::ocl::oclMat &amp; dst, Size dft_size = Size(), int flags = 0)'/>
<doc f='opencv/modules/ocl/include/opencv2/ocl/ocl.hpp' l='1015'>///////////////////////////////////////// clAmdFft related /////////////////////////////////////////
        //! Performs a forward or inverse discrete Fourier transform (1D or 2D) of floating point matrix.
        //! Param dft_size is the size of DFT transform.
        //!
        //! For complex-to-real transform it is assumed that the source matrix is packed in CLFFT&apos;s format.
        // support src type of CV32FC1, CV32FC2
        // support flags: DFT_INVERSE, DFT_REAL_OUTPUT, DFT_COMPLEX_OUTPUT, DFT_ROWS
        // dft_size is the size of original input, which is used for transformation from complex to real.
        // dft_size must be powers of 2, 3 and 5
        // real to complex dft requires at least v1.8 clAmdFft
        // real to complex dft output is not the same with cpu version
        // real to complex and complex to real does not support DFT_ROWS</doc>
<def f='opencv/modules/ocl/src/fft.cpp' l='51' ll='54' type='void cv::ocl::dft(const cv::ocl::oclMat &amp; , cv::ocl::oclMat &amp; , Size  = Size(), int  = 0)'/>
<use f='opencv/modules/ocl/test/test_fft.cpp' l='72' u='c' c='_ZN12Dft_C2C_Test11OCLTestBodyEv'/>
<use f='opencv/modules/ocl/test/test_fft.cpp' l='82' u='c' c='_ZN12Dft_R2C_Test11OCLTestBodyEv'/>
<use f='opencv/modules/ocl/test/test_fft.cpp' l='98' u='c' c='_ZN19Dft_R2CthenC2R_Test11OCLTestBodyEv'/>
<use f='opencv/modules/ocl/test/test_fft.cpp' l='99' u='c' c='_ZN19Dft_R2CthenC2R_Test11OCLTestBodyEv'/>
