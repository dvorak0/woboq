<dec f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='1464' type='void cv::gpu::BruteForceMatcher_GPU_base::radiusMatchSingle(const cv::gpu::GpuMat &amp; query, const cv::gpu::GpuMat &amp; train, cv::gpu::GpuMat &amp; trainIdx, cv::gpu::GpuMat &amp; distance, cv::gpu::GpuMat &amp; nMatches, float maxDistance, const cv::gpu::GpuMat &amp; mask = cv::gpu::GpuMat(), cv::gpu::Stream &amp; stream = Stream::Null())'/>
<doc f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='1457'>// Find best matches for each query descriptor which have distance less than maxDistance.
    // nMatches.at&lt;int&gt;(0, queryIdx) will contain matches count for queryIdx.
    // carefully nMatches can be greater than trainIdx.cols - it means that matcher didn&apos;t find all matches,
    // because it didn&apos;t have enough memory.
    // If trainIdx is empty, then trainIdx and distance will be created with size nQuery x max((nTrain / 100), 10),
    // otherwize user can pass own allocated trainIdx and distance with size nQuery x nMaxMatches
    // Matches doesn&apos;t sorted.</doc>
<use f='opencv/modules/gpu/perf/perf_features2d.cpp' l='312' u='c' c='_ZN38DescSize_Norm_Features2D_BFRadiusMatch12PerfTestBodyEv'/>
<def f='opencv/modules/gpu/src/brute_force_matcher.cpp' l='809' ll='885' type='void cv::gpu::BruteForceMatcher_GPU_base::radiusMatchSingle(const cv::gpu::GpuMat &amp; query, const cv::gpu::GpuMat &amp; train, cv::gpu::GpuMat &amp; trainIdx, cv::gpu::GpuMat &amp; distance, cv::gpu::GpuMat &amp; nMatches, float maxDistance, const cv::gpu::GpuMat &amp; mask = cv::gpu::GpuMat(), cv::gpu::Stream &amp; stream = Stream::Null())'/>
<use f='opencv/modules/gpu/src/brute_force_matcher.cpp' l='953' u='c' c='_ZN2cv3gpu26BruteForceMatcher_GPU_base11radiusMatchERKNS0_6GpuMatES4_RSt6vectorIS5_INS_6DMatchESaIS6_EESaIS8_EEfS4_b'/>
<doc f='opencv/modules/gpu/src/brute_force_matcher.cpp' l='806'>////////////////////////////////////////////////////////////////////
// RadiusMatch</doc>
