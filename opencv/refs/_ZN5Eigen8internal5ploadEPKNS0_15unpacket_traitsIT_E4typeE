<def f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='152' ll='153' type='Packet Eigen::internal::pload(const typename unpacket_traits&lt;Packet&gt;::type * from)'/>
<def f='include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h' l='218' type='Packet4f Eigen::internal::pload(const float * from)'/>
<def f='include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h' l='219' type='Packet2d Eigen::internal::pload(const double * from)'/>
<def f='include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h' l='220' type='Packet4i Eigen::internal::pload(const int * from)'/>
<def f='include/eigen3/Eigen/src/Core/arch/SSE/Complex.h' l='84' type='Eigen::internal::Packet2cf Eigen::internal::pload(const std::complex&lt;float&gt; * from)'/>
<use f='include/eigen3/Eigen/src/Core/arch/SSE/Complex.h' l='84' u='c' c='_ZN5Eigen8internal5ploadEPKNS0_15unpacket_traitsIT_E4typeE'/>
<def f='include/eigen3/Eigen/src/Core/arch/SSE/Complex.h' l='304' ll='305' type='Eigen::internal::Packet1cd Eigen::internal::pload(const std::complex&lt;double&gt; * from)'/>
<use f='include/eigen3/Eigen/src/Core/arch/SSE/Complex.h' l='305' u='c' c='_ZN5Eigen8internal5ploadEPKNS0_15unpacket_traitsIT_E4typeE'/>
<doc f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='151'>/** \internal \returns a packet version of \a *from, from must be 16 bytes aligned */</doc>
<doc f='include/eigen3/Eigen/src/Core/arch/SSE/Complex.h' l='303'>// FIXME force unaligned load, this is a temporary fix</doc>
