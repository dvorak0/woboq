<dec f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='194' type='typename MatrixType::RealScalar Eigen::FullPivHouseholderQR::absDeterminant() const'/>
<def f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='382' ll='389' type='typename MatrixType::RealScalar Eigen::FullPivHouseholderQR::absDeterminant() const'/>
<doc f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='181'>/** \returns the absolute value of the determinant of the matrix of which
      * *this is the QR decomposition. It has only linear complexity
      * (that is, O(n) where n is the dimension of the square matrix)
      * as the QR decomposition has already been computed.
      *
      * \note This is only for square matrices.
      *
      * \warning a determinant can be very big or small, so for matrices
      * of large enough dimension, there is a risk of overflow/underflow.
      * One way to work around that is to use logAbsDeterminant() instead.
      *
      * \sa logAbsDeterminant(), MatrixBase::determinant()
      */</doc>
