<dec f='include/libswscale/swscale.h' l='213' type='int sws_scale(struct SwsContext * c, const uint8_t *const * srcSlice, const int * srcStride, int srcSliceY, int srcSliceH, uint8_t *const * dst, const int * dstStride)'/>
<use f='opencv/modules/highgui/src/cap_ffmpeg_impl.hpp' l='1001' u='c' c='_ZN16CvCapture_FFMPEG13retrieveFrameEiPPhPiS2_S2_S2_'/>
<use f='opencv/modules/highgui/src/cap_ffmpeg_impl.hpp' l='1652' u='c' c='_ZN20CvVideoWriter_FFMPEG10writeFrameEPKhiiiii'/>
<doc f='include/libswscale/swscale.h' l='187'>/**
 * Scale the image slice in srcSlice and put the resulting scaled
 * slice in the image in dst. A slice is a sequence of consecutive
 * rows in an image.
 *
 * Slices have to be provided in sequential order, either in
 * top-bottom or bottom-top order. If slices are provided in
 * non-sequential order the behavior of the function is undefined.
 *
 * @param c         the scaling context previously created with
 *                  sws_getContext()
 * @param srcSlice  the array containing the pointers to the planes of
 *                  the source slice
 * @param srcStride the array containing the strides for each plane of
 *                  the source image
 * @param srcSliceY the position in the source image of the slice to
 *                  process, that is the number (counted starting from
 *                  zero) in the image of the first row of the slice
 * @param srcSliceH the height of the source slice, that is the number
 *                  of rows in the slice
 * @param dst       the array containing the pointers to the planes of
 *                  the destination image
 * @param dstStride the array containing the strides for each plane of
 *                  the destination image
 * @return          the height of the output slice
 */</doc>
