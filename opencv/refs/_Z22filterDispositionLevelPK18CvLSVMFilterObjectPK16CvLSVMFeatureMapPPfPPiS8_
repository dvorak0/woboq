<dec f='opencv/modules/objdetect/src/_lsvm_matching.h' l='156' type='int filterDispositionLevel(const CvLSVMFilterObject * Fi, const CvLSVMFeatureMap * pyramid, float ** scoreFi, int ** pointsX, int ** pointsY)'/>
<doc f='opencv/modules/objdetect/src/_lsvm_matching.h' l='138'>/*
// Computation objective function D according the original paper
//
// API
// int filterDispositionLevel(const filterObject *Fi, const featureMap *pyramid,
                              float **scoreFi,
                              int **pointsX, int **pointsY);
// INPUT
// Fi                - filter object (weights and coefficients of penalty
                       function that are used in this routine)
// pyramid           - feature map
// OUTPUT
// scoreFi           - values of distance transform on the level at all positions
// (pointsX, pointsY)- positions that correspond to the maximum value
                       of distance transform at all grid nodes
// RESULT
// Error status
*/</doc>
<def f='opencv/modules/objdetect/src/matching.cpp' l='332' ll='397' type='int filterDispositionLevel(const CvLSVMFilterObject * Fi, const CvLSVMFeatureMap * pyramid, float ** scoreFi, int ** pointsX, int ** pointsY)'/>
<use f='opencv/modules/objdetect/src/matching.cpp' l='718' u='c' c='_Z28maxFunctionalScoreFixedLevelPPK18CvLSVMFilterObjectiPK20CvLSVMFeaturePyramidifiiPfPP7CvPointPiPS9_'/>
<use f='opencv/modules/objdetect/src/matching.cpp' l='964' u='c' c='_Z34thresholdFunctionalScoreFixedLevelPPK18CvLSVMFilterObjectiPK20CvLSVMFeaturePyramidifiifPPfPP7CvPointPiPSA_'/>
<doc f='opencv/modules/objdetect/src/matching.cpp' l='313'>/*
// Computation objective function D according the original paper
//
// API
// int filterDispositionLevel(const CvLSVMFilterObject *Fi, const featurePyramid *H,
                              int level, float **scoreFi,
                              int **pointsX, int **pointsY);
// INPUT
// Fi                - filter object (weights and coefficients of penalty
                       function that are used in this routine)
// H                 - feature pyramid
// level             - level number
// OUTPUT
// scoreFi           - values of distance transform on the level at all positions
// (pointsX, pointsY)- positions that correspond to the maximum value
                       of distance transform at all grid nodes
// RESULT
// Error status
*/</doc>
