<def f='opencv/modules/ts/include/opencv2/ts/ts_gtest.h' l='15282' ll='15315' type='void testing::internal::CartesianProductGenerator10::Iterator::Iterator(const ParamGeneratorInterface&lt;ParamType&gt; * base, const ParamGenerator&lt;T1&gt; &amp; g1, const typename ParamGenerator&lt;T1&gt;::iterator &amp; current1, const ParamGenerator&lt;T2&gt; &amp; g2, const typename ParamGenerator&lt;T2&gt;::iterator &amp; current2, const ParamGenerator&lt;T3&gt; &amp; g3, const typename ParamGenerator&lt;T3&gt;::iterator &amp; current3, const ParamGenerator&lt;T4&gt; &amp; g4, const typename ParamGenerator&lt;T4&gt;::iterator &amp; current4, const ParamGenerator&lt;T5&gt; &amp; g5, const typename ParamGenerator&lt;T5&gt;::iterator &amp; current5, const ParamGenerator&lt;T6&gt; &amp; g6, const typename ParamGenerator&lt;T6&gt;::iterator &amp; current6, const ParamGenerator&lt;T7&gt; &amp; g7, const typename ParamGenerator&lt;T7&gt;::iterator &amp; current7, const ParamGenerator&lt;T8&gt; &amp; g8, const typename ParamGenerator&lt;T8&gt;::iterator &amp; current8, const ParamGenerator&lt;T9&gt; &amp; g9, const typename ParamGenerator&lt;T9&gt;::iterator &amp; current9, const ParamGenerator&lt;T10&gt; &amp; g10, const typename ParamGenerator&lt;T10&gt;::iterator &amp; current10)'/>
