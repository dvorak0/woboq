<def f='include/libpng12/png.h' l='829' ll='1066'/>
<size>464</size>
<doc f='include/libpng12/png.h' l='790'>/* png_info is a structure that holds the information in a PNG file so
 * that the application can find out the characteristics of the image.
 * If you are reading the file, this structure will tell you what is
 * in the PNG file.  If you are writing the file, fill in the information
 * you want to put into the PNG file, then call png_write_info().
 * The names chosen should be very close to the PNG specification, so
 * consult that document for information about the meaning of each field.
 *
 * With libpng &lt; 0.95, it was only possible to directly set and read the
 * the values in the png_info_struct, which meant that the contents and
 * order of the values had to remain fixed.  With libpng 0.95 and later,
 * however, there are now functions that abstract the contents of
 * png_info_struct from the application, so this makes it easier to use
 * libpng with dynamic libraries, and even makes it possible to use
 * libraries that don&apos;t have all of the libpng ancillary chunk-handing
 * functionality.
 *
 * In any case, the order of the parameters in png_info_struct should NOT
 * be changed for as long as possible to keep compatibility with applications
 * that use the old direct-access method with png_info_struct.
 *
 * The following members may have allocated storage attached that should be
 * cleaned up before the structure is discarded: palette, trans, text,
 * pcal_purpose, pcal_units, pcal_params, hist, iccp_name, iccp_profile,
 * splt_palettes, scal_unit, row_pointers, and unknowns.   By default, these
 * are automatically freed when the info structure is deallocated, if they were
 * allocated internally by libpng.  This behavior can be changed by means
 * of the png_data_freer() function.
 *
 * More allocation details: all the chunk-reading functions that
 * change these members go through the corresponding png_set_*
 * functions.  A function to clear these members is available: see
 * png_free_data().  The png_set_* functions do not depend on being
 * able to point info structure members to any of the storage they are
 * passed (they make their own copies), EXCEPT that the png_set_text
 * functions use the same storage passed to them in the text_ptr or
 * itxt_ptr structure argument, and the png_set_rows and png_set_unknowns
 * functions do not make their own copies.
 */</doc>
<mbr r='png_info_struct::width' o='0' t='png_uint_32'/>
<mbr r='png_info_struct::height' o='64' t='png_uint_32'/>
<mbr r='png_info_struct::valid' o='128' t='png_uint_32'/>
<mbr r='png_info_struct::rowbytes' o='192' t='png_uint_32'/>
<mbr r='png_info_struct::palette' o='256' t='png_colorp'/>
<mbr r='png_info_struct::num_palette' o='320' t='png_uint_16'/>
<mbr r='png_info_struct::num_trans' o='336' t='png_uint_16'/>
<mbr r='png_info_struct::bit_depth' o='352' t='png_byte'/>
<mbr r='png_info_struct::color_type' o='360' t='png_byte'/>
<mbr r='png_info_struct::compression_type' o='368' t='png_byte'/>
<mbr r='png_info_struct::filter_type' o='376' t='png_byte'/>
<mbr r='png_info_struct::interlace_type' o='384' t='png_byte'/>
<mbr r='png_info_struct::channels' o='392' t='png_byte'/>
<mbr r='png_info_struct::pixel_depth' o='400' t='png_byte'/>
<mbr r='png_info_struct::spare_byte' o='408' t='png_byte'/>
<mbr r='png_info_struct::signature' o='416' t='png_byte [8]'/>
<mbr r='png_info_struct::gamma' o='480' t='float'/>
<mbr r='png_info_struct::srgb_intent' o='512' t='png_byte'/>
<mbr r='png_info_struct::num_text' o='544' t='int'/>
<mbr r='png_info_struct::max_text' o='576' t='int'/>
<mbr r='png_info_struct::text' o='640' t='png_textp'/>
<mbr r='png_info_struct::mod_time' o='704' t='png_time'/>
<mbr r='png_info_struct::sig_bit' o='768' t='png_color_8'/>
<mbr r='png_info_struct::trans' o='832' t='png_bytep'/>
<mbr r='png_info_struct::trans_values' o='896' t='png_color_16'/>
<mbr r='png_info_struct::background' o='976' t='png_color_16'/>
<mbr r='png_info_struct::x_offset' o='1088' t='png_int_32'/>
<mbr r='png_info_struct::y_offset' o='1152' t='png_int_32'/>
<mbr r='png_info_struct::offset_unit_type' o='1216' t='png_byte'/>
<mbr r='png_info_struct::x_pixels_per_unit' o='1280' t='png_uint_32'/>
<mbr r='png_info_struct::y_pixels_per_unit' o='1344' t='png_uint_32'/>
<mbr r='png_info_struct::phys_unit_type' o='1408' t='png_byte'/>
<mbr r='png_info_struct::hist' o='1472' t='png_uint_16p'/>
<mbr r='png_info_struct::x_white' o='1536' t='float'/>
<mbr r='png_info_struct::y_white' o='1568' t='float'/>
<mbr r='png_info_struct::x_red' o='1600' t='float'/>
<mbr r='png_info_struct::y_red' o='1632' t='float'/>
<mbr r='png_info_struct::x_green' o='1664' t='float'/>
<mbr r='png_info_struct::y_green' o='1696' t='float'/>
<mbr r='png_info_struct::x_blue' o='1728' t='float'/>
<mbr r='png_info_struct::y_blue' o='1760' t='float'/>
<mbr r='png_info_struct::pcal_purpose' o='1792' t='png_charp'/>
<mbr r='png_info_struct::pcal_X0' o='1856' t='png_int_32'/>
<mbr r='png_info_struct::pcal_X1' o='1920' t='png_int_32'/>
<mbr r='png_info_struct::pcal_units' o='1984' t='png_charp'/>
<mbr r='png_info_struct::pcal_params' o='2048' t='png_charpp'/>
<mbr r='png_info_struct::pcal_type' o='2112' t='png_byte'/>
<mbr r='png_info_struct::pcal_nparams' o='2120' t='png_byte'/>
<mbr r='png_info_struct::free_me' o='2176' t='png_uint_32'/>
<mbr r='png_info_struct::unknown_chunks' o='2240' t='png_unknown_chunkp'/>
<mbr r='png_info_struct::unknown_chunks_num' o='2304' t='png_size_t'/>
<mbr r='png_info_struct::iccp_name' o='2368' t='png_charp'/>
<mbr r='png_info_struct::iccp_profile' o='2432' t='png_charp'/>
<mbr r='png_info_struct::iccp_proflen' o='2496' t='png_uint_32'/>
<mbr r='png_info_struct::iccp_compression' o='2560' t='png_byte'/>
<mbr r='png_info_struct::splt_palettes' o='2624' t='png_sPLT_tp'/>
<mbr r='png_info_struct::splt_palettes_num' o='2688' t='png_uint_32'/>
<mbr r='png_info_struct::scal_unit' o='2752' t='png_byte'/>
<mbr r='png_info_struct::scal_pixel_width' o='2816' t='double'/>
<mbr r='png_info_struct::scal_pixel_height' o='2880' t='double'/>
<mbr r='png_info_struct::scal_s_width' o='2944' t='png_charp'/>
<mbr r='png_info_struct::scal_s_height' o='3008' t='png_charp'/>
<mbr r='png_info_struct::row_pointers' o='3072' t='png_bytepp'/>
<mbr r='png_info_struct::int_gamma' o='3136' t='png_fixed_point'/>
<mbr r='png_info_struct::int_x_white' o='3200' t='png_fixed_point'/>
<mbr r='png_info_struct::int_y_white' o='3264' t='png_fixed_point'/>
<mbr r='png_info_struct::int_x_red' o='3328' t='png_fixed_point'/>
<mbr r='png_info_struct::int_y_red' o='3392' t='png_fixed_point'/>
<mbr r='png_info_struct::int_x_green' o='3456' t='png_fixed_point'/>
<mbr r='png_info_struct::int_y_green' o='3520' t='png_fixed_point'/>
<mbr r='png_info_struct::int_x_blue' o='3584' t='png_fixed_point'/>
<mbr r='png_info_struct::int_y_blue' o='3648' t='png_fixed_point'/>
