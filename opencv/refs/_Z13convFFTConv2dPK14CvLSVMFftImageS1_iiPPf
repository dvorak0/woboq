<dec f='opencv/modules/objdetect/src/_lsvm_matching.h' l='135' type='int convFFTConv2d(const CvLSVMFftImage * featMapImage, const CvLSVMFftImage * filterImage, int filterDimX, int filterDimY, float ** conv)'/>
<doc f='opencv/modules/objdetect/src/_lsvm_matching.h' l='120'>/*
// Function for convolution computation using FFT
//
// API
// int convFFTConv2d(const fftImage *featMapImage, const fftImage *filterImage,
                     int filterDimX, int filterDimY, float **conv);
// INPUT
// featMapImage      - feature map image
// filterImage       - filter image
// (filterDimX,filterDimY) - filter dimension
// OUTPUT
// conv              - the convolution
// RESULT
// Error status
*/</doc>
<def f='opencv/modules/objdetect/src/matching.cpp' l='274' ll='311' type='int convFFTConv2d(const CvLSVMFftImage * featMapImage, const CvLSVMFftImage * filterImage, int filterDimX, int filterDimY, float ** conv)'/>
<use f='opencv/modules/objdetect/src/matching.cpp' l='458' u='c' c='_Z25filterDispositionLevelFFTPK18CvLSVMFilterObjectPK14CvLSVMFftImagePPfPPiS8_'/>
<doc f='opencv/modules/objdetect/src/matching.cpp' l='259'>/*
// Function for convolution computation using FFT
//
// API
// int convFFTConv2d(const fftImage *featMapImage, const fftImage *filterImage,
                     int filterDimX, int filterDimY, float **conv);
// INPUT
// featMapImage      - feature map image
// filterImage       - filter image
// (filterDimX,filterDimY) - filter dimension
// OUTPUT
// conv              - the convolution
// RESULT
// Error status
*/</doc>
