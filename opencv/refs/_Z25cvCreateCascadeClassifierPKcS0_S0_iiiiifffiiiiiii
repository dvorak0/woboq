<dec f='opencv/apps/haartraining/cvhaartraining.h' l='177' type='void cvCreateCascadeClassifier(const char * dirname, const char * vecfilename, const char * bgfilename, int npos, int nneg, int nstages, int numprecalculated, int numsplits, float minhitrate = 0.995000004F, float maxfalsealarm = 0.5F, float weightfraction = 0.949999988F, int mode = 0, int symmetric = 1, int equalweights = 1, int winwidth = 24, int winheight = 24, int boosttype = 3, int stumperror = 0)'/>
<doc f='opencv/apps/haartraining/cvhaartraining.h' l='141'>/*
 * cvCreateCascadeClassifier
 *
 * Create cascade classifier
 * dirname          - directory name in which cascade classifier will be created.
 *   It must exist and contain subdirectories 0, 1, 2, ... (nstages-1).
 * vecfilename      - name of .vec file with object&apos;s images
 * bgfilename       - name of background description file
 * bg_vecfile       - true if bgfilename represents a vec file with discrete negatives
 * npos             - number of positive samples used in training of each stage
 * nneg             - number of negative samples used in training of each stage
 * nstages          - number of stages
 * numprecalculated - number of features being precalculated. Each precalculated feature
 *   requires (number_of_samples*(sizeof( float ) + sizeof( short ))) bytes of memory
 * numsplits        - number of binary splits in each weak classifier
 *   1 - stumps, 2 and more - trees.
 * minhitrate       - desired min hit rate of each stage
 * maxfalsealarm    - desired max false alarm of each stage
 * weightfraction   - weight trimming parameter
 * mode             - 0 - BASIC = Viola
 *                    1 - CORE  = All upright
 *                    2 - ALL   = All features
 * symmetric        - if not 0 vertical symmetry is assumed
 * equalweights     - if not 0 initial weights of all samples will be equal
 * winwidth         - sample width
 * winheight        - sample height
 * boosttype        - type of applied boosting algorithm
 *   0 - Discrete AdaBoost
 *   1 - Real AdaBoost
 *   2 - LogitBoost
 *   3 - Gentle AdaBoost
 * stumperror       - type of used error if Discrete AdaBoost algorithm is applied
 *   0 - misclassification error
 *   1 - gini error
 *   2 - entropy error
 */</doc>
<def f='opencv/apps/haartraining/cvhaartraining.cpp' l='2013' ll='2217' type='void cvCreateCascadeClassifier(const char * dirname, const char * vecfilename, const char * bgfilename, int npos, int nneg, int nstages, int numprecalculated, int numsplits, float minhitrate = 0.995000004F, float maxfalsealarm = 0.5F, float weightfraction = 0.949999988F, int mode = 0, int symmetric = 1, int equalweights = 1, int winwidth = 24, int winheight = 24, int boosttype = 3, int stumperror = 0)'/>
