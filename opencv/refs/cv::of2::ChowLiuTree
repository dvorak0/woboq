<def f='opencv/modules/contrib/include/opencv2/contrib/openfabmap.hpp' l='338' ll='380'/>
<size>128</size>
<doc f='opencv/modules/contrib/include/opencv2/contrib/openfabmap.hpp' l='333'>/*
    A Chow-Liu tree is required by FAB-MAP. The Chow-Liu tree provides an
    estimate of the full distribution of visual words using a minimum spanning
    tree. The tree is generated through training data.
*/</doc>
<fun r='_ZN2cv3of211ChowLiuTreeC1Ev'/>
<fun r='_ZN2cv3of211ChowLiuTreeD1Ev'/>
<fun r='_ZN2cv3of211ChowLiuTree3addERKNS_3MatE'/>
<fun r='_ZN2cv3of211ChowLiuTree3addERKSt6vectorINS_3MatESaIS3_EE'/>
<fun r='_ZNK2cv3of211ChowLiuTree17getImgDescriptorsEv'/>
<fun r='_ZN2cv3of211ChowLiuTree4makeEd'/>
<mbr r='cv::of2::ChowLiuTree::imgDescriptors' o='64' t='vector&lt;cv::Mat&gt;'/>
<mbr r='cv::of2::ChowLiuTree::mergedImgDescriptors' o='256' t='cv::Mat'/>
<fun r='_ZN2cv3of211ChowLiuTree1PEib'/>
<fun r='_ZN2cv3of211ChowLiuTree2JPEibib'/>
<fun r='_ZN2cv3of211ChowLiuTree2CPEibib'/>
<fun r='_ZN2cv3of211ChowLiuTree15createBaseEdgesERSt4listINS1_4infoESaIS3_EEd'/>
<fun r='_ZN2cv3of211ChowLiuTree11calcMutInfoEii'/>
<fun r='_ZN2cv3of211ChowLiuTree14sortInfoScoresERKNS1_4infoES4_'/>
<fun r='_ZN2cv3of211ChowLiuTree20reduceEdgesToMinSpanERSt4listINS1_4infoESaIS3_EE'/>
<fun r='_ZN2cv3of211ChowLiuTree9buildTreeEiRSt4listINS1_4infoESaIS3_EE'/>
<fun r='_ZN2cv3of211ChowLiuTree12recAddToTreeERNS_3MatEiiRSt4listINS1_4infoESaIS5_EE'/>
<fun r='_ZN2cv3of211ChowLiuTree15extractChildrenERSt4listINS1_4infoESaIS3_EEi'/>
