<dec f='include/eigen3/Eigen/src/Cholesky/LDLT.h' l='199' type='LDLT&lt;MatrixType, UpLo&gt; &amp; Eigen::LDLT::rankUpdate(const MatrixBase&lt;Derived&gt; &amp; w, const RealScalar &amp; alpha = 1)'/>
<def f='include/eigen3/Eigen/src/Cholesky/LDLT.h' l='459' ll='483' type='LDLT&lt;MatrixType, _UpLo&gt; &amp; Eigen::LDLT::rankUpdate(const MatrixBase&lt;Derived&gt; &amp; w, const typename NumTraits&lt;typename MatrixType::Scalar&gt;::Real &amp; sigma = 1)'/>
<doc f='include/eigen3/Eigen/src/Cholesky/LDLT.h' l='454'>/** Update the LDLT decomposition:  given A = L D L^T, efficiently compute the decomposition of A + sigma w w^T.
 * \param w a vector to be incorporated into the decomposition.
 * \param sigma a scalar, +1 for updates and -1 for &quot;downdates,&quot; which correspond to removing previously-added column vectors. Optional; default value is +1.
 * \sa setZero()
  */</doc>
