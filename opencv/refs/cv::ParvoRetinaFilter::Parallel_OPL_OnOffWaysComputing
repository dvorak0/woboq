<inh f='opencv/modules/core/include/opencv2/core/core.hpp' l='4859' c='cv::ParallelLoopBody'/>
<def f='opencv/modules/contrib/src/parvoretinafilter.hpp' l='226' ll='255'/>
<size>56</size>
<doc f='opencv/modules/contrib/src/parvoretinafilter.hpp' l='220'>/******************************************************
** IF some parallelizing thread methods are available, then, main loops are parallelized using these functors
** ==&gt; main idea parallelize main filters loops, then, only the most used methods are parallelized... TODO : increase the number of parallelized methods as necessary
** ==&gt; functors names = Parallel_$$$ where $$$= the name of the serial method that is parallelized
** ==&gt; functors constructors can differ from the parameters used with their related serial functions
*/</doc>
<mbr r='cv::ParvoRetinaFilter::Parallel_OPL_OnOffWaysComputing::photoreceptorsOutput' o='64' t='float *'/>
<mbr r='cv::ParvoRetinaFilter::Parallel_OPL_OnOffWaysComputing::horizontalCellsOutput' o='128' t='float *'/>
<mbr r='cv::ParvoRetinaFilter::Parallel_OPL_OnOffWaysComputing::bipolarCellsON' o='192' t='float *'/>
<mbr r='cv::ParvoRetinaFilter::Parallel_OPL_OnOffWaysComputing::bipolarCellsOFF' o='256' t='float *'/>
<mbr r='cv::ParvoRetinaFilter::Parallel_OPL_OnOffWaysComputing::parvocellularOutputON' o='320' t='float *'/>
<mbr r='cv::ParvoRetinaFilter::Parallel_OPL_OnOffWaysComputing::parvocellularOutputOFF' o='384' t='float *'/>
<fun r='_ZN2cv17ParvoRetinaFilter31Parallel_OPL_OnOffWaysComputingC1EPfS2_S2_S2_S2_S2_'/>
<fun r='_ZNK2cv17ParvoRetinaFilter31Parallel_OPL_OnOffWaysComputingclERKNS_5RangeE'/>
