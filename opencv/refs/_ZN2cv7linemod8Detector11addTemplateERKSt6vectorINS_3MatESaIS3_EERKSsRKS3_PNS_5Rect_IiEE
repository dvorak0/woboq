<dec f='opencv/modules/objdetect/include/opencv2/objdetect/objdetect.hpp' l='983' type='int cv::linemod::Detector::addTemplate(const std::vector&lt;Mat&gt; &amp; sources, const std::string &amp; class_id, const cv::Mat &amp; object_mask, Rect * bounding_box = __null)'/>
<doc f='opencv/modules/objdetect/include/opencv2/objdetect/objdetect.hpp' l='973'>/**
   * \brief Add new object template.
   *
   * \param      sources      Source images, one for each modality.
   * \param      class_id     Object class ID.
   * \param      object_mask  Mask separating object from background.
   * \param[out] bounding_box Optionally return bounding box of the extracted features.
   *
   * \return Template ID, or -1 if failed to extract a valid template.
   */</doc>
<def f='opencv/modules/objdetect/src/linemod.cpp' l='1621' ll='1655' type='int cv::linemod::Detector::addTemplate(const std::vector&lt;Mat&gt; &amp; sources, const std::string &amp; class_id, const cv::Mat &amp; object_mask, Rect * bounding_box = __null)'/>
