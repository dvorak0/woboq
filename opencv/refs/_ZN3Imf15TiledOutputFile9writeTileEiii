<dec f='include/OpenEXR/ImfTiledOutputFile.h' l='380' type='void Imf::TiledOutputFile::writeTile(int dx, int dy, int l = 0)'/>
<doc f='include/OpenEXR/ImfTiledOutputFile.h' l='308'>//------------------------------------------------------------------
    // Write pixel data:
    //
    // writeTile(dx, dy, lx, ly) writes the tile with tile
    // coordinates (dx, dy), and level number (lx, ly) to
    // the file.
    //
    //   dx must lie in the interval [0, numXTiles(lx) - 1]
    //   dy must lie in the interval [0, numYTiles(ly) - 1]
    //
    //   lx must lie in the interval [0, numXLevels() - 1]
    //   ly must lie in the inverval [0, numYLevels() - 1]
    //
    // writeTile(dx, dy, level) is a convenience function
    // used for ONE_LEVEL and MIPMAP_LEVEL files.  It calls
    // writeTile(dx, dy, level, level).
    //
    // The two writeTiles(dx1, dx2, dy1, dy2, ...) functions allow
    // writing multiple tiles at once.  If multi-threading is used
    // multiple tiles are written concurrently.  The tile coordinates,
    // dx1, dx2 and dy1, dy2, specify inclusive ranges of tile
    // coordinates.  It is valid for dx1 &lt; dx2 or dy1 &lt; dy2; the
    // tiles are always written in the order specified by the line
    // order attribute.  Hence, it is not possible to specify an
    // &quot;invalid&quot; or empty tile range.
    //
    // Pixels that are outside the pixel coordinate range for the tile&apos;s
    // level, are never accessed by writeTile().
    //
    // Each tile in the file must be written exactly once.
    //
    // The file&apos;s line order attribute determines the order of the tiles
    // in the file:
    //
    //	 INCREASING_Y	In the file, the tiles for each level are stored
    //	 		in a contiguous block.  The levels are ordered
    //	 		like this:
    //
    //			    (0, 0)   (1, 0)   ... (nx-1, 0) 
    //			    (0, 1)   (1, 1)   ... (nx-1, 1) 
    //			     ...
    //			    (0,ny-1) (1,ny-1) ... (nx-1,ny-1) 
    //
    //			where nx = numXLevels(), and ny = numYLevels().
    //			In an individual level, (lx, ly), the tiles
    //			are stored in the following order:
    //
    //			    (0, 0)   (1, 0)   ... (tx-1, 0)
    //			    (0, 1)   (1, 1)   ... (tx-1, 1)
    //			     ...
    //			    (0,ty-1) (1,ty-1) ... (tx-1,ty-1)
    //
    //			where tx = numXTiles(lx),
    //			and   ty = numYTiles(ly).
    //
    //	 DECREASING_Y   As for INCREASING_Y, the tiles for each level
    //			are stored in a contiguous block.  The levels
    //			are ordered the same way as for INCREASING_Y,
    //			but within an individual level, the tiles
    //			are stored in this order:
    //
    //			    (0,ty-1) (1,ty-1) ... (tx-1,ty-1)
    //			     ...
    //			    (0, 1)   (1, 1)   ... (tx-1, 1)
    //			    (0, 0)   (1, 0)   ... (tx-1, 0)
    //
    //
    //	 RANDOM_Y	The order of the calls to writeTile() determines
    //	 		the order of the tiles in the file.
    //
    //------------------------------------------------------------------</doc>
