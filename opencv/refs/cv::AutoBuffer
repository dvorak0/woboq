<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='3229' ll='3258'/>
<doc f='opencv/modules/core/include/opencv2/core/core.hpp' l='3202'>/*!
 Automatically Allocated Buffer Class

 The class is used for temporary buffers in functions and methods.
 If a temporary buffer is usually small (a few K&apos;s of memory),
 but its size depends on the parameters, it makes sense to create a small
 fixed-size array on stack and use it if it&apos;s large enough. If the required buffer size
 is larger than the fixed size, another buffer of sufficient size is allocated dynamically
 and released after the processing. Therefore, in typical cases, when the buffer size is small,
 there is no overhead associated with malloc()/free().
 At the same time, there is no limit on the size of processed data.

 This is what AutoBuffer does. The template takes 2 parameters - type of the buffer elements and
 the number of stack-allocated elements. Here is how the class is used:

 \code
 void my_func(const cv::Mat&amp; m)
 {
    cv::AutoBuffer&lt;float, 1000&gt; buf; // create automatic buffer containing 1000 floats

    buf.allocate(m.rows); // if m.rows &lt;= 1000, the pre-allocated buffer is used,
                          // otherwise the buffer of &quot;m.rows&quot; floats will be allocated
                          // dynamically and deallocated in cv::AutoBuffer destructor
    ...
 }
 \endcode
*/</doc>
<fun r='_ZN2cv10AutoBufferC1Ev'/>
<fun r='_ZN2cv10AutoBufferC1Em'/>
<fun r='_ZN2cv10AutoBufferD1Ev'/>
<fun r='_ZN2cv10AutoBuffer8allocateEm'/>
<fun r='_ZN2cv10AutoBuffer10deallocateEv'/>
<fun r='_ZN2cv10AutoBuffercvPT_Ev'/>
<fun r='_ZNK2cv10AutoBuffercvPKT_Ev'/>
<mbr r='cv::AutoBuffer::ptr' t='_Tp *'/>
<mbr r='cv::AutoBuffer::size' t='size_t'/>
<mbr r='cv::AutoBuffer::buf' t='_Tp [fixed_size + buffer_padding]'/>
<fun r='_ZN2cv10AutoBufferC1Ev'/>
<fun r='_ZN2cv10AutoBufferC1Em'/>
<fun r='_ZN2cv10AutoBufferD1Ev'/>
<fun r='_ZN2cv10AutoBuffer8allocateEm'/>
<fun r='_ZN2cv10AutoBuffer10deallocateEv'/>
<fun r='_ZN2cv10AutoBuffercvPT_Ev'/>
<fun r='_ZNK2cv10AutoBuffercvPKT_Ev'/>
