<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1000' ll='1009'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1011' ll='1021'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1023' ll='1033'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1035' ll='1045'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1047' ll='1057'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1059' ll='1069'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1071' ll='1081'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1083' ll='1093'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1095' ll='1105'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1107' ll='1117'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1119' ll='1129'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1131' ll='1141'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1143' ll='1153'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1155' ll='1165'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1167' ll='1177'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1179' ll='1189'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1191' ll='1201'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1203' ll='1213'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1215' ll='1225'/>
<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1227' ll='1237'/>
<size>1</size>
<doc f='opencv/modules/core/include/opencv2/core/core.hpp' l='989'>/*!
   Informative template class for OpenCV &quot;scalars&quot;.

   The class is specialized for each primitive numerical type supported by OpenCV (such as unsigned char or float),
   as well as for more complex types, like cv::Complex&lt;&gt;, std::complex&lt;&gt;, cv::Vec&lt;&gt; etc.
   The common property of all such types (called &quot;scalars&quot;, do not confuse it with cv::Scalar_)
   is that each of them is basically a tuple of numbers of the same type. Each &quot;scalar&quot; can be represented
   by the depth id (CV_8U ... CV_64F) and the number of channels.
   OpenCV matrices, 2D or nD, dense or sparse, can store &quot;scalars&quot;,
   as long as the number of channels does not exceed CV_CN_MAX.
*/</doc>
<def f='opencv/modules/core/include/opencv2/core/affine.hpp' l='142' ll='157'/>
