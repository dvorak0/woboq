<inh f='opencv/modules/core/include/opencv2/core/core.hpp' l='4464' c='cv::Algorithm'/>
<def f='opencv/modules/features2d/include/opencv2/features2d/features2d.hpp' l='205' ll='242'/>
<ovr f='opencv/modules/features2d/include/opencv2/features2d/features2d.hpp' l='249' c='cv::Feature2D'/>
<ovr f='opencv/modules/features2d/include/opencv2/features2d/features2d.hpp' l='411' c='cv::FREAK'/>
<ovr f='opencv/modules/features2d/include/opencv2/features2d/features2d.hpp' l='888' c='cv::OpponentColorDescriptorExtractor'/>
<ovr f='opencv/modules/features2d/include/opencv2/features2d/features2d.hpp' l='910' c='cv::BriefDescriptorExtractor'/>
<size>8</size>
<doc f='opencv/modules/features2d/include/opencv2/features2d/features2d.hpp' l='196'>/*
 * Abstract base class for computing descriptors for image keypoints.
 *
 * In this interface we assume a keypoint descriptor can be represented as a
 * dense, fixed-dimensional vector of some basic type. Most descriptors used
 * in practice follow this pattern, as it makes it very easy to compute
 * distances between descriptors. Therefore we represent a collection of
 * descriptors as a Mat, where each row is one keypoint descriptor.
 */</doc>
<fun r='_ZN2cv19DescriptorExtractorD1Ev'/>
<fun r='_ZNK2cv19DescriptorExtractor7computeERKNS_3MatERSt6vectorINS_8KeyPointESaIS5_EERS1_'/>
<fun r='_ZNK2cv19DescriptorExtractor7computeERKSt6vectorINS_3MatESaIS2_EERS1_IS1_INS_8KeyPointESaIS7_EESaIS9_EERS4_'/>
<fun r='_ZNK2cv19DescriptorExtractor14descriptorSizeEv'/>
<fun r='_ZNK2cv19DescriptorExtractor14descriptorTypeEv'/>
<fun r='_ZNK2cv19DescriptorExtractor5emptyEv'/>
<fun r='_ZN2cv19DescriptorExtractor6createERKSs'/>
<fun r='_ZNK2cv19DescriptorExtractor11computeImplERKNS_3MatERSt6vectorINS_8KeyPointESaIS5_EERS1_'/>
<fun r='_ZN2cv19DescriptorExtractor21removeBorderKeypointsERSt6vectorINS_8KeyPointESaIS2_EENS_5Size_IiEEi'/>
<ovr f='opencv/modules/legacy/include/opencv2/legacy/legacy.hpp' l='2759' c='cv::CalonderDescriptorExtractor'/>
