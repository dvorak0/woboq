<dec f='opencv/modules/contrib/src/templatebuffer.hpp' l='303' type='void cv::TemplateBuffer::normalizeGrayOutputNearZeroCentreredSigmoide(type * inputPicture = (type *)__null, type * outputBuffer = (type *)__null, const type sensitivity = (type)40, const type maxOutputValue = (type)255.)'/>
<def f='opencv/modules/contrib/src/templatebuffer.hpp' l='451' ll='470' type='void cv::TemplateBuffer::normalizeGrayOutputNearZeroCentreredSigmoide(type * inputBuffer = (type *)__null, type * outputBuffer = (type *)__null, const type sensitivity = (type)40, const type maxOutputValue = (type)255.)'/>
<doc f='opencv/modules/contrib/src/templatebuffer.hpp' l='296'>/**
        * sigmoide image normalization function (saturates min and max values), in this function, the sigmoide is centered on low values (high saturation of the medium and high values
        * @param inputPicture: the image to be normalized if no parameter, then, the built in buffer reachable by getOutput() function is normalized
        * @param outputBuffer: the ouput buffer on which the result is writed, if no parameter, then, the built in buffer reachable by getOutput() function is normalized
        * @param sensitivity: strenght of the sigmoide
        * @param maxOutputValue: the maximum output value
        */</doc>
<doc f='opencv/modules/contrib/src/templatebuffer.hpp' l='450'>// normalize data with a sigmoide close to 0 (saturates values for those superior to 0)</doc>
<use f='opencv/modules/contrib/src/magnoretinafilter.hpp' l='168' u='c' c='_ZN2cv17MagnoRetinaFilter44normalizeGrayOutputNearZeroCentreredSigmoideEv'/>
