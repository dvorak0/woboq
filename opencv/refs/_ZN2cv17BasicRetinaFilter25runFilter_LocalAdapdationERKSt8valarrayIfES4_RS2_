<dec f='opencv/modules/contrib/src/basicretinafilter.hpp' l='201' type='void cv::BasicRetinaFilter::runFilter_LocalAdapdation(const std::valarray&lt;float&gt; &amp; inputFrame, const std::valarray&lt;float&gt; &amp; localLuminance, std::valarray&lt;float&gt; &amp; outputFrame)'/>
<def f='opencv/modules/contrib/src/basicretinafilter.cpp' l='302' ll='305' type='void cv::BasicRetinaFilter::runFilter_LocalAdapdation(const std::valarray&lt;float&gt; &amp; inputFrame, const std::valarray&lt;float&gt; &amp; localLuminance, std::valarray&lt;float&gt; &amp; outputFrame)'/>
<doc f='opencv/modules/contrib/src/basicretinafilter.cpp' l='301'>// run local adaptation filter at a specific output adress</doc>
<doc f='opencv/modules/contrib/src/basicretinafilter.hpp' l='195'>/**
        *  local luminance adaptation call and run (contrast enhancement property of the photoreceptors)
        * @param inputFrame: the input image to be processed
        * @param localLuminance: an image which represents the local luminance of the inputFrame parameter, in general, it is its low pass spatial filtering
        * @param outputFrame: the output buffer in which the result is writed
        */</doc>
<doc f='opencv/modules/contrib/src/basicretinafilter.hpp' l='201'>// run local adaptation filter on a specific output adress</doc>
<use f='opencv/modules/contrib/src/retinafilter.cpp' l='379' u='c' c='_ZN2cv12RetinaFilter19_runGrayToneMappingERKSt8valarrayIfERS2_ff'/>
<use f='opencv/modules/contrib/src/retinafilter.cpp' l='390' u='c' c='_ZN2cv12RetinaFilter19_runGrayToneMappingERKSt8valarrayIfERS2_ff'/>
