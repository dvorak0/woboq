<dec f='opencv/modules/contrib/src/basicretinafilter.hpp' l='429' type='void cv::BasicRetinaFilter::_verticalAnticausalFilter_multGain(float * outputFrame, unsigned int IDcolumnStart, unsigned int IDcolumnEnd)'/>
<use f='opencv/modules/contrib/src/basicretinafilter.cpp' l='409' u='c' c='_ZN2cv17BasicRetinaFilter29runFilter_LPfilter_AutonomousERSt8valarrayIfEj'/>
<use f='opencv/modules/contrib/src/basicretinafilter.cpp' l='425' u='c' c='_ZN2cv17BasicRetinaFilter23_spatiotemporalLPfilterEPKfPfj'/>
<def f='opencv/modules/contrib/src/basicretinafilter.cpp' l='567' ll='588' type='void cv::BasicRetinaFilter::_verticalAnticausalFilter_multGain(float * outputFrame, unsigned int IDcolumnStart, unsigned int IDcolumnEnd)'/>
<doc f='opencv/modules/contrib/src/basicretinafilter.cpp' l='566'>//  vertical anticausal filter which multiplies the output by _gain</doc>
<doc f='opencv/modules/contrib/src/basicretinafilter.hpp' l='428'>// 1D filters in which the output is multiplied by _gain</doc>
<doc f='opencv/modules/contrib/src/basicretinafilter.hpp' l='429'>// this functions affects _gain at the output // parallelized with TBB</doc>
