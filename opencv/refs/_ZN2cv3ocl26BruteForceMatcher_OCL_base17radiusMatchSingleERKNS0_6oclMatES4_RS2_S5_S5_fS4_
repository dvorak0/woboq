<dec f='opencv/modules/ocl/include/opencv2/ocl/ocl.hpp' l='1285' type='void cv::ocl::BruteForceMatcher_OCL_base::radiusMatchSingle(const cv::ocl::oclMat &amp; query, const cv::ocl::oclMat &amp; train, cv::ocl::oclMat &amp; trainIdx, cv::ocl::oclMat &amp; distance, cv::ocl::oclMat &amp; nMatches, float maxDistance, const cv::ocl::oclMat &amp; mask = cv::ocl::oclMat())'/>
<doc f='opencv/modules/ocl/include/opencv2/ocl/ocl.hpp' l='1278'>// Find best matches for each query descriptor which have distance less than maxDistance.
            // nMatches.at&lt;int&gt;(0, queryIdx) will contain matches count for queryIdx.
            // carefully nMatches can be greater than trainIdx.cols - it means that matcher didn&apos;t find all matches,
            // because it didn&apos;t have enough memory.
            // If trainIdx is empty, then trainIdx and distance will be created with size nQuery x max((nTrain / 100), 10),
            // otherwize user can pass own allocated trainIdx and distance with size nQuery x nMaxMatches
            // Matches doesn&apos;t sorted.</doc>
<def f='opencv/modules/ocl/src/brute_force_matcher.cpp' l='992' ll='1017' type='void cv::ocl::BruteForceMatcher_OCL_base::radiusMatchSingle(const cv::ocl::oclMat &amp; query, const cv::ocl::oclMat &amp; train, cv::ocl::oclMat &amp; trainIdx, cv::ocl::oclMat &amp; distance, cv::ocl::oclMat &amp; nMatches, float maxDistance, const cv::ocl::oclMat &amp; mask = cv::ocl::oclMat())'/>
<use f='opencv/modules/ocl/src/brute_force_matcher.cpp' l='1085' u='c' c='_ZN2cv3ocl26BruteForceMatcher_OCL_base11radiusMatchERKNS0_6oclMatES4_RSt6vectorIS5_INS_6DMatchESaIS6_EESaIS8_EEfS4_b'/>
<doc f='opencv/modules/ocl/src/brute_force_matcher.cpp' l='991'>// radiusMatchSingle</doc>
