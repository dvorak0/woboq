<dec f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='631' type='void cv::gpu::reprojectImageTo3D(const cv::gpu::GpuMat &amp; disp, cv::gpu::GpuMat &amp; xyzw, const cv::Mat &amp; Q, int dst_cn = 4, cv::gpu::Stream &amp; stream = Stream::Null())'/>
<use f='opencv/modules/gpu/perf/perf_calib3d.cpp' l='332' u='c' c='_ZN35Sz_Depth_Calib3D_ReprojectImageTo3D12PerfTestBodyEv'/>
<doc f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='626'>//! Reprojects disparity image to 3D space.
//! Supports CV_8U and CV_16S types of input disparity.
//! The output is a 3- or 4-channel floating-point matrix.
//! Each element of this matrix will contain the 3D coordinates of the point (x,y,z,1), computed from the disparity map.
//! Q is the 4x4 perspective transformation matrix that can be obtained with cvStereoRectify.</doc>
<def f='opencv/modules/gpu/src/imgproc.cpp' l='224' ll='242' type='void cv::gpu::reprojectImageTo3D(const cv::gpu::GpuMat &amp; disp, cv::gpu::GpuMat &amp; xyz, const cv::Mat &amp; Q, int dst_cn = 4, cv::gpu::Stream &amp; stream = Stream::Null())'/>
<use f='opencv/modules/gpu/test/test_calib3d.cpp' l='338' u='c' c='_ZN32ReprojectImageTo3D_Accuracy_Test14UnsafeTestBodyEv'/>
