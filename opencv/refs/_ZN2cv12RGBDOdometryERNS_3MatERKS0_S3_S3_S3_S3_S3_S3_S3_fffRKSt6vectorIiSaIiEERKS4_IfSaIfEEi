<dec f='opencv/modules/contrib/include/opencv2/contrib/contrib.hpp' l='637' type='bool cv::RGBDOdometry(cv::Mat &amp; Rt, const cv::Mat &amp; initRt, const cv::Mat &amp; image0, const cv::Mat &amp; depth0, const cv::Mat &amp; mask0, const cv::Mat &amp; image1, const cv::Mat &amp; depth1, const cv::Mat &amp; mask1, const cv::Mat &amp; cameraMatrix, float minDepth = 0.F, float maxDepth = 4.F, float maxDepthDiff = 0.0700000003F, const std::vector&lt;int&gt; &amp; iterCounts = std::vector&lt;int&gt;(), const std::vector&lt;float&gt; &amp; minGradientMagnitudes = std::vector&lt;float&gt;(), int transformType = RIGID_BODY_MOTION)'/>
<def f='opencv/modules/contrib/src/rgbdodometry.cpp' l='504' ll='636' type='bool cv::RGBDOdometry(cv::Mat &amp; Rt, const cv::Mat &amp; initRt, const cv::Mat &amp; image0, const cv::Mat &amp; _depth0, const cv::Mat &amp; validMask0, const cv::Mat &amp; image1, const cv::Mat &amp; _depth1, const cv::Mat &amp; validMask1, const cv::Mat &amp; cameraMatrix, float minDepth = 0.F, float maxDepth = 4.F, float maxDepthDiff = 0.0700000003F, const std::vector&lt;int&gt; &amp; iterCounts = std::vector&lt;int&gt;(), const std::vector&lt;float&gt; &amp; minGradientMagnitudes = std::vector&lt;float&gt;(), int transformType = RIGID_BODY_MOTION)'/>
