<dec f='opencv/modules/highgui/include/opencv2/highgui/highgui_c.h' l='213' type='IplImage * cvLoadImage(const char * filename, int iscolor = CV_LOAD_IMAGE_COLOR)'/>
<doc f='opencv/modules/highgui/include/opencv2/highgui/highgui_c.h' l='207'>/* load image from file
  iscolor can be a combination of above flags where CV_LOAD_IMAGE_UNCHANGED
  overrides the other flags
  using CV_LOAD_IMAGE_ANYCOLOR alone is equivalent to CV_LOAD_IMAGE_UNCHANGED
  unless CV_LOAD_IMAGE_ANYDEPTH is specified images are converted to 8bit
*/</doc>
<use f='opencv/apps/haartraining/cvhaartraining.cpp' l='1363' u='c' c='_ZL28icvGetNextFromBackgroundDataP16CvBackgroundDataP18CvBackgroundReader'/>
<use f='opencv/apps/haartraining/cvsamples.cpp' l='467' u='c' c='_Z24icvStartSampleDistortionPKciiP22CvSampleDistortionData'/>
<use f='opencv/apps/haartraining/cvsamples.cpp' l='813' u='c' c='_Z31cvCreateTrainingSamplesFromInfoPKcS0_iiii'/>
<use f='opencv/apps/haartraining/performance.cpp' l='246' u='c' c='main'/>
<use f='opencv/modules/calib3d/test/test_chesscorners_timing.cpp' l='108' u='c' c='_ZN31CV_ChessboardDetectorTimingTest3runEi'/>
<use f='opencv/modules/highgui/src/cap_images.cpp' l='127' u='c' c='_ZN16CvCapture_Images9grabFrameEv'/>
<def f='opencv/modules/highgui/src/loadsave.cpp' l='474' ll='478' type='IplImage * cvLoadImage(const char * filename, int iscolor = CV_LOAD_IMAGE_COLOR)'/>
<use f='opencv/modules/legacy/src/image.cpp' l='120' u='c' c='_ZN7CvImage4loadEPKcS1_i'/>
<use f='opencv/modules/legacy/src/oneway.cpp' l='1806' u='c' c='_ZN2cv15loadPCAFeaturesEPKcS1_RSt6vectorIP9_IplImageSaIS4_EE6CvSize'/>
<use f='opencv/modules/objdetect/test/test_latentsvmdetector.cpp' l='87' u='c' c='_ZN24CV_LatentSVMDetectorTest3runEi'/>
<use f='opencv/modules/python/src2/cv2.cv.hpp' l='2627' u='c' c='_ZL13pycvLoadImageP7_objectS0_S0_'/>
<use f='opencv/modules/video/test/test_optflowpyrlk.cpp' l='118' u='c' c='_ZN19CV_OptFlowPyrLKTest3runEi'/>
<use f='opencv/modules/video/test/test_optflowpyrlk.cpp' l='129' u='c' c='_ZN19CV_OptFlowPyrLKTest3runEi'/>
