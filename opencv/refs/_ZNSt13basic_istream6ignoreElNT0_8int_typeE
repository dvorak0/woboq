<dec f='include/c++/4.8/istream' l='451' type='__istream_type &amp; std::basic_istream::ignore(streamsize __n, int_type __delim)'/>
<dec f='include/c++/4.8/istream' l='629' type='basic_istream&lt;char&gt; &amp; std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;::ignore(streamsize __n, int_type __delim)'/>
<dec f='include/c++/4.8/istream' l='645' type='basic_istream&lt;wchar_t&gt; &amp; std::basic_istream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt;::ignore(streamsize __n, int_type __delim)'/>
<def f='include/c++/4.8/bits/istream.tcc' l='552' ll='615' type='basic_istream&lt;_CharT, _Traits&gt; &amp; std::basic_istream::ignore(streamsize __n, int_type __delim)'/>
<doc f='include/c++/4.8/istream' l='430'>/**
       *  @brief  Discarding characters
       *  @param  __n  Number of characters to discard.
       *  @param  __delim  A &quot;stop&quot; character.
       *  @return  *this
       *
       *  Extracts characters and throws them away until one of the
       *  following happens:
       *  - if @a __n @c != @c std::numeric_limits&lt;int&gt;::max(), @a __n
       *    characters are extracted
       *  - the input sequence reaches end-of-file
       *  - the next character equals @a __delim (in this case, the character
       *    is extracted); note that this condition will never occur if
       *    @a __delim equals @c traits::eof().
       *
       *  NB: Provide three overloads, instead of the single function
       *  (with defaults) mandated by the Standard: this leads to a
       *  better performing implementation, while still conforming to
       *  the Standard.
      */</doc>
