<dec f='include/eigen3/Eigen/src/Core/DenseBase.h' l='322' type='static const ConstantReturnType Eigen::DenseBase::Zero(Index size)'/>
<def f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='449' ll='454' type='static const typename DenseBase&lt;Derived&gt;::ConstantReturnType Eigen::DenseBase::Zero(Index size)'/>
<doc f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='433'>/** \returns an expression of a zero vector.
  *
  * The parameter \a size is the size of the returned vector.
  * Must be compatible with this MatrixBase type.
  *
  * \only_for_vectors
  *
  * This variant is meant to be used for dynamic-size vector types. For fixed-size types,
  * it is redundant to pass \a size as argument, so Zero() should be used
  * instead.
  *
  * Example: \include MatrixBase_zero_int.cpp
  * Output: \verbinclude MatrixBase_zero_int.out
  *
  * \sa Zero(), Zero(Index,Index)
  */</doc>
