<def f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='49' ll='380'/>
<doc f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='28'>/** \ingroup QR_Module
  *
  * \class FullPivHouseholderQR
  *
  * \brief Householder rank-revealing QR decomposition of a matrix with full pivoting
  *
  * \param MatrixType the type of the matrix of which we are computing the QR decomposition
  *
  * This class performs a rank-revealing QR decomposition of a matrix \b A into matrices \b P, \b Q and \b R
  * such that 
  * \f[
  *  \mathbf{A} \, \mathbf{P} = \mathbf{Q} \, \mathbf{R}
  * \f]
  * by using Householder transformations. Here, \b P is a permutation matrix, \b Q a unitary matrix and \b R an 
  * upper triangular matrix.
  *
  * This decomposition performs a very prudent full pivoting in order to be rank-revealing and achieve optimal
  * numerical stability. The trade-off is that it is slower than HouseholderQR and ColPivHouseholderQR.
  *
  * \sa MatrixBase::fullPivHouseholderQr()
  */</doc>
<fun r='_ZN5Eigen20FullPivHouseholderQRC1Ev'/>
<fun r='_ZN5Eigen20FullPivHouseholderQRC1ENT_5IndexES2_'/>
<fun r='_ZN5Eigen20FullPivHouseholderQRC1ERKT_'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR5solveERKNS_10MatrixBaseIT_EE'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR7matrixQEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR8matrixQREv'/>
<fun r='_ZN5Eigen20FullPivHouseholderQR7computeERKT_'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR15colsPermutationEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR18rowsTranspositionsEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR14absDeterminantEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR17logAbsDeterminantEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR4rankEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR17dimensionOfKernelEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR11isInjectiveEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR12isSurjectiveEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR12isInvertibleEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR7inverseEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR4rowsEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR4colsEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR7hCoeffsEv'/>
<fun r='_ZN5Eigen20FullPivHouseholderQR12setThresholdERKNT_10RealScalarE'/>
<fun r='_ZN5Eigen20FullPivHouseholderQR12setThresholdENS_9Default_tE'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR9thresholdEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR13nonzeroPivotsEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR8maxPivotEv'/>
<mbr r='Eigen::FullPivHouseholderQR::m_qr' t='MatrixType'/>
<mbr r='Eigen::FullPivHouseholderQR::m_hCoeffs' t='HCoeffsType'/>
<mbr r='Eigen::FullPivHouseholderQR::m_rows_transpositions' t='IntColVectorType'/>
<mbr r='Eigen::FullPivHouseholderQR::m_cols_transpositions' t='IntRowVectorType'/>
<mbr r='Eigen::FullPivHouseholderQR::m_cols_permutation' t='PermutationType'/>
<mbr r='Eigen::FullPivHouseholderQR::m_temp' t='RowVectorType'/>
<mbr r='Eigen::FullPivHouseholderQR::m_isInitialized' t='bool'/>
<mbr r='Eigen::FullPivHouseholderQR::m_usePrescribedThreshold' t='bool'/>
<mbr r='Eigen::FullPivHouseholderQR::m_prescribedThreshold' t='RealScalar'/>
<mbr r='Eigen::FullPivHouseholderQR::m_maxpivot' t='RealScalar'/>
<mbr r='Eigen::FullPivHouseholderQR::m_nonzero_pivots' t='Index'/>
<mbr r='Eigen::FullPivHouseholderQR::m_precision' t='RealScalar'/>
<mbr r='Eigen::FullPivHouseholderQR::m_det_pq' t='Index'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR14absDeterminantEv'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR17logAbsDeterminantEv'/>
<fun r='_ZN5Eigen20FullPivHouseholderQR7computeERKT_'/>
<fun r='_ZNK5Eigen20FullPivHouseholderQR7matrixQEv'/>
