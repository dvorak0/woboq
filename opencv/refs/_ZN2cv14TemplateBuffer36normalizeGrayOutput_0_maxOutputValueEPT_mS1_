<dec f='opencv/modules/contrib/src/templatebuffer.hpp' l='268' type='static void cv::TemplateBuffer::normalizeGrayOutput_0_maxOutputValue(type * inputOutputBuffer, const size_t nbPixels, const type maxOutputValue = (type)255.)'/>
<def f='opencv/modules/contrib/src/templatebuffer.hpp' l='425' ll='449' type='static void cv::TemplateBuffer::normalizeGrayOutput_0_maxOutputValue(type * inputOutputBuffer, const size_t processedPixels, const type maxOutputValue = (type)255.)'/>
<doc f='opencv/modules/contrib/src/templatebuffer.hpp' l='262'>/**
        * standard 0 to 255 image normalization function
        * @param inputOutputBuffer: the image to be normalized (rewrites the input), if no parameter, then, the built in buffer reachable by getOutput() function is normalized
        * @param nbPixels: specifies the number of pixel on which the normalization should be performed, if 0, then all pixels specified in the constructor are processed
        * @param maxOutputValue: the maximum output value
        */</doc>
<doc f='opencv/modules/contrib/src/templatebuffer.hpp' l='423'>///////////////////////////////////////////////////////////////////////
    /// normalize output between 0 and 255, can be applied on images of different size that the declared size if nbPixels parameters is setted up;</doc>
<use f='opencv/modules/contrib/src/retinacolor.cpp' l='420' u='c' c='_ZN2cv11RetinaColor35normalizeRGBOutput_0_maxOutputValueEf'/>
<use f='opencv/modules/contrib/src/retinacolor.cpp' l='425' u='c' c='_ZN2cv11RetinaColor35normalizeRGBOutput_0_maxOutputValueEf'/>
<use f='opencv/modules/contrib/src/retinafilter.cpp' l='487' u='c' c='_ZN2cv12RetinaFilter31_processRetinaParvoMagnoMappingEv'/>
