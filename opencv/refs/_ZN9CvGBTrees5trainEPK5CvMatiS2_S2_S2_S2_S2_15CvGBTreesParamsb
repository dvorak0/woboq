<dec f='opencv/modules/ml/include/opencv2/ml/ml.hpp' l='1506' type='bool CvGBTrees::train(const CvMat * trainData, int tflag, const CvMat * responses, const CvMat * varIdx = 0, const CvMat * sampleIdx = 0, const CvMat * varType = 0, const CvMat * missingDataMask = 0, CvGBTreesParams params = CvGBTreesParams(), bool update = false)'/>
<doc f='opencv/modules/ml/include/opencv2/ml/ml.hpp' l='1467'>/*
    // Gradient tree boosting model training
    //
    // API
    // virtual bool train( const CvMat* trainData, int tflag,
             const CvMat* responses, const CvMat* varIdx=0,
             const CvMat* sampleIdx=0, const CvMat* varType=0,
             const CvMat* missingDataMask=0,
             CvGBTreesParams params=CvGBTreesParams(),
             bool update=false );

    // INPUT
    // trainData    - a set of input feature vectors.
    //                  size of matrix is
    //                  &lt;count of samples&gt; x &lt;variables count&gt;
    //                  or &lt;variables count&gt; x &lt;count of samples&gt;
    //                  depending on the tflag parameter.
    //                  matrix values are float.
    // tflag         - a flag showing how do samples stored in the
    //                  trainData matrix row by row (tflag=CV_ROW_SAMPLE)
    //                  or column by column (tflag=CV_COL_SAMPLE).
    // responses     - a vector of responses corresponding to the samples
    //                  in trainData.
    // varIdx       - indices of used variables. zero value means that all
    //                  variables are active.
    // sampleIdx    - indices of used samples. zero value means that all
    //                  samples from trainData are in the training set.
    // varType      - vector of &lt;variables count&gt; length. gives every
    //                  variable type CV_VAR_CATEGORICAL or CV_VAR_ORDERED.
    //                  varType = 0 means all variables are numerical.
    // missingDataMask  - a mask of misiing values in trainData.
    //                  missingDataMask = 0 means that there are no missing
    //                  values.
    // params         - parameters of GTB algorithm.
    // update         - is not supported now. (!)
    // OUTPUT
    // RESULT
    // Error state.
    */</doc>
<use f='opencv/modules/ml/src/gbt.cpp' l='153' u='c' c='_ZN9CvGBTreesC1EPK5CvMatiS2_S2_S2_S2_S2_15CvGBTreesParams'/>
<use f='opencv/modules/ml/src/gbt.cpp' l='174' u='c' c='_ZN9CvGBTrees5trainEP8CvMLData15CvGBTreesParamsb'/>
<def f='opencv/modules/ml/src/gbt.cpp' l='185' ll='428' type='bool CvGBTrees::train(const CvMat * _train_data, int _tflag, const CvMat * _responses, const CvMat * _var_idx = 0, const CvMat * _sample_idx = 0, const CvMat * _var_type = 0, const CvMat * _missing_mask = 0, CvGBTreesParams _params = CvGBTreesParams(), bool  = false)'/>
<use f='opencv/modules/ml/src/gbt.cpp' l='1378' u='c' c='_ZN9CvGBTrees5trainERKN2cv3MatEiS3_S3_S3_S3_S3_15CvGBTreesParamsb'/>
<doc f='opencv/modules/ml/src/gbt.cpp' l='182'>//===========================================================================</doc>
