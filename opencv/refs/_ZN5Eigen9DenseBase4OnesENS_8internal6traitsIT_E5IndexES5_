<dec f='include/eigen3/Eigen/src/Core/DenseBase.h' l='324' type='static const ConstantReturnType Eigen::DenseBase::Ones(Index rows, Index cols)'/>
<def f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='555' ll='560' type='static const typename DenseBase&lt;Derived&gt;::ConstantReturnType Eigen::DenseBase::Ones(Index nbRows, Index nbCols)'/>
<doc f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='541'>/** \returns an expression of a matrix where all coefficients equal one.
  *
  * The parameters \a nbRows and \a nbCols are the number of rows and of columns of
  * the returned matrix. Must be compatible with this MatrixBase type.
  *
  * This variant is meant to be used for dynamic-size matrix types. For fixed-size types,
  * it is redundant to pass \a rows and \a cols as arguments, so Ones() should be used
  * instead.
  *
  * Example: \include MatrixBase_ones_int_int.cpp
  * Output: \verbinclude MatrixBase_ones_int_int.out
  *
  * \sa Ones(), Ones(Index), isOnes(), class Ones
  */</doc>
