<def f='include/eigen3/Eigen/src/LU/FullPivLU.h' l='161' ll='165' type='const internal::kernel_retval&lt;FullPivLU&lt;MatrixType&gt; &gt; Eigen::FullPivLU::kernel() const'/>
<doc f='include/eigen3/Eigen/src/LU/FullPivLU.h' l='147'>/** \returns the kernel of the matrix, also called its null-space. The columns of the returned matrix
      * will form a basis of the kernel.
      *
      * \note If the kernel has dimension zero, then the returned matrix is a column-vector filled with zeros.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      *
      * Example: \include FullPivLU_kernel.cpp
      * Output: \verbinclude FullPivLU_kernel.out
      *
      * \sa image()
      */</doc>
