<dec f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='444' type='void cv::gpu::split(const cv::gpu::GpuMat &amp; src, vector&lt;cv::gpu::GpuMat&gt; &amp; dst, cv::gpu::Stream &amp; stream = Stream::Null())'/>
<doc f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='443'>//! copies each plane of a multi-channel array to a dedicated array</doc>
<use f='opencv/modules/gpu/perf/perf_core.cpp' l='117' u='c' c='_ZN22Sz_Depth_Cn_Core_Split12PerfTestBodyEv'/>
<use f='opencv/modules/gpu/src/match_template.cpp' l='285' u='c' c='_ZN12_GLOBAL__N_122matchTemplate_CCOFF_8UERKN2cv3gpu6GpuMatES4_RS2_RNS1_16MatchTemplateBufERNS1_6StreamE'/>
<use f='opencv/modules/gpu/src/match_template.cpp' l='351' u='c' c='_ZN12_GLOBAL__N_129matchTemplate_CCOFF_NORMED_8UERKN2cv3gpu6GpuMatES4_RS2_RNS1_16MatchTemplateBufERNS1_6StreamE'/>
<def f='opencv/modules/gpu/src/split_merge.cpp' l='165' ll='170' type='void cv::gpu::split(const cv::gpu::GpuMat &amp; src, vector&lt;cv::gpu::GpuMat&gt; &amp; dst, cv::gpu::Stream &amp; stream = Stream::Null())'/>
<use f='opencv/modules/gpu/test/test_core.cpp' l='150' u='c' c='_ZN19Split_Accuracy_Test14UnsafeTestBodyEv'/>
<use f='opencv/modules/gpu/test/test_core.cpp' l='160' u='c' c='_ZN19Split_Accuracy_Test14UnsafeTestBodyEv'/>
