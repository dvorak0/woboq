<dec f='opencv/modules/core/include/opencv2/core/core.hpp' l='2219' type='void cv::normalize(InputArray src, OutputArray dst, double alpha = 1, double beta = 0, int norm_type = NORM_L2, int dtype = -1, InputArray mask = noArray())'/>
<doc f='opencv/modules/core/include/opencv2/core/core.hpp' l='2218'>//! scales and shifts array elements so that either the specified norm (alpha) or the minimum (alpha) and maximum (beta) array values get the specified values</doc>
<use f='opencv/modules/contrib/src/colortracker.cpp' l='75' u='c' c='_ZN2cv18CvMeanShiftTracker17newTrackingWindowENS_3MatENS_5Rect_IiEE'/>
<use f='opencv/modules/core/perf/perf_norm.cpp' l='127' u='c' c='_ZN31Size_MatType_NormType_normalize12PerfTestBodyEv'/>
<use f='opencv/modules/core/perf/perf_norm.cpp' l='155' u='c' c='_ZN36Size_MatType_NormType_normalize_mask12PerfTestBodyEv'/>
<use f='opencv/modules/core/perf/perf_norm.cpp' l='181' u='c' c='_ZN35Size_MatType_NormType_normalize_32f12PerfTestBodyEv'/>
<use f='opencv/modules/core/perf/perf_norm.cpp' l='197' u='c' c='_ZN29Size_MatType_normalize_minmax12PerfTestBodyEv'/>
<def f='opencv/modules/core/src/convert.cpp' l='1232' ll='1269' type='void cv::normalize(InputArray _src, OutputArray _dst, double a = 1, double b = 0, int norm_type = NORM_L2, int rtype = -1, InputArray _mask = noArray())'/>
<use f='opencv/modules/core/src/convert.cpp' l='1391' u='c' c='cvNormalize'/>
<use f='opencv/modules/core/src/matmul.cpp' l='2913' u='c' c='_ZN2cv3PCAclERKNS_11_InputArrayES3_ii'/>
<use f='opencv/modules/core/src/matmul.cpp' l='3027' u='c' c='_ZN2cv3PCA10computeVarERKNS_11_InputArrayES3_id'/>
<use f='opencv/modules/gpu/perf/perf_core.cpp' l='2345' u='c' c='_ZN32Sz_Depth_NormType_Core_Normalize12PerfTestBodyEv'/>
<use f='opencv/modules/gpu/test/test_core.cpp' l='3726' u='c' c='_ZN26Normalize_WithOutMask_Test14UnsafeTestBodyEv'/>
<use f='opencv/modules/gpu/test/test_core.cpp' l='3742' u='c' c='_ZN23Normalize_WithMask_Test14UnsafeTestBodyEv'/>
<use f='opencv/modules/ml/src/em.cpp' l='240' u='c' c='_ZN2cvL21preprocessProbabilityERNS_3MatE'/>
