<dec f='include/eigen3/Eigen/src/Core/MatrixBase.h' l='381' type='RealScalar Eigen::MatrixBase::operatorNorm() const'/>
<def f='include/eigen3/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h' l='120' ll='134' type='typename MatrixBase&lt;Derived&gt;::RealScalar Eigen::MatrixBase::operatorNorm() const'/>
<doc f='include/eigen3/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h' l='98'>/** \brief Computes the L2 operator norm
  * \returns Operator norm of the matrix.
  *
  * \eigenvalues_module
  * This function computes the L2 operator norm of a matrix, which is also
  * known as the spectral norm. The norm of a matrix \f$ A \f$ is defined to be
  * \f[ \|A\|_2 = \max_x \frac{\|Ax\|_2}{\|x\|_2} \f]
  * where the maximum is over all vectors and the norm on the right is the
  * Euclidean vector norm. The norm equals the largest singular value, which is
  * the square root of the largest eigenvalue of the positive semi-definite
  * matrix \f$ A^*A \f$.
  *
  * The current implementation uses the eigenvalues of \f$ A^*A \f$, as computed
  * by SelfAdjointView::eigenvalues(), to compute the operator norm of a
  * matrix.  The SelfAdjointView class provides a better algorithm for
  * selfadjoint matrices.
  *
  * Example: \include MatrixBase_operatorNorm.cpp
  * Output: \verbinclude MatrixBase_operatorNorm.out
  *
  * \sa SelfAdjointView::eigenvalues(), SelfAdjointView::operatorNorm()
  */</doc>
