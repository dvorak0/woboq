<def f='include/OpenEXR/ImathLimits.h' l='115' ll='123'/>
<def f='include/OpenEXR/ImathLimits.h' l='130' ll='139'/>
<def f='include/OpenEXR/ImathLimits.h' l='141' ll='150'/>
<def f='include/OpenEXR/ImathLimits.h' l='152' ll='161'/>
<def f='include/OpenEXR/ImathLimits.h' l='163' ll='172'/>
<def f='include/OpenEXR/ImathLimits.h' l='174' ll='183'/>
<def f='include/OpenEXR/ImathLimits.h' l='185' ll='194'/>
<def f='include/OpenEXR/ImathLimits.h' l='196' ll='205'/>
<def f='include/OpenEXR/ImathLimits.h' l='207' ll='216'/>
<def f='include/OpenEXR/ImathLimits.h' l='218' ll='227'/>
<def f='include/OpenEXR/ImathLimits.h' l='229' ll='238'/>
<def f='include/OpenEXR/ImathLimits.h' l='240' ll='249'/>
<def f='include/OpenEXR/ImathLimits.h' l='251' ll='260'/>
<size>1</size>
<doc f='include/OpenEXR/ImathLimits.h' l='65'>//-----------------------------------------------------------------
//
// Template class limits&lt;T&gt; returns information about the limits
// of numerical data type T:
//
//	min()		largest possible negative value of type T
//
//	max()		largest possible positive value of type T
//
//	smallest()	smallest possible positive value of type T
//
//	epsilon()	smallest possible e of type T, for which
//			1 + e != 1
//
//	isIntegral()	returns true if T is an integral type
//
//	isSigned()	returns true if T is signed
//
// Class limits&lt;T&gt; is useful to implement template classes or
// functions which depend on the limits of a numerical type
// which is not known in advance; for example:
//
//	template &lt;class T&gt; max (T x[], int n)
//	{
//	    T m = limits&lt;T&gt;::min();
//
//	    for (int i = 0; i &lt; n; i++)
//		if (m &lt; x[i])
//		    m = x[i];
//
//	    return m;
//	}
//
// Class limits&lt;T&gt; has been implemented for the following types:
//
//	char, signed char, unsigned char
//	short, unsigned short
//	int, unsigned int
//	long, unsigned long
//	float
//	double
//	long double
//
// Class limits&lt;T&gt; has only static member functions, all of which
// are implemented as inlines.  No objects of type limits&lt;T&gt; are
// ever created.
//
//-----------------------------------------------------------------</doc>
<doc f='include/OpenEXR/ImathLimits.h' l='126'>//---------------
// Implementation
//---------------</doc>
<fun r='_ZN5Imath6limits3minEv'/>
<fun r='_ZN5Imath6limits3maxEv'/>
<fun r='_ZN5Imath6limits8smallestEv'/>
<fun r='_ZN5Imath6limits7epsilonEv'/>
<fun r='_ZN5Imath6limits10isIntegralEv'/>
<fun r='_ZN5Imath6limits8isSignedEv'/>
<fun r='_ZN5Imath6limitsIcE3minEv'/>
<fun r='_ZN5Imath6limitsIcE3maxEv'/>
<fun r='_ZN5Imath6limitsIcE8smallestEv'/>
<fun r='_ZN5Imath6limitsIcE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIcE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIcE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIaE3minEv'/>
<fun r='_ZN5Imath6limitsIaE3maxEv'/>
<fun r='_ZN5Imath6limitsIaE8smallestEv'/>
<fun r='_ZN5Imath6limitsIaE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIaE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIaE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIhE3minEv'/>
<fun r='_ZN5Imath6limitsIhE3maxEv'/>
<fun r='_ZN5Imath6limitsIhE8smallestEv'/>
<fun r='_ZN5Imath6limitsIhE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIhE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIhE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIsE3minEv'/>
<fun r='_ZN5Imath6limitsIsE3maxEv'/>
<fun r='_ZN5Imath6limitsIsE8smallestEv'/>
<fun r='_ZN5Imath6limitsIsE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIsE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIsE8isSignedEv'/>
<fun r='_ZN5Imath6limitsItE3minEv'/>
<fun r='_ZN5Imath6limitsItE3maxEv'/>
<fun r='_ZN5Imath6limitsItE8smallestEv'/>
<fun r='_ZN5Imath6limitsItE7epsilonEv'/>
<fun r='_ZN5Imath6limitsItE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsItE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIiE3minEv'/>
<fun r='_ZN5Imath6limitsIiE3maxEv'/>
<fun r='_ZN5Imath6limitsIiE8smallestEv'/>
<fun r='_ZN5Imath6limitsIiE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIiE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIiE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIjE3minEv'/>
<fun r='_ZN5Imath6limitsIjE3maxEv'/>
<fun r='_ZN5Imath6limitsIjE8smallestEv'/>
<fun r='_ZN5Imath6limitsIjE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIjE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIjE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIlE3minEv'/>
<fun r='_ZN5Imath6limitsIlE3maxEv'/>
<fun r='_ZN5Imath6limitsIlE8smallestEv'/>
<fun r='_ZN5Imath6limitsIlE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIlE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIlE8isSignedEv'/>
<fun r='_ZN5Imath6limitsImE3minEv'/>
<fun r='_ZN5Imath6limitsImE3maxEv'/>
<fun r='_ZN5Imath6limitsImE8smallestEv'/>
<fun r='_ZN5Imath6limitsImE7epsilonEv'/>
<fun r='_ZN5Imath6limitsImE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsImE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIfE3minEv'/>
<fun r='_ZN5Imath6limitsIfE3maxEv'/>
<fun r='_ZN5Imath6limitsIfE8smallestEv'/>
<fun r='_ZN5Imath6limitsIfE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIfE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIfE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIdE3minEv'/>
<fun r='_ZN5Imath6limitsIdE3maxEv'/>
<fun r='_ZN5Imath6limitsIdE8smallestEv'/>
<fun r='_ZN5Imath6limitsIdE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIdE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIdE8isSignedEv'/>
<fun r='_ZN5Imath6limitsIeE3minEv'/>
<fun r='_ZN5Imath6limitsIeE3maxEv'/>
<fun r='_ZN5Imath6limitsIeE8smallestEv'/>
<fun r='_ZN5Imath6limitsIeE7epsilonEv'/>
<fun r='_ZN5Imath6limitsIeE10isIntegralEv'/>
<fun r='_ZN5Imath6limitsIeE8isSignedEv'/>
