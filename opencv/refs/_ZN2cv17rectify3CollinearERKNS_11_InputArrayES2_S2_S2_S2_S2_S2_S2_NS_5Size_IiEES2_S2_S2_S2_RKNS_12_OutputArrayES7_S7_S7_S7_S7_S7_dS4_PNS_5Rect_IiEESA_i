<dec f='opencv/modules/calib3d/include/opencv2/calib3d/calib3d.hpp' l='597' type='float cv::rectify3Collinear(InputArray cameraMatrix1, InputArray distCoeffs1, InputArray cameraMatrix2, InputArray distCoeffs2, InputArray cameraMatrix3, InputArray distCoeffs3, InputArrayOfArrays imgpt1, InputArrayOfArrays imgpt3, Size imageSize, InputArray R12, InputArray T12, InputArray R13, InputArray T13, OutputArray R1, OutputArray R2, OutputArray R3, OutputArray P1, OutputArray P2, OutputArray P3, OutputArray Q, double alpha, Size newImgSize, Rect * roi1, Rect * roi2, int flags)'/>
<doc f='opencv/modules/calib3d/include/opencv2/calib3d/calib3d.hpp' l='596'>//! computes the rectification transformations for 3-head camera, where all the heads are on the same line.</doc>
<def f='opencv/modules/calib3d/src/calibration.cpp' l='3733' ll='3803' type='float cv::rectify3Collinear(InputArray _cameraMatrix1, InputArray _distCoeffs1, InputArray _cameraMatrix2, InputArray _distCoeffs2, InputArray _cameraMatrix3, InputArray _distCoeffs3, InputArrayOfArrays _imgpt1, InputArrayOfArrays _imgpt3, Size imageSize, InputArray _Rmat12, InputArray _Tmat12, InputArray _Rmat13, InputArray _Tmat13, OutputArray _Rmat1, OutputArray _Rmat2, OutputArray _Rmat3, OutputArray _Pmat1, OutputArray _Pmat2, OutputArray _Pmat3, OutputArray _Qmat, double alpha, Size newImgSize, Rect * roi1, Rect * roi2, int flags)'/>
