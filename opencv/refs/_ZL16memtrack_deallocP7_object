<def f='opencv/modules/python/src2/cv2.cv.hpp' l='907' ll='917' type='void memtrack_dealloc(PyObject * self)'/>
<use f='opencv/modules/python/src2/cv2.cv.hpp' l='951' u='r' c='_ZL17memtrack_specialsv'/>
<doc f='opencv/modules/python/src2/cv2.cv.hpp' l='893'>/* Motivation for memtrack is when the storage for a Mat is an array or buffer
object.  By setting &apos;data&apos; to be a memtrack, can deallocate the storage at
object destruction.

For array objects, &apos;backing&apos; is the actual storage object.  memtrack holds the reference,
then DECREF&apos;s it at dealloc.

For MatND&apos;s, we need to cvDecRefData() on release, and this is what field &apos;backingmat&apos; is for.

If freeptr is true, then a straight cvFree() of ptr happens.

*/</doc>
