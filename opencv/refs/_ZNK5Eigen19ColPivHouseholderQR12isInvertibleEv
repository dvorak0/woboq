<def f='include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h' l='275' ll='279' type='bool Eigen::ColPivHouseholderQR::isInvertible() const'/>
<doc f='include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h' l='269'>/** \returns true if the matrix of which *this is the QR decomposition is invertible.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      */</doc>
