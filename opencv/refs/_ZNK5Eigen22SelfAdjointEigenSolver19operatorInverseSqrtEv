<def f='include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h' l='299' ll='304' type='MatrixType Eigen::SelfAdjointEigenSolver::operatorInverseSqrt() const'/>
<doc f='include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h' l='281'>/** \brief Computes the inverse square root of the matrix.
      *
      * \returns the inverse positive-definite square root of the matrix
      *
      * \pre The eigenvalues and eigenvectors of a positive-definite matrix
      * have been computed before.
      *
      * This function uses the eigendecomposition \f$ A = V D V^{-1} \f$ to
      * compute the inverse square root as \f$ V D^{-1/2} V^{-1} \f$. This is
      * cheaper than first computing the square root with operatorSqrt() and
      * then its inverse with MatrixBase::inverse().
      *
      * Example: \include SelfAdjointEigenSolver_operatorInverseSqrt.cpp
      * Output: \verbinclude SelfAdjointEigenSolver_operatorInverseSqrt.out
      *
      * \sa operatorSqrt(), MatrixBase::inverse(),
      *     \ref MatrixFunctions_Module &quot;MatrixFunctions Module&quot;
      */</doc>
