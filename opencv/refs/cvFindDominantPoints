<dec f='opencv/modules/legacy/include/opencv2/legacy/legacy.hpp' l='293' type='CvSeq * cvFindDominantPoints(CvSeq * contour, CvMemStorage * storage, int method = 1, double parameter1 = 0, double parameter2 = 0, double parameter3 = 0, double parameter4 = 0)'/>
<doc f='opencv/modules/legacy/include/opencv2/legacy/legacy.hpp' l='292'>/* Finds high-curvature points of the contour */</doc>
<def f='opencv/modules/legacy/src/dominants.cpp' l='358' ll='400' type='CvSeq * cvFindDominantPoints(CvSeq * contour, CvMemStorage * storage, int method = 1, double parameter1 = 0, double parameter2 = 0, double parameter3 = 0, double parameter4 = 0)'/>
<doc f='opencv/modules/legacy/src/dominants.cpp' l='333'>/*F///////////////////////////////////////////////////////////////////////////////////////
//    Name: icvFindDominantPoints
//    Purpose:
//      Applies some algorithm to find dominant points ( corners ) of contour
//
//    Context:
//    Parameters:
//      contours - pointer to input contour object.
//      out_numbers - array of dominant points indices
//      count - length of out_numbers array on input
//              and numbers of founded dominant points on output
//
//      method - only CV_DOMINANT_IPAN now
//      parameters - array of parameters
//                   for IPAN algorithm
//                   [0] - minimal distance
//                   [1] - maximal distance
//                   [2] - neighborhood distance (must be not greater than dmaximal distance)
//                   [3] - maximal possible angle of curvature
//    Returns:
//      CV_OK or error code
//    Notes:
//      User must allocate out_numbers array. If it is small - function fills array
//      with part of points and returns  error
//F*/</doc>
