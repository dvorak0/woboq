<dec f='opencv/modules/objdetect/src/_latentsvm.h' l='307' type='int getOppositePoint(CvPoint point, int sizeX, int sizeY, float step, int degree, CvPoint * oppositePoint)'/>
<doc f='opencv/modules/objdetect/src/_latentsvm.h' l='286'>/*
// Compute opposite point for filter box
//
// API
// int getOppositePoint(CvPoint point,
                        int sizeX, int sizeY,
                        float step, int degree,
                        CvPoint *oppositePoint);

// INPUT
// point             - coordinates of filter top left corner
                       (in the space of pixels)
// (sizeX, sizeY)    - filter dimension in the block space
// step              - scaling factor
// degree            - degree of the scaling factor
// OUTPUT
// oppositePoint     - coordinates of filter bottom corner
                       (in the space of pixels)
// RESULT
// Error status
*/</doc>
<use f='opencv/modules/objdetect/src/latentsvm.cpp' l='231' u='c' c='_ZL13estimateBoxesP7CvPointPiiiiPS0_'/>
<def f='opencv/modules/objdetect/src/latentsvm.cpp' l='335' ll='345' type='int getOppositePoint(CvPoint point, int sizeX, int sizeY, float step, int degree, CvPoint * oppositePoint)'/>
<use f='opencv/modules/objdetect/src/latentsvm.cpp' l='386' u='c' c='_Z19showRootFilterBoxesP9_IplImagePK18CvLSVMFilterObjectP7CvPointPii8CvScalariii'/>
<use f='opencv/modules/objdetect/src/latentsvm.cpp' l='440' u='c' c='_Z19showPartFilterBoxesP9_IplImagePPK18CvLSVMFilterObjectiPP7CvPointPii8CvScalariii'/>
<doc f='opencv/modules/objdetect/src/latentsvm.cpp' l='314'>/*
// Compute opposite point for filter box
//
// API
// int getOppositePoint(CvPoint point,
                        int sizeX, int sizeY,
                        float step, int degree,
                        CvPoint *oppositePoint);

// INPUT
// point             - coordinates of filter top left corner
                       (in the space of pixels)
// (sizeX, sizeY)    - filter dimension in the block space
// step              - scaling factor
// degree            - degree of the scaling factor
// OUTPUT
// oppositePoint     - coordinates of filter bottom corner
                       (in the space of pixels)
// RESULT
// Error status
*/</doc>
