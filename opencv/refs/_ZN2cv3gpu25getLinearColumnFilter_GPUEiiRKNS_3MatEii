<dec f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='326' type='Ptr&lt;cv::gpu::BaseColumnFilter_GPU&gt; cv::gpu::getLinearColumnFilter_GPU(int bufType, int dstType, const cv::Mat &amp; columnKernel, int anchor = -1, int borderType = BORDER_DEFAULT)'/>
<doc f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='318'>//! returns the primitive column filter with the specified kernel.
//! supports only CV_8UC1, CV_8UC4, CV_16SC1, CV_16SC2, CV_32SC1, CV_32FC1 dst type.
//! there are two version of algorithm: NPP and OpenCV.
//! NPP calls when dstType == CV_8UC1 or dstType == CV_8UC4 and bufType == dstType,
//! otherwise calls OpenCV version.
//! NPP supports only BORDER_CONSTANT border type.
//! OpenCV version supports only CV_32F as buffer depth and
//! BORDER_REFLECT101, BORDER_REPLICATE and BORDER_CONSTANT border types.</doc>
<def f='opencv/modules/gpu/src/filtering.cpp' l='1014' ll='1080' type='Ptr&lt;cv::gpu::BaseColumnFilter_GPU&gt; cv::gpu::getLinearColumnFilter_GPU(int bufType, int dstType, const cv::Mat &amp; columnKernel, int anchor = -1, int borderType = BORDER_DEFAULT)'/>
<use f='opencv/modules/gpu/src/filtering.cpp' l='1093' u='c' c='_ZN2cv3gpu31createSeparableLinearFilter_GPUEiiRKNS_3MatES3_RKNS_6Point_IiEEii'/>
<use f='opencv/modules/gpu/src/filtering.cpp' l='1109' u='c' c='_ZN2cv3gpu31createSeparableLinearFilter_GPUEiiRKNS_3MatES3_RNS0_6GpuMatERKNS_6Point_IiEEii'/>
