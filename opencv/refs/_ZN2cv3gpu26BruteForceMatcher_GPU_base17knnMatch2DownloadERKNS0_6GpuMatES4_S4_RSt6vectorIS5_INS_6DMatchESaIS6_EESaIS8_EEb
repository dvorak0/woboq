<dec f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='1444' type='static void cv::gpu::BruteForceMatcher_GPU_base::knnMatch2Download(const cv::gpu::GpuMat &amp; trainIdx, const cv::gpu::GpuMat &amp; imgIdx, const cv::gpu::GpuMat &amp; distance, std::vector&lt;std::vector&lt;DMatch&gt; &gt; &amp; matches, bool compactResult = false)'/>
<doc f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='1440'>// Download trainIdx and distance and convert it to vector with DMatch
    // compactResult is used when mask is not empty. If compactResult is false matches
    // vector will have the same size as queryDescriptors rows. If compactResult is true
    // matches vector will not contain matches for fully masked out query descriptors.</doc>
<def f='opencv/modules/gpu/src/brute_force_matcher.cpp' l='682' ll='693' type='static void cv::gpu::BruteForceMatcher_GPU_base::knnMatch2Download(const cv::gpu::GpuMat &amp; trainIdx, const cv::gpu::GpuMat &amp; imgIdx, const cv::gpu::GpuMat &amp; distance, vector&lt;vector&lt;cv::DMatch&gt; &gt; &amp; matches, bool compactResult = false)'/>
<use f='opencv/modules/gpu/src/brute_force_matcher.cpp' l='764' u='c' c='_ZN2cv3gpu26BruteForceMatcher_GPU_base8knnMatchERKNS0_6GpuMatERSt6vectorIS5_INS_6DMatchESaIS6_EESaIS8_EEiRKS5_IS2_SaIS2_EEb'/>
