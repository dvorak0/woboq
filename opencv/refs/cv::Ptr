<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='1262' ll='1298'/>
<doc f='opencv/modules/core/include/opencv2/core/core.hpp' l='1241'>/*!
  Smart pointer to dynamically allocated objects.

  This is template pointer-wrapping class that stores the associated reference counter along with the
  object pointer. The class is similar to std::smart_ptr&lt;&gt; from the recent addons to the C++ standard,
  but is shorter to write :) and self-contained (i.e. does add any dependency on the compiler or an external library).

  Basically, you can use &quot;Ptr&lt;MyObjectType&gt; ptr&quot; (or faster &quot;const Ptr&lt;MyObjectType&gt;&amp; ptr&quot; for read-only access)
  everywhere instead of &quot;MyObjectType* ptr&quot;, where MyObjectType is some C structure or a C++ class.
  To make it all work, you need to specialize Ptr&lt;&gt;::delete_obj(), like:

  \code
  template&lt;&gt; void Ptr&lt;MyObjectType&gt;::delete_obj() { call_destructor_func(obj); }
  \endcode

  \note{if MyObjectType is a C++ class with a destructor, you do not need to specialize delete_obj(),
  since the default implementation calls &quot;delete obj;&quot;}

  \note{Another good property of the class is that the operations on the reference counter are atomic,
  i.e. it is safe to use the class in multi-threaded applications}
*/</doc>
<fun r='_ZN2cv3PtrC1Ev'/>
<fun r='_ZN2cv3PtrC1EPT_'/>
<fun r='_ZN2cv3PtrD1Ev'/>
<fun r='_ZN2cv3PtrC1ERKNS_3PtrIT_EE'/>
<fun r='_ZN2cv3PtrC1ERKNS_3PtrIT_EE'/>
<fun r='_ZN2cv3PtraSERKNS_3PtrIT_EE'/>
<fun r='_ZN2cv3Ptr6addrefEv'/>
<fun r='_ZN2cv3Ptr7releaseEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZNK2cv3Ptr5emptyEv'/>
<fun r='_ZN2cv3Ptr3ptrEv'/>
<fun r='_ZNK2cv3Ptr3ptrEv'/>
<fun r='_ZN2cv3PtrptEv'/>
<fun r='_ZNK2cv3PtrptEv'/>
<fun r='_ZN2cv3PtrcvPT_Ev'/>
<fun r='_ZNK2cv3PtrcvPKT_Ev'/>
<mbr r='cv::Ptr::obj' t='_Tp *'/>
<mbr r='cv::Ptr::refcount' t='int *'/>
<fun r='_ZN2cv3PtrC1Ev'/>
<fun r='_ZN2cv3PtrC1EPT_'/>
<fun r='_ZN2cv3Ptr6addrefEv'/>
<fun r='_ZN2cv3Ptr7releaseEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3PtrD1Ev'/>
<fun r='_ZN2cv3PtrC1ERKNS_3PtrIT_EE'/>
<fun r='_ZN2cv3PtraSERKNS_3PtrIT_EE'/>
<fun r='_ZN2cv3PtrptEv'/>
<fun r='_ZNK2cv3PtrptEv'/>
<fun r='_ZN2cv3PtrcvPT_Ev'/>
<fun r='_ZNK2cv3PtrcvPKT_Ev'/>
<fun r='_ZNK2cv3Ptr5emptyEv'/>
<fun r='_ZN2cv3PtrC1ERKNS_3PtrIT_EE'/>
<fun r='_ZN2cv3Ptr3ptrEv'/>
<fun r='_ZNK2cv3Ptr3ptrEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
<fun r='_ZN2cv3Ptr10delete_objEv'/>
