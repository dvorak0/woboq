<dec f='opencv/modules/core/include/opencv2/core/core.hpp' l='636' type='Vec&lt;_Tp, cn&gt; cv::Vec::cross(const Vec&lt;_Tp, cn&gt; &amp; v) const'/>
<def f='opencv/modules/core/include/opencv2/core/operations.hpp' l='1255' ll='1259' type='Vec&lt;_Tp, cn&gt; cv::Vec::cross(const Vec&lt;_Tp, cn&gt; &amp; ) const'/>
<def f='opencv/modules/core/include/opencv2/core/operations.hpp' l='1457' ll='1462' type='Vec&lt;float, 3&gt; cv::Vec&lt;float, 3&gt;::cross(const Vec&lt;float, 3&gt; &amp; v) const'/>
<def f='opencv/modules/core/include/opencv2/core/operations.hpp' l='1464' ll='1469' type='Vec&lt;double, 3&gt; cv::Vec&lt;double, 3&gt;::cross(const Vec&lt;double, 3&gt; &amp; v) const'/>
<doc f='opencv/modules/core/include/opencv2/core/core.hpp' l='631'>/*!
      cross product of the two 3D vectors.

      For other dimensionalities the exception is raised
    */</doc>
<use f='opencv/modules/calib3d/src/fisheye.cpp' l='647' u='c' c='_ZN2cv7fisheye13stereoRectifyERKNS_11_InputArrayES3_S3_S3_RKNS_5Size_IiEES3_S3_RKNS_12_OutputArrayESA_SA_SA_SA_iS7_dd'/>
<use f='opencv/modules/calib3d/test/test_cameracalibration_artificial.cpp' l='73' u='c' c='_Z8calcRvecRKSt6vectorIN2cv7Point3_IfEESaIS2_EERKNS0_5Size_IiEE'/>
<use f='opencv/modules/calib3d/test/test_chessboardgenerator.cpp' l='99' u='c' c='_ZNK2cv19ChessBoardGenerator13generateBasisERNS_7Point3_IfEES3_'/>
<use f='opencv/modules/calib3d/test/test_chessboardgenerator.cpp' l='100' u='c' c='_ZNK2cv19ChessBoardGenerator13generateBasisERNS_7Point3_IfEES3_'/>
<use f='opencv/modules/core/test/test_operations.cpp' l='477' u='c' c='_ZN17CV_OperationsTest16TestSubMatAccessEv'/>
