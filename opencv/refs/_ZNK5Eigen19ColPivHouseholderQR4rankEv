<def f='include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h' l='220' ll='229' type='Index Eigen::ColPivHouseholderQR::rank() const'/>
<use f='include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h' l='240' u='c' c='_ZNK5Eigen19ColPivHouseholderQR17dimensionOfKernelEv'/>
<use f='include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h' l='253' u='c' c='_ZNK5Eigen19ColPivHouseholderQR11isInjectiveEv'/>
<use f='include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h' l='266' u='c' c='_ZNK5Eigen19ColPivHouseholderQR12isSurjectiveEv'/>
<doc f='include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h' l='214'>/** \returns the rank of the matrix of which *this is the QR decomposition.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      */</doc>
