<dec f='opencv/modules/imgproc/include/opencv2/imgproc/imgproc.hpp' l='1161' type='void cv::approxPolyDP(InputArray curve, OutputArray approxCurve, double epsilon, bool closed)'/>
<doc f='opencv/modules/imgproc/include/opencv2/imgproc/imgproc.hpp' l='1160'>//! approximates contour or a curve using Douglas-Peucker algorithm</doc>
<use f='opencv/modules/calib3d/src/quadsubpix.cpp' l='308' u='c' c='_ZN2cv21find4QuadCornerSubpixERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEE'/>
<use f='opencv/modules/calib3d/test/test_chessboardgenerator.cpp' l='134' u='c' c='_ZNK2cv19ChessBoardGenerator18generateChessBoardERKNS_3MatES3_S3_RKNS_7Point3_IfEES7_S7_ffRKSt6vectorIS5_SaIS5_EERS8_INS_6Point_IfEESaISE_EE'/>
<use f='opencv/modules/calib3d/test/test_chessboardgenerator.cpp' l='154' u='c' c='_ZNK2cv19ChessBoardGenerator18generateChessBoardERKNS_3MatES3_S3_RKNS_7Point3_IfEES7_S7_ffRKSt6vectorIS5_SaIS5_EERS8_INS_6Point_IfEESaISE_EE'/>
<def f='opencv/modules/imgproc/src/contours.cpp' l='1871' ll='1885' type='void cv::approxPolyDP(InputArray _curve, OutputArray _approxCurve, double epsilon, bool closed)'/>
