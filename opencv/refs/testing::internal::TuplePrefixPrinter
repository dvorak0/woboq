<def f='opencv/modules/ts/include/opencv2/ts/ts_gtest.h' l='10023' ll='10042'/>
<def f='opencv/modules/ts/include/opencv2/ts/ts_gtest.h' l='10045' ll='10052'/>
<def f='opencv/modules/ts/include/opencv2/ts/ts_gtest.h' l='10058' ll='10072'/>
<size>1</size>
<doc f='opencv/modules/ts/include/opencv2/ts/ts_gtest.h' l='10044'>// Base cases.</doc>
<doc f='opencv/modules/ts/include/opencv2/ts/ts_gtest.h' l='10053'>// We have to specialize the entire TuplePrefixPrinter&lt;&gt; class
// template here, even though the definition of
// TersePrintPrefixToStrings() is the same as the generic version, as
// Embarcadero (formerly CodeGear, formerly Borland) C++ doesn&apos;t
// support specializing a method template of a class template.</doc>
<fun r='_ZN7testing8internal18TuplePrefixPrinter13PrintPrefixToERKT_PSo'/>
<fun r='_ZN7testing8internal18TuplePrefixPrinter25TersePrintPrefixToStringsERKT_PSt6vectorISsSaISsEE'/>
<fun r='_ZN7testing8internal18TuplePrefixPrinterILm0EE13PrintPrefixToERKT_PSo'/>
<fun r='_ZN7testing8internal18TuplePrefixPrinterILm0EE25TersePrintPrefixToStringsERKT_PSt6vectorISsSaISsEE'/>
<fun r='_ZN7testing8internal18TuplePrefixPrinterILm1EE13PrintPrefixToERKT_PSo'/>
<fun r='_ZN7testing8internal18TuplePrefixPrinterILm1EE25TersePrintPrefixToStringsERKT_PSt6vectorISsSaISsEE'/>
