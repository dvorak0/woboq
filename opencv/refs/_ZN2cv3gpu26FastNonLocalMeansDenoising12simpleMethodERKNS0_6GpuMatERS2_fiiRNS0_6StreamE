<dec f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='822' type='void cv::gpu::FastNonLocalMeansDenoising::simpleMethod(const cv::gpu::GpuMat &amp; src, cv::gpu::GpuMat &amp; dst, float h, int search_window = 21, int block_size = 7, cv::gpu::Stream &amp; s = Stream::Null())'/>
<doc f='opencv/modules/gpu/include/opencv2/gpu/gpu.hpp' l='821'>//! Simple method, recommended for grayscale images (though it supports multichannel images)</doc>
<use f='opencv/modules/gpu/perf/perf_denoising.cpp' l='176' u='c' c='_ZN62Sz_Depth_Cn_WinSz_BlockSz_DISABLED_Denoising_FastNonLocalMeans12PerfTestBodyEv'/>
<def f='opencv/modules/gpu/src/denoising.cpp' l='164' ll='187' type='void cv::gpu::FastNonLocalMeansDenoising::simpleMethod(const cv::gpu::GpuMat &amp; src, cv::gpu::GpuMat &amp; dst, float h, int search_window = 21, int block_window = 7, cv::gpu::Stream &amp; s = Stream::Null())'/>
<use f='opencv/modules/gpu/src/denoising.cpp' l='200' u='c' c='_ZN2cv3gpu26FastNonLocalMeansDenoising9labMethodERKNS0_6GpuMatERS2_ffiiRNS0_6StreamE'/>
<use f='opencv/modules/gpu/src/denoising.cpp' l='201' u='c' c='_ZN2cv3gpu26FastNonLocalMeansDenoising9labMethodERKNS0_6GpuMatERS2_ffiiRNS0_6StreamE'/>
<use f='opencv/modules/gpu/test/test_denoising.cpp' l='170' u='c' c='_ZN33FastNonLocalMeans_Regression_Test14UnsafeTestBodyEv'/>
