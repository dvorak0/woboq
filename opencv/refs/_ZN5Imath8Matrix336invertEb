<dec f='include/OpenEXR/ImathMatrix.h' l='250' type='const Matrix33&lt;T&gt; &amp; Imath::Matrix33::invert(bool singExc = false)'/>
<def f='include/OpenEXR/ImathMatrix.h' l='1421' ll='1427' type='const Matrix33&lt;T&gt; &amp; Imath::Matrix33::invert(bool singExc = false)'/>
<doc f='include/OpenEXR/ImathMatrix.h' l='236'>//------------------------------------------------------------
    // Inverse matrix: If singExc is false, inverting a singular
    // matrix produces an identity matrix.  If singExc is true,
    // inverting a singular matrix throws a SingMatrixExc.
    //
    // inverse() and invert() invert matrices using determinants;
    // gjInverse() and gjInvert() use the Gauss-Jordan method.
    //
    // inverse() and invert() are significantly faster than
    // gjInverse() and gjInvert(), but the results may be slightly
    // less accurate.
    // 
    //------------------------------------------------------------</doc>
