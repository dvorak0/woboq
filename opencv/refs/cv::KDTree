<def f='opencv/modules/core/include/opencv2/core/core.hpp' l='3955' ll='4011'/>
<size>152</size>
<doc f='opencv/modules/core/include/opencv2/core/core.hpp' l='3931'>/*!
 Fast Nearest Neighbor Search Class.

 The class implements D. Lowe BBF (Best-Bin-First) algorithm for the last
 approximate (or accurate) nearest neighbor search in multi-dimensional spaces.

 First, a set of vectors is passed to KDTree::KDTree() constructor
 or KDTree::build() method, where it is reordered.

 Then arbitrary vectors can be passed to KDTree::findNearest() methods, which
 find the K nearest neighbors among the vectors from the initial set.
 The user can balance between the speed and accuracy of the search by varying Emax
 parameter, which is the number of leaves that the algorithm checks.
 The larger parameter values yield more accurate results at the expense of lower processing speed.

 \code
 KDTree T(points, false);
 const int K = 3, Emax = INT_MAX;
 int idx[K];
 float dist[K];
 T.findNearest(query_vec, K, Emax, idx, 0, dist);
 CV_Assert(dist[0] &lt;= dist[1] &amp;&amp; dist[1] &lt;= dist[2]);
 \endcode
*/</doc>
<fun r='_ZN2cv6KDTreeC1Ev'/>
<fun r='_ZN2cv6KDTreeC1ERKNS_11_InputArrayEb'/>
<fun r='_ZN2cv6KDTreeC1ERKNS_11_InputArrayES3_b'/>
<fun r='_ZN2cv6KDTree5buildERKNS_11_InputArrayEb'/>
<fun r='_ZN2cv6KDTree5buildERKNS_11_InputArrayES3_b'/>
<fun r='_ZNK2cv6KDTree11findNearestERKNS_11_InputArrayEiiRKNS_12_OutputArrayES6_S6_S6_'/>
<fun r='_ZNK2cv6KDTree14findOrthoRangeERKNS_11_InputArrayES3_RKNS_12_OutputArrayES6_S6_'/>
<fun r='_ZNK2cv6KDTree9getPointsERKNS_11_InputArrayERKNS_12_OutputArrayES6_'/>
<fun r='_ZNK2cv6KDTree8getPointEiPi'/>
<fun r='_ZNK2cv6KDTree4dimsEv'/>
<mbr r='cv::KDTree::nodes' o='0' t='vector&lt;cv::KDTree::Node&gt;'/>
<mbr r='cv::KDTree::points' o='192' t='cv::Mat'/>
<mbr r='cv::KDTree::labels' o='960' t='vector&lt;int&gt;'/>
<mbr r='cv::KDTree::maxDepth' o='1152' t='int'/>
<mbr r='cv::KDTree::normType' o='1184' t='int'/>
