<dec f='include/eigen3/Eigen/src/Core/DenseBase.h' l='419' type='void Eigen::DenseBase::visit(Visitor &amp; func) const'/>
<def f='include/eigen3/Eigen/src/Core/Visitor.h' l='75' ll='87' type='void Eigen::DenseBase::visit(Visitor &amp; visitor) const'/>
<doc f='include/eigen3/Eigen/src/Core/Visitor.h' l='58'>/** Applies the visitor \a visitor to the whole coefficients of the matrix or vector.
  *
  * The template parameter \a Visitor is the type of the visitor and provides the following interface:
  * \code
  * struct MyVisitor {
  *   // called for the first coefficient
  *   void init(const Scalar&amp; value, Index i, Index j);
  *   // called for all other coefficients
  *   void operator() (const Scalar&amp; value, Index i, Index j);
  * };
  * \endcode
  *
  * \note compared to one or two \em for \em loops, visitors offer automatic
  * unrolling for small fixed size matrix.
  *
  * \sa minCoeff(Index*,Index*), maxCoeff(Index*,Index*), DenseBase::redux()
  */</doc>
