<dec f='opencv/modules/objdetect/include/opencv2/objdetect/objdetect.hpp' l='269' type='CvSeq * cvLatentSvmDetectObjects(IplImage * image, CvLatentSvmDetector * detector, CvMemStorage * storage, float overlap_threshold = 0.5F, int numThreads = -1)'/>
<doc f='opencv/modules/objdetect/include/opencv2/objdetect/objdetect.hpp' l='249'>/*
// find rectangular regions in the given image that are likely
// to contain objects and corresponding confidence levels
//
// API
// CvSeq* cvLatentSvmDetectObjects(const IplImage* image,
//                                  CvLatentSvmDetector* detector,
//                                  CvMemStorage* storage,
//                                  float overlap_threshold = 0.5f,
//                                  int numThreads = -1);
// INPUT
// image                - image to detect objects in
// detector             - Latent SVM detector in internal representation
// storage              - memory storage to store the resultant sequence
//                          of the object candidate rectangles
// overlap_threshold    - threshold for the non-maximum suppression algorithm
                           = 0.5f [here will be the reference to original paper]
// OUTPUT
// sequence of detected objects (bounding boxes and confidence levels stored in CvObjectDetection structures)
*/</doc>
<def f='opencv/modules/objdetect/src/latentsvmdetector.cpp' l='83' ll='148' type='CvSeq * cvLatentSvmDetectObjects(IplImage * image, CvLatentSvmDetector * detector, CvMemStorage * storage, float overlap_threshold = 0.5F, int numThreads = -1)'/>
<use f='opencv/modules/objdetect/src/latentsvmdetector.cpp' l='255' u='c' c='_ZN2cv17LatentSvmDetector6detectERKNS_3MatERSt6vectorINS0_15ObjectDetectionESaIS5_EEfi'/>
<doc f='opencv/modules/objdetect/src/latentsvmdetector.cpp' l='64'>/*
// find rectangular regions in the given image that are likely
// to contain objects and corresponding confidence levels
//
// API
// CvSeq* cvLatentSvmDetectObjects(const IplImage* image,
//                                  CvLatentSvmDetector* detector,
//                                  CvMemStorage* storage,
//                                  float overlap_threshold = 0.5f,
                                    int numThreads = -1);
// INPUT
// image                - image to detect objects in
// detector             - Latent SVM detector in internal representation
// storage              - memory storage to store the resultant sequence
//                          of the object candidate rectangles
// overlap_threshold    - threshold for the non-maximum suppression algorithm [here will be the reference to original paper]
// OUTPUT
// sequence of detected objects (bounding boxes and confidence levels stored in CvObjectDetection structures)
*/</doc>
<use f='opencv/modules/objdetect/test/test_latentsvmdetector.cpp' l='104' u='c' c='_ZN24CV_LatentSVMDetectorTest3runEi'/>
