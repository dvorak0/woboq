<def f='include/eigen3/Eigen/src/Eigenvalues/HessenbergDecomposition.h' l='150' ll='162' type='HessenbergDecomposition&lt;_MatrixType&gt; &amp; Eigen::HessenbergDecomposition::compute(const MatrixType &amp; matrix)'/>
<doc f='include/eigen3/Eigen/src/Eigenvalues/HessenbergDecomposition.h' l='133'>/** \brief Computes Hessenberg decomposition of given matrix.
      *
      * \param[in]  matrix  Square matrix whose Hessenberg decomposition is to be computed.
      * \returns    Reference to \c *this
      *
      * The Hessenberg decomposition is computed by bringing the columns of the
      * matrix successively in the required form using Householder reflections
      * (see, e.g., Algorithm 7.4.2 in Golub \&amp; Van Loan, &lt;i&gt;%Matrix
      * Computations&lt;/i&gt;). The cost is \f$ 10n^3/3 \f$ flops, where \f$ n \f$
      * denotes the size of the given matrix.
      *
      * This method reuses of the allocated data in the HessenbergDecomposition
      * object.
      *
      * Example: \include HessenbergDecomposition_compute.cpp
      * Output: \verbinclude HessenbergDecomposition_compute.out
      */</doc>
