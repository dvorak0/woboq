<dec f='opencv/modules/core/include/opencv2/core/core_c.h' l='514' type='void cvDiv(const CvArr * src1, const CvArr * src2, CvArr * dst, double scale = 1)'/>
<doc f='opencv/modules/core/include/opencv2/core/core_c.h' l='511'>/* element-wise division/inversion with scaling:
    dst(idx) = src1(idx) * scale / src2(idx)
    or dst(idx) = scale / src2(idx) if src1 == 0 */</doc>
<use f='opencv/modules/calib3d/src/fundam.cpp' l='998' u='c' c='cvConvertPointsHomogeneous'/>
<use f='opencv/modules/calib3d/src/fundam.cpp' l='1044' u='c' c='cvConvertPointsHomogeneous'/>
<def f='opencv/modules/core/src/arithm.cpp' l='2940' ll='2951' type='void cvDiv(const CvArr * srcarr1, const CvArr * srcarr2, CvArr * dstarr, double scale = 1)'/>
<use f='opencv/modules/imgproc/src/histogram.cpp' l='2945' u='c' c='cvCalcBayesianProb'/>
<use f='opencv/modules/ml/src/nbayes.cpp' l='263' u='c' c='_ZN23CvNormalBayesClassifier5trainEPK5CvMatS2_S2_S2_b'/>
