<dec f='include/eigen3/Eigen/src/Core/MatrixBase.h' l='198' type='typename internal::scalar_product_traits&lt;typename internal::traits&lt;Derived&gt;::Scalar, typename internal::traits&lt;OtherDerived&gt;::Scalar&gt;::ReturnType Eigen::MatrixBase::dot(const MatrixBase&lt;OtherDerived&gt; &amp; other) const'/>
<def f='include/eigen3/Eigen/src/Core/Dot.h' l='60' ll='74' type='typename internal::scalar_product_traits&lt;typename internal::traits&lt;Derived&gt;::Scalar, typename internal::traits&lt;OtherDerived&gt;::Scalar&gt;::ReturnType Eigen::MatrixBase::dot(const MatrixBase&lt;OtherDerived&gt; &amp; other) const'/>
<doc f='include/eigen3/Eigen/src/Core/Dot.h' l='50'>/** \returns the dot product of *this with other.
  *
  * \only_for_vectors
  *
  * \note If the scalar type is complex numbers, then this function returns the hermitian
  * (sesquilinear) dot product, conjugate-linear in the first variable and linear in the
  * second variable.
  *
  * \sa squaredNorm(), norm()
  */</doc>
