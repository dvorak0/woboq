<def f='include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h' l='155' ll='162' type='Tridiagonalization&lt;_MatrixType&gt; &amp; Eigen::Tridiagonalization::compute(const MatrixType &amp; matrix)'/>
<doc f='include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h' l='138'>/** \brief Computes tridiagonal decomposition of given matrix.
      *
      * \param[in]  matrix  Selfadjoint matrix whose tridiagonal decomposition
      * is to be computed.
      * \returns    Reference to \c *this
      *
      * The tridiagonal decomposition is computed by bringing the columns of
      * the matrix successively in the required form using Householder
      * reflections. The cost is \f$ 4n^3/3 \f$ flops, where \f$ n \f$ denotes
      * the size of the given matrix.
      *
      * This method reuses of the allocated data in the Tridiagonalization
      * object, if the size of the matrix does not change.
      *
      * Example: \include Tridiagonalization_compute.cpp
      * Output: \verbinclude Tridiagonalization_compute.out
      */</doc>
