<def f='opencv/modules/ts/include/opencv2/ts/ts_gtest.h' l='2084' ll='2154'/>
<size>144</size>
<doc f='opencv/modules/ts/include/opencv2/ts/ts_gtest.h' l='2080'>// Defines RE.

// A simple C++ wrapper for &lt;regex.h&gt;.  It uses the POSIX Extended
// Regular Expression syntax.</doc>
<fun r='_ZN7testing8internal2REC1ERKS1_'/>
<fun r='_ZN7testing8internal2REC1ERKSs'/>
<fun r='_ZN7testing8internal2REC1EPKc'/>
<fun r='_ZN7testing8internal2RED1Ev'/>
<fun r='_ZNK7testing8internal2RE7patternEv'/>
<fun r='_ZN7testing8internal2RE9FullMatchERKSsRKS1_'/>
<fun r='_ZN7testing8internal2RE12PartialMatchERKSsRKS1_'/>
<fun r='_ZN7testing8internal2RE9FullMatchEPKcRKS1_'/>
<fun r='_ZN7testing8internal2RE12PartialMatchEPKcRKS1_'/>
<fun r='_ZN7testing8internal2RE4InitEPKc'/>
<mbr r='testing::internal::RE::pattern_' o='0' t='const char *'/>
<mbr r='testing::internal::RE::is_valid_' o='64' t='bool'/>
<mbr r='testing::internal::RE::full_regex_' o='128' t='regex_t'/>
<mbr r='testing::internal::RE::partial_regex_' o='640' t='regex_t'/>
