<dec f='include/eigen3/Eigen/src/Core/MatrixBase.h' l='263' type='static const IdentityReturnType Eigen::MatrixBase::Identity(Index rows, Index cols)'/>
<def f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='681' ll='686' type='static const typename MatrixBase&lt;Derived&gt;::IdentityReturnType Eigen::MatrixBase::Identity(Index nbRows, Index nbCols)'/>
<doc f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='667'>/** \returns an expression of the identity matrix (not necessarily square).
  *
  * The parameters \a nbRows and \a nbCols are the number of rows and of columns of
  * the returned matrix. Must be compatible with this MatrixBase type.
  *
  * This variant is meant to be used for dynamic-size matrix types. For fixed-size types,
  * it is redundant to pass \a rows and \a cols as arguments, so Identity() should be used
  * instead.
  *
  * Example: \include MatrixBase_identity_int_int.cpp
  * Output: \verbinclude MatrixBase_identity_int_int.out
  *
  * \sa Identity(), setIdentity(), isIdentity()
  */</doc>
