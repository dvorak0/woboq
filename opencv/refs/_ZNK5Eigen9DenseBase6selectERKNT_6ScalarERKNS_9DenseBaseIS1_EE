<dec f='include/eigen3/Eigen/src/Core/DenseBase.h' l='460' type='const Select&lt;Derived, typename ElseDerived::ConstantReturnType, ElseDerived&gt; Eigen::DenseBase::select(const typename ElseDerived::Scalar &amp; thenScalar, const DenseBase&lt;ElseDerived&gt; &amp; elseMatrix) const'/>
<def f='include/eigen3/Eigen/src/Core/Select.h' l='150' ll='158' type='const Select&lt;Derived, typename ElseDerived::ConstantReturnType, ElseDerived&gt; Eigen::DenseBase::select(const typename ElseDerived::Scalar &amp; thenScalar, const DenseBase&lt;ElseDerived&gt; &amp; elseMatrix) const'/>
<doc f='include/eigen3/Eigen/src/Core/Select.h' l='145'>/** Version of DenseBase::select(const DenseBase&amp;, const DenseBase&amp;) with
  * the \em then expression being a scalar value.
  *
  * \sa DenseBase::select(const DenseBase&lt;ThenDerived&gt;&amp;, const DenseBase&lt;ElseDerived&gt;&amp;) const, class Select
  */</doc>
