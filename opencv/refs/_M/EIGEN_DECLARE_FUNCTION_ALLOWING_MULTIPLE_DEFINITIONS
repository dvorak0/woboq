<dec f='include/eigen3/Eigen/src/Core/util/Macros.h' l='158'/>
<use f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='234' u='c'/>
<use f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='238' u='c'/>
<use f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='242' u='c'/>
<use f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='246' u='c'/>
<use f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='250' u='c'/>
<use f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='254' u='c'/>
<use f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='258' u='c'/>
<use f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='262' u='c'/>
<doc f='include/eigen3/Eigen/src/Core/util/Macros.h' l='154'>// this macro allows to get rid of linking errors about multiply defined functions.
//  - static is not very good because it prevents definitions from different object files to be merged.
//           So static causes the resulting linked executable to be bloated with multiple copies of the same function.
//  - inline is not perfect either as it unwantedly hints the compiler toward inlining the function.</doc>
