<dec f='include/python2.7/classobject.h' l='65' type='PyObject * _PyInstance_Lookup(PyObject * pinst, PyObject * name)'/>
<doc f='include/python2.7/classobject.h' l='55'>/* Look up attribute with name (a string) on instance object pinst, using
 * only the instance and base class dicts.  If a descriptor is found in
 * a class dict, the descriptor is returned without calling it.
 * Returns NULL if nothing found, else a borrowed reference to the
 * value associated with name in the dict in which name was found.
 * The point of this routine is that it never calls arbitrary Python
 * code, so is always &quot;safe&quot;:  all it does is dict lookups.  The function
 * can&apos;t fail, never sets an exception, and NULL is not an error (it just
 * means &quot;not found&quot;).
 */</doc>
