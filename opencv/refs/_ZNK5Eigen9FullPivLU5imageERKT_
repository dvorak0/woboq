<def f='include/eigen3/Eigen/src/LU/FullPivLU.h' l='186' ll='191' type='const internal::image_retval&lt;FullPivLU&lt;MatrixType&gt; &gt; Eigen::FullPivLU::image(const MatrixType &amp; originalMatrix) const'/>
<doc f='include/eigen3/Eigen/src/LU/FullPivLU.h' l='167'>/** \returns the image of the matrix, also called its column-space. The columns of the returned matrix
      * will form a basis of the kernel.
      *
      * \param originalMatrix the original matrix, of which *this is the LU decomposition.
      *                       The reason why it is needed to pass it here, is that this allows
      *                       a large optimization, as otherwise this method would need to reconstruct it
      *                       from the LU decomposition.
      *
      * \note If the image has dimension zero, then the returned matrix is a column-vector filled with zeros.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      *
      * Example: \include FullPivLU_image.cpp
      * Output: \verbinclude FullPivLU_image.out
      *
      * \sa kernel()
      */</doc>
