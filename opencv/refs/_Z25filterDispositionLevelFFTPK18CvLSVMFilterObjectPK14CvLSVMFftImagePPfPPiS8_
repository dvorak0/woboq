<dec f='opencv/modules/objdetect/src/_lsvm_matching.h' l='178' type='int filterDispositionLevelFFT(const CvLSVMFilterObject * Fi, const CvLSVMFftImage * featMapImage, float ** scoreFi, int ** pointsX, int ** pointsY)'/>
<doc f='opencv/modules/objdetect/src/_lsvm_matching.h' l='160'>/*
// Computation objective function D according the original paper using FFT
//
// API
// int filterDispositionLevelFFT(const filterObject *Fi, const fftImage *featMapImage,
                                 float **scoreFi,
                                 int **pointsX, int **pointsY);
// INPUT
// Fi                - filter object (weights and coefficients of penalty
                       function that are used in this routine)
// featMapImage      - FFT image of feature map
// OUTPUT
// scoreFi           - values of distance transform on the level at all positions
// (pointsX, pointsY)- positions that correspond to the maximum value
                       of distance transform at all grid nodes
// RESULT
// Error status
*/</doc>
<def f='opencv/modules/objdetect/src/matching.cpp' l='417' ll='485' type='int filterDispositionLevelFFT(const CvLSVMFilterObject * Fi, const CvLSVMFftImage * featMapImage, float ** scoreFi, int ** pointsX, int ** pointsY)'/>
<doc f='opencv/modules/objdetect/src/matching.cpp' l='399'>/*
// Computation objective function D according the original paper using FFT
//
// API
// int filterDispositionLevelFFT(const CvLSVMFilterObject *Fi, const fftImage *featMapImage,
                                 float **scoreFi,
                                 int **pointsX, int **pointsY);
// INPUT
// Fi                - filter object (weights and coefficients of penalty
                       function that are used in this routine)
// featMapImage      - FFT image of feature map
// OUTPUT
// scoreFi           - values of distance transform on the level at all positions
// (pointsX, pointsY)- positions that correspond to the maximum value
                       of distance transform at all grid nodes
// RESULT
// Error status
*/</doc>
