<dec f='opencv/modules/contrib/include/opencv2/contrib/retina.hpp' l='337' type='void cv::Retina::_convertValarrayBuffer2cvMat(const std::valarray&lt;float&gt; &amp; grayMatrixToConvert, const unsigned int nbRows, const unsigned int nbColumns, const bool colorMode, cv::Mat &amp; outBuffer)'/>
<doc f='opencv/modules/contrib/include/opencv2/contrib/retina.hpp' l='329'>/**
     * exports a valarray buffer outing from HVStools objects to a cv::Mat in CV_8UC1 (gray level picture) or CV_8UC3 (color) format
     * @param grayMatrixToConvert the valarray to export to OpenCV
     * @param nbRows : the number of rows of the valarray flatten matrix
     * @param nbColumns : the number of rows of the valarray flatten matrix
     * @param colorMode : a flag which mentions if matrix is color (true) or graylevel (false)
     * @param outBuffer : the output matrix which is reallocated to satisfy Retina output buffer dimensions
     */</doc>
<use f='opencv/modules/contrib/src/retina.cpp' l='322' u='c' c='_ZN2cv6Retina8getParvoERNS_3MatE'/>
<use f='opencv/modules/contrib/src/retina.cpp' l='326' u='c' c='_ZN2cv6Retina8getParvoERNS_3MatE'/>
<use f='opencv/modules/contrib/src/retina.cpp' l='333' u='c' c='_ZN2cv6Retina8getMagnoERNS_3MatE'/>
<def f='opencv/modules/contrib/src/retina.cpp' l='371' ll='404' type='void cv::Retina::_convertValarrayBuffer2cvMat(const std::valarray&lt;float&gt; &amp; grayMatrixToConvert, const unsigned int nbRows, const unsigned int nbColumns, const bool colorMode, cv::Mat &amp; outBuffer)'/>
