<dec f='opencv/modules/contrib/include/opencv2/contrib/contrib.hpp' l='465' type='void cv::LevMarqSparse::run(int npoints, int ncameras, int nPointParams, int nCameraParams, int nErrParams, cv::Mat &amp; visibility, cv::Mat &amp; P0, cv::Mat &amp; X, cv::TermCriteria criteria, void (*)(int, int, cv::Mat &amp;, cv::Mat &amp;, cv::Mat &amp;, cv::Mat &amp;, void *) fjac, void (*)(int, int, cv::Mat &amp;, cv::Mat &amp;, cv::Mat &amp;, void *) func, void * data)'/>
<doc f='opencv/modules/contrib/include/opencv2/contrib/contrib.hpp' l='465'>// number of points</doc>
<use f='opencv/modules/contrib/src/ba.cpp' l='88' u='c' c='_ZN2cv13LevMarqSparseC1EiiiiiRNS_3MatES2_S2_NS_12TermCriteriaEPFviiS2_S2_S2_S2_PvEPFviiS2_S2_S2_S4_ES4_PFbidS4_ES4_'/>
<def f='opencv/modules/contrib/src/ba.cpp' l='167' ll='345' type='void cv::LevMarqSparse::run(int num_points_, int num_cams_, int num_point_param_, int num_cam_param_, int num_err_param_, cv::Mat &amp; visibility, cv::Mat &amp; P0, cv::Mat &amp; X_init, cv::TermCriteria criteria_init, void (*)(int, int, cv::Mat &amp;, cv::Mat &amp;, cv::Mat &amp;, cv::Mat &amp;, void *) fjac_, void (*)(int, int, cv::Mat &amp;, cv::Mat &amp;, cv::Mat &amp;, void *) func_, void * data_)'/>
<doc f='opencv/modules/contrib/src/ba.cpp' l='156'>//A params correspond to  Cameras
//B params correspont to  Points

//num_cameras  - total number of cameras
//num_points   - total number of points

//num_par_per_camera - number of parameters per camera
//num_par_per_point - number of parameters per point

//num_errors - number of measurements.</doc>
<doc f='opencv/modules/contrib/src/ba.cpp' l='167'>//number of points</doc>
