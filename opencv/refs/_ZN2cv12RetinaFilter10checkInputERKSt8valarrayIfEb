<dec f='opencv/modules/contrib/src/retinafilter.hpp' l='154' type='bool cv::RetinaFilter::checkInput(const std::valarray&lt;float&gt; &amp; input, const bool colorMode)'/>
<doc f='opencv/modules/contrib/src/retinafilter.hpp' l='148'>/**
    * Input buffer checker: allows to check if the passed image buffer corresponds to retina filter expectations
    * @param input: the input image buffer
    * @param colorMode: specifiy if the input should be considered by the retina as colored of not
    * @return false if not compatible or it returns true if OK
    */</doc>
<def f='opencv/modules/contrib/src/retinafilter.cpp' l='243' ll='259' type='bool cv::RetinaFilter::checkInput(const std::valarray&lt;float&gt; &amp; input, const bool )'/>
<use f='opencv/modules/contrib/src/retinafilter.cpp' l='266' u='c' c='_ZN2cv12RetinaFilter9runFilterERKSt8valarrayIfEbbbb'/>
<use f='opencv/modules/contrib/src/retinafilter.cpp' l='361' u='c' c='_ZN2cv12RetinaFilter18runGrayToneMappingERKSt8valarrayIfERS2_ff'/>
<use f='opencv/modules/contrib/src/retinafilter.cpp' l='397' u='c' c='_ZN2cv12RetinaFilter17runRGBToneMappingERKSt8valarrayIfERS2_bff'/>
