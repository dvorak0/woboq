<dec f='opencv/modules/objdetect/src/_latentsvm.h' l='204' type='int searchObject(const CvLSVMFeaturePyramid * H, const CvLSVMFilterObject ** all_F, int n, float b, int maxXBorder, int maxYBorder, CvPoint ** points, int ** levels, int * kPoints, float * score, CvPoint *** partsDisplacement)'/>
<doc f='opencv/modules/objdetect/src/_latentsvm.h' l='175'>/*
// Computation of the root filter displacement and values of score function
//
// API
// int searchObject(const featurePyramid *H, const filterObject **all_F, int n,
                    float b,
                    int maxXBorder,
                    int maxYBorder,
                    CvPoint **points, int **levels, int *kPoints, float *score,
                    CvPoint ***partsDisplacement);
// INPUT
// H                 - feature pyramid
// all_F             - the set of filters (the first element is root filter,
                       other elements - part filters)
// n                 - the number of part filters
// b                 - linear term of the score function
// maxXBorder        - the largest root filter size (X-direction)
// maxYBorder        - the largest root filter size (Y-direction)
// OUTPUT
// points            - positions (x, y) of the upper-left corner
                       of root filter frame
// levels            - levels that correspond to each position
// kPoints           - number of positions
// score             - value of the score function
// partsDisplacement - part filters displacement for each position
                       of the root filter
// RESULT
// Error status
*/</doc>
<def f='opencv/modules/objdetect/src/latentsvm.cpp' l='177' ll='203' type='int searchObject(const CvLSVMFeaturePyramid * H, const CvLSVMFilterObject ** all_F, int n, float b, int maxXBorder, int maxYBorder, CvPoint ** points, int ** levels, int * kPoints, float * score, CvPoint *** partsDisplacement)'/>
<doc f='opencv/modules/objdetect/src/latentsvm.cpp' l='148'>/*
// Computation of the root filter displacement and values of score function
//
// API
// int searchObject(const featurePyramid *H, const filterObject **all_F, int n,
                    float b,
                    int maxXBorder,
                     int maxYBorder,
                     CvPoint **points, int **levels, int *kPoints, float *score,
                     CvPoint ***partsDisplacement);
// INPUT
// image             - initial image for searhing object
// all_F             - the set of filters (the first element is root filter,
                       other elements - part filters)
// n                 - the number of part filters
// b                 - linear term of the score function
// maxXBorder        - the largest root filter size (X-direction)
// maxYBorder        - the largest root filter size (Y-direction)
// OUTPUT
// points            - positions (x, y) of the upper-left corner
                       of root filter frame
// levels            - levels that correspond to each position
// kPoints           - number of positions
// score             - value of the score function
// partsDisplacement - part filters displacement for each position
                       of the root filter
// RESULT
// Error status
*/</doc>
