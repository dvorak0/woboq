<dec f='opencv/modules/objdetect/src/_lsvm_fft.h' l='23' type='int fft(float * x_in, float * x_out, int n, int shift)'/>
<def f='opencv/modules/objdetect/src/fft.cpp' l='50' ll='102' type='int fft(float * x_in, float * x_out, int n, int shift)'/>
<use f='opencv/modules/objdetect/src/fft.cpp' l='59' u='c' c='_Z3fftPfS_ii'/>
<use f='opencv/modules/objdetect/src/fft.cpp' l='60' u='c' c='_Z3fftPfS_ii'/>
<use f='opencv/modules/objdetect/src/fft.cpp' l='196' u='c' c='_Z5fft2dPfS_ii'/>
<use f='opencv/modules/objdetect/src/fft.cpp' l='202' u='c' c='_Z5fft2dPfS_ii'/>
<doc f='opencv/modules/objdetect/src/fft.cpp' l='35'>/*
// 1-dimensional FFT
//
// API
// int fft(float *x_in, float *x_out, int n, int shift);
// INPUT
// x_in              - input signal
// n                 - number of elements for searching Fourier image
// shift             - shift between input elements
// OUTPUT
// x_out             - output signal (contains 2n elements in order
                       Re(x_in[0]), Im(x_in[0]), Re(x_in[1]), Im(x_in[1]) and etc.)
// RESULT
// Error status
*/</doc>
<doc f='opencv/modules/objdetect/src/_lsvm_fft.h' l='8'>/*
// 1-dimensional FFT
//
// API
// int fft(float *x_in, float *x_out, int n, int shift);
// INPUT
// x_in              - input signal
// n                 - number of elements for searching Fourier image
// shift             - shift between input elements
// OUTPUT
// x_out             - output signal (contains 2n elements in order
                       Re(x_in[0]), Im(x_in[0]), Re(x_in[1]), Im(x_in[1]) and etc.)
// RESULT
// Error status
*/</doc>
