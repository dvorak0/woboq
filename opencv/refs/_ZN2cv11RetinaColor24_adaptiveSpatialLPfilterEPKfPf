<dec f='opencv/modules/contrib/src/retinacolor.hpp' l='250' type='void cv::RetinaColor::_adaptiveSpatialLPfilter(const float * inputFrame, float * outputFrame)'/>
<doc f='opencv/modules/contrib/src/retinacolor.hpp' l='249'>// -&gt; special adaptive filters dedicated to low pass filtering on the chrominance (skeeps filtering on the edges)</doc>
<use f='opencv/modules/contrib/src/retinacolor.cpp' l='344' u='c' c='_ZN2cv11RetinaColor22runColorDemultiplexingERKSt8valarrayIfEbf'/>
<use f='opencv/modules/contrib/src/retinacolor.cpp' l='345' u='c' c='_ZN2cv11RetinaColor22runColorDemultiplexingERKSt8valarrayIfEbf'/>
<use f='opencv/modules/contrib/src/retinacolor.cpp' l='346' u='c' c='_ZN2cv11RetinaColor22runColorDemultiplexingERKSt8valarrayIfEbf'/>
<use f='opencv/modules/contrib/src/retinacolor.cpp' l='348' u='c' c='_ZN2cv11RetinaColor22runColorDemultiplexingERKSt8valarrayIfEbf'/>
<use f='opencv/modules/contrib/src/retinacolor.cpp' l='349' u='c' c='_ZN2cv11RetinaColor22runColorDemultiplexingERKSt8valarrayIfEbf'/>
<use f='opencv/modules/contrib/src/retinacolor.cpp' l='350' u='c' c='_ZN2cv11RetinaColor22runColorDemultiplexingERKSt8valarrayIfEbf'/>
<def f='opencv/modules/contrib/src/retinacolor.cpp' l='565' ll='578' type='void cv::RetinaColor::_adaptiveSpatialLPfilter(const float * inputFrame, float * outputFrame)'/>
<doc f='opencv/modules/contrib/src/retinacolor.cpp' l='561'>//////////////////////////////////////////////////////////
//        ADAPTIVE BASIC RETINA FILTER
//////////////////////////////////////////////////////////
// run LP filter for a new frame input and save result at a specific output adress</doc>
