<def f='include/eigen3/Eigen/src/Core/util/Constants.h' l='81' type='const unsigned int'/>
<use f='include/eigen3/Eigen/src/Core/util/Constants.h' l='92' u='r'/>
<use f='include/eigen3/Eigen/src/Core/util/XprHelper.h' l='154' u='r'/>
<use f='include/eigen3/Eigen/src/Core/CwiseBinaryOp.h' l='79' u='r'/>
<use f='include/eigen3/Eigen/src/Core/CwiseUnaryOp.h' l='49' u='r'/>
<use f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='41' u='r'/>
<use f='include/eigen3/Eigen/src/Core/MapBase.h' l='156' u='r' c='_ZNK5Eigen7MapBaseIT_Li0EE11checkSanityEv'/>
<use f='include/eigen3/Eigen/src/Core/Map.h' l='97' u='r'/>
<use f='include/eigen3/Eigen/src/Core/Block.h' l='82' u='r'/>
<use f='include/eigen3/Eigen/src/Core/DiagonalProduct.h' l='34' u='r'/>
<use f='include/eigen3/Eigen/src/Core/DiagonalProduct.h' l='34' u='r'/>
<use f='include/eigen3/Eigen/src/Core/DiagonalProduct.h' l='37' u='r'/>
<use f='include/eigen3/Eigen/src/Core/TriangularMatrix.h' l='147' u='r'/>
<use f='include/eigen3/Eigen/src/Core/SelfAdjointView.h' l='42' u='r'/>
<use f='include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h' l='67' u='r'/>
<use f='include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h' l='74' u='r'/>
<use f='include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h' l='90' u='r'/>
<use f='include/eigen3/Eigen/src/Core/Reverse.h' l='49' u='r'/>
<use f='include/eigen3/Eigen/src/Core/Reverse.h' l='52' u='r'/>
<doc f='include/eigen3/Eigen/src/Core/util/Constants.h' l='65'>/** \ingroup flags
  *
  * Short version: means the expression might be vectorized
  *
  * Long version: means that the coefficients can be handled by packets
  * and start at a memory location whose alignment meets the requirements
  * of the present CPU architecture for optimized packet access. In the fixed-size
  * case, there is the additional condition that it be possible to access all the
  * coefficients by packets (this implies the requirement that the size be a multiple of 16 bytes,
  * and that any nontrivial strides don&apos;t break the alignment). In the dynamic-size case,
  * there is no such condition on the total size and strides, so it might not be possible to access
  * all coeffs by packets.
  *
  * \note This bit can be set regardless of whether vectorization is actually enabled.
  *       To check for actual vectorizability, see \a ActualPacketAccessBit.
  */</doc>
<use f='include/eigen3/Eigen/src/Jacobi/Jacobi.h' l='323' u='r' c='_ZN5Eigen8internal27apply_rotation_in_the_planeERT_RT0_RKNS_14JacobiRotationIT1_EE'/>
<use f='include/eigen3/Eigen/src/Jacobi/Jacobi.h' l='395' u='r' c='_ZN5Eigen8internal27apply_rotation_in_the_planeERT_RT0_RKNS_14JacobiRotationIT1_EE'/>
<use f='include/eigen3/Eigen/src/Geometry/OrthoMethods.h' l='46' u='r'/>
