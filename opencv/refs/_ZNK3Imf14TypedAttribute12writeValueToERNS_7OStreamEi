<dec f='include/OpenEXR/ImfAttribute.h' l='189' type='void Imf::TypedAttribute::writeValueTo(Imf::OStream &amp; os, int version) const'/>
<inh f='include/OpenEXR/ImfAttribute.h' l='84' c='_ZNK3Imf9Attribute12writeValueToERNS_7OStreamEi'/>
<def f='include/OpenEXR/ImfAttribute.h' l='312' ll='317' type='void Imf::TypedAttribute::writeValueTo(Imf::OStream &amp; os, int version) const'/>
<dec f='include/OpenEXR/ImfStringAttribute.h' l='55' type='void Imf::TypedAttribute&lt;std::basic_string&lt;char&gt; &gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfChromaticitiesAttribute.h' l='59' type='void Imf::TypedAttribute&lt;Imf::Chromaticities&gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfEnvmapAttribute.h' l='54' type='void Imf::TypedAttribute&lt;Imf::Envmap&gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfKeyCodeAttribute.h' l='59' type='void Imf::TypedAttribute&lt;Imf::KeyCode&gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfTimeCodeAttribute.h' l='59' type='void Imf::TypedAttribute&lt;Imf::TimeCode&gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfRationalAttribute.h' l='57' type='void Imf::TypedAttribute&lt;Imf::Rational&gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfVecAttribute.h' l='58' type='void Imf::TypedAttribute&lt;Imath::Vec2&lt;int&gt; &gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfVecAttribute.h' l='64' type='void Imf::TypedAttribute&lt;Imath::Vec2&lt;float&gt; &gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfVecAttribute.h' l='70' type='void Imf::TypedAttribute&lt;Imath::Vec3&lt;int&gt; &gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<dec f='include/OpenEXR/ImfVecAttribute.h' l='76' type='void Imf::TypedAttribute&lt;Imath::Vec3&lt;float&gt; &gt;::writeValueTo(Imf::OStream &amp; , int ) const'/>
<doc f='include/OpenEXR/ImfAttribute.h' l='184'>//-----------------------------------------------------------------
    // Type-specific attribute I/O and copying.
    // Depending on type T, these functions may have to be specialized.
    //-----------------------------------------------------------------</doc>
