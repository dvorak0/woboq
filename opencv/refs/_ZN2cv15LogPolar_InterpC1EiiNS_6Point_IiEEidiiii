<dec f='opencv/modules/contrib/include/opencv2/contrib/contrib.hpp' l='675' type='void cv::LogPolar_Interp::LogPolar_Interp(int w, int h, Point2i center, int R = 70, double ro0 = 3., int interp = INTER_LINEAR, int full = 1, int S = 117, int sp = 1)'/>
<doc f='opencv/modules/contrib/include/opencv2/contrib/contrib.hpp' l='660'>/**
        *Constructor
        *\param w the width of the input image
        *\param h the height of the input image
        *\param center the transformation center: where the output precision is maximal
        *\param R the number of rings of the cortical image (default value 70 pixel)
        *\param ro0 the radius of the blind spot (default value 3 pixel)
        *\param interp interpolation algorithm
        *\param full \a 1 (default value) means that the retinal image (the inverse transform) is computed within the circumscribing circle.
        *            \a 0 means that the retinal image is computed within the inscribed circle.
        *\param S the number of sectors of the cortical image (default value 70 pixel).
        *         Its value is usually internally computed to obtain a pixel aspect ratio equals to 1.
        *\param sp \a 1 (default value) means that the parameter \a S is internally computed.
        *          \a 0 means that the parameter \a S is provided by the user.
        */</doc>
<def f='opencv/modules/contrib/src/logpolar_bsm.cpp' l='65' ll='108' type='void cv::LogPolar_Interp::LogPolar_Interp(int w, int h, Point2i center, int _R = 70, double _ro0 = 3., int _interp = INTER_LINEAR, int full = 1, int _s = 117, int sp = 1)'/>
<doc f='opencv/modules/contrib/src/logpolar_bsm.cpp' l='64'>//------------------------------------interp-------------------------------------------</doc>
