<inh f='opencv/modules/ml/include/opencv2/ml/ml.hpp' l='140' c='CvStatModel'/>
<def f='opencv/modules/ml/include/opencv2/ml/ml.hpp' l='1373' ll='1863'/>
<size>168</size>
<doc f='opencv/modules/ml/include/opencv2/ml/ml.hpp' l='1325'>// DataType: CLASS CvGBTrees
// Gradient Boosting Trees (GBT) algorithm implementation.
//
// data             - training dataset
// params           - parameters of the CvGBTrees
// weak             - array[0..(class_count-1)] of CvSeq
//                    for storing tree ensembles
// orig_response    - original responses of the training set samples
// sum_response     - predicitons of the current model on the training dataset.
//                    this matrix is updated on every iteration.
// sum_response_tmp - predicitons of the model on the training set on the next
//                    step. On every iteration values of sum_responses_tmp are
//                    computed via sum_responses values. When the current
//                    step is complete sum_response values become equal to
//                    sum_responses_tmp.
// sampleIdx       - indices of samples used for training the ensemble.
//                    CvGBTrees training procedure takes a set of samples
//                    (train_data) and a set of responses (responses).
//                    Only pairs (train_data[i], responses[i]), where i is
//                    in sample_idx are used for training the ensemble.
// subsample_train  - indices of samples used for training a single decision
//                    tree on the current step. This indices are countered
//                    relatively to the sample_idx, so that pairs
//                    (train_data[sample_idx[i]], responses[sample_idx[i]])
//                    are used for training a decision tree.
//                    Training set is randomly splited
//                    in two parts (subsample_train and subsample_test)
//                    on every iteration accordingly to the portion parameter.
// subsample_test   - relative indices of samples from the training set,
//                    which are not used for training a tree on the current
//                    step.
// missing          - mask of the missing values in the training set. This
//                    matrix has the same size as train_data. 1 - missing
//                    value, 0 - not a missing value.
// class_labels     - output class labels map.
// rng              - random number generator. Used for spliting the
//                    training set.
// class_count      - count of output classes.
//                    class_count == 1 in the case of regression,
//                    and &gt; 1 in the case of classification.
// delta            - Huber loss function parameter.
// base_value       - start point of the gradient descent procedure.
//                    model prediction is
//                    f(x) = f_0 + sum_{i=1..weak_count-1}(f_i(x)), where
//                    f_0 is the base value.</doc>
<fun r='_ZN9CvGBTreesC1Ev'/>
<fun r='_ZN9CvGBTreesC1EPK5CvMatiS2_S2_S2_S2_S2_15CvGBTreesParams'/>
<fun r='_ZN9CvGBTreesD1Ev'/>
<fun r='_ZN9CvGBTrees5trainEPK5CvMatiS2_S2_S2_S2_S2_15CvGBTreesParamsb'/>
<fun r='_ZN9CvGBTrees5trainEP8CvMLData15CvGBTreesParamsb'/>
<fun r='_ZNK9CvGBTrees14predict_serialEPK5CvMatS2_PS0_7CvSlicei'/>
<fun r='_ZNK9CvGBTrees7predictEPK5CvMatS2_PS0_7CvSlicei'/>
<fun r='_ZN9CvGBTrees5clearEv'/>
<fun r='_ZN9CvGBTrees10calc_errorEP8CvMLDataiPSt6vectorIfSaIfEE'/>
<fun r='_ZNK9CvGBTrees5writeEP13CvFileStoragePKc'/>
<fun r='_ZN9CvGBTrees4readEP13CvFileStorageP10CvFileNode'/>
<fun r='_ZN9CvGBTreesC1ERKN2cv3MatEiS3_S3_S3_S3_S3_15CvGBTreesParams'/>
<fun r='_ZN9CvGBTrees5trainERKN2cv3MatEiS3_S3_S3_S3_S3_15CvGBTreesParamsb'/>
<fun r='_ZNK9CvGBTrees7predictERKN2cv3MatES3_RKNS0_5RangeEi'/>
<fun r='_ZN9CvGBTrees13find_gradientEi'/>
<fun r='_ZN9CvGBTrees13change_valuesEP7CvDTreei'/>
<fun r='_ZN9CvGBTrees18find_optimal_valueEPK5CvMat'/>
<fun r='_ZN9CvGBTrees12do_subsampleEv'/>
<fun r='_ZN9CvGBTrees10leaves_getEPP11CvDTreeNodeRiS1_'/>
<fun r='_ZN9CvGBTrees9GetLeavesEPK7CvDTreeRi'/>
<fun r='_ZNK9CvGBTrees12problem_typeEv'/>
<fun r='_ZNK9CvGBTrees12write_paramsEP13CvFileStorage'/>
<fun r='_ZN9CvGBTrees11read_paramsEP13CvFileStorageP10CvFileNode'/>
<fun r='_ZNK9CvGBTrees7get_lenEPK5CvMat'/>
<mbr r='CvGBTrees::data' o='128' t='CvDTreeTrainData *'/>
<mbr r='CvGBTrees::params' o='192' t='CvGBTreesParams'/>
<mbr r='CvGBTrees::weak' o='576' t='CvSeq **'/>
<mbr r='CvGBTrees::orig_response' o='640' t='CvMat *'/>
<mbr r='CvGBTrees::sum_response' o='704' t='CvMat *'/>
<mbr r='CvGBTrees::sum_response_tmp' o='768' t='CvMat *'/>
<mbr r='CvGBTrees::sample_idx' o='832' t='CvMat *'/>
<mbr r='CvGBTrees::subsample_train' o='896' t='CvMat *'/>
<mbr r='CvGBTrees::subsample_test' o='960' t='CvMat *'/>
<mbr r='CvGBTrees::missing' o='1024' t='CvMat *'/>
<mbr r='CvGBTrees::class_labels' o='1088' t='CvMat *'/>
<mbr r='CvGBTrees::rng' o='1152' t='cv::RNG *'/>
<mbr r='CvGBTrees::class_count' o='1216' t='int'/>
<mbr r='CvGBTrees::delta' o='1248' t='float'/>
<mbr r='CvGBTrees::base_value' o='1280' t='float'/>
