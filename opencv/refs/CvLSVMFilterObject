<def f='opencv/modules/objdetect/include/opencv2/objdetect/objdetect.hpp' l='184' ll='191'/>
<size>48</size>
<doc f='opencv/modules/objdetect/include/opencv2/objdetect/objdetect.hpp' l='170'>// DataType: STRUCT filterObject
// Description of the filter, which corresponds to the part of the object
// V               - ideal (penalty = 0) position of the partial filter
//                   from the root filter position (V_i in the paper)
// penaltyFunction - vector describes penalty function (d_i in the paper)
//                   pf[0] * x + pf[1] * y + pf[2] * x^2 + pf[3] * y^2
// FILTER DESCRIPTION
//   Rectangular map (sizeX x sizeY),
//   every cell stores feature vector (dimension = p)
// H               - matrix of feature vectors
//                   to set and get feature vectors (i,j)
//                   used formula H[(j * sizeX + i) * p + k], where
//                   k - component of feature vector in cell (i, j)
// END OF FILTER DESCRIPTION</doc>
<mbr r='CvLSVMFilterObject::V' o='0' t='CvLSVMFilterPosition'/>
<mbr r='CvLSVMFilterObject::fineFunction' o='96' t='float [4]'/>
<mbr r='CvLSVMFilterObject::sizeX' o='224' t='int'/>
<mbr r='CvLSVMFilterObject::sizeY' o='256' t='int'/>
<mbr r='CvLSVMFilterObject::numFeatures' o='288' t='int'/>
<mbr r='CvLSVMFilterObject::H' o='320' t='float *'/>
