<dec f='ceres-solver/internal/ceres/implicit_schur_complement.h' l='128' type='void ceres::internal::ImplicitSchurComplement::BackSubstitute(const double * x, double * y)'/>
<def f='ceres-solver/internal/ceres/implicit_schur_complement.cc' l='168' ll='195' type='void ceres::internal::ImplicitSchurComplement::BackSubstitute(const double * x, double * y)'/>
<doc f='ceres-solver/internal/ceres/implicit_schur_complement.cc' l='166'>// Similar to RightMultiply, use the block structure of the matrix A
// to compute y = (E&apos;E)^-1 (E&apos;b - E&apos;F x).</doc>
<doc f='ceres-solver/internal/ceres/implicit_schur_complement.h' l='124'>// y = (E&apos;E)^-1 (E&apos;b - E&apos;F x). Given an estimate of the solution to
  // the Schur complement system, this method computes the value of
  // the e_block variables that were eliminated to form the Schur
  // complement.</doc>
<use f='ceres-solver/internal/ceres/implicit_schur_complement_test.cc' l='168' u='c' c='_ZN5ceres8internal27ImplicitSchurComplementTest27TestImplicitSchurComplementEPd'/>
<use f='ceres-solver/internal/ceres/iterative_schur_complement_solver.cc' l='92' u='c' c='_ZN5ceres8internal30IterativeSchurComplementSolver9SolveImplEPNS0_17BlockSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<use f='ceres-solver/internal/ceres/iterative_schur_complement_solver.cc' l='173' u='c' c='_ZN5ceres8internal30IterativeSchurComplementSolver9SolveImplEPNS0_17BlockSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
