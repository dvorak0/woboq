<dec f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h' l='74' type='void ceres::internal::BlockRandomAccessDiagonalMatrix::Invert()'/>
<use f='ceres-solver/internal/ceres/block_jacobi_preconditioner.cc' l='96' u='c' c='_ZN5ceres8internal25BlockJacobiPreconditioner10UpdateImplERKNS0_17BlockSparseMatrixEPKd'/>
<doc f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h' l='73'>// Invert the matrix assuming that each block is positive definite.</doc>
<def f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc' l='124' ll='136' type='void ceres::internal::BlockRandomAccessDiagonalMatrix::Invert()'/>
<use f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc' l='153' u='c' c='_ZN5ceres8internal47BlockRandomAccessDiagonalMatrixTest_Invert_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/schur_complement_solver.cc' l='653' u='c' c='_ZN5ceres8internal27SparseSchurComplementSolver47SolveReducedLinearSystemUsingConjugateGradientsERKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<use f='ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc' l='103' u='c' c='_ZN5ceres8internal25SchurJacobiPreconditioner10UpdateImplERKNS0_17BlockSparseMatrixEPKd'/>
