<dec f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.h' l='66' type='void ceres::internal::BlockRandomAccessSparseMatrix::~BlockRandomAccessSparseMatrix()'/>
<inh f='ceres-solver/internal/ceres/block_random_access_matrix.h' l='101' c='_ZN5ceres8internal23BlockRandomAccessMatrixD1Ev'/>
<def f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc' l='127' ll='133' type='void ceres::internal::BlockRandomAccessSparseMatrix::~BlockRandomAccessSparseMatrix()'/>
<doc f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc' l='125'>// Assume that the user does not hold any locks on any cell blocks
// when they are calling SetZero.</doc>
<doc f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.h' l='64'>// The destructor is not thread safe. It assumes that no one is
  // modifying any cells when the matrix is being destroyed.</doc>
