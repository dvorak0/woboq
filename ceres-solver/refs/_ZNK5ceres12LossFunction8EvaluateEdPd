<dec f='ceres-solver/include/ceres/loss_function.h' l='114' type='void ceres::LossFunction::Evaluate(double sq_norm, double * out) const'/>
<ovr f='ceres-solver/include/ceres/loss_function.h' l='399' c='_ZNK5ceres19LossFunctionWrapper8EvaluateEdPd'/>
<use f='ceres-solver/include/ceres/loss_function.h' l='406' u='c' c='_ZNK5ceres19LossFunctionWrapper8EvaluateEdPd'/>
<doc f='ceres-solver/include/ceres/loss_function.h' l='90'>// For a residual vector with squared 2-norm &apos;sq_norm&apos;, this method
  // is required to fill in the value and derivatives of the loss
  // function (rho in this example):
  //
  //   out[0] = rho(sq_norm),
  //   out[1] = rho&apos;(sq_norm),
  //   out[2] = rho&apos;&apos;(sq_norm),
  //
  // Here the convention is that the contribution of a term to the
  // cost function is given by 1/2 rho(s),  where
  //
  //   s = ||residuals||^2.
  //
  // Calling the method with a negative value of &apos;s&apos; is an error and
  // the implementations are not required to handle that case.
  //
  // Most sane choices of rho() satisfy:
  //
  //   rho(0) = 0,
  //   rho&apos;(0) = 1,
  //   rho&apos;(s) &lt; 1 in outlier region,
  //   rho&apos;&apos;(s) &lt; 0 in outlier region,
  //
  // so that they mimic the least squares cost for small residuals.</doc>
<ovr f='ceres-solver/examples/fields_of_experts.cc' l='78' c='_ZNK5ceres8examples19FieldsOfExpertsLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/c_api.cc' l='104' c='_ZNK20CallbackLossFunction8EvaluateEdPd'/>
<use f='ceres-solver/internal/ceres/c_api.cc' l='138' u='c' c='ceres_stock_loss_function'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='41' c='_ZNK5ceres11TrivialLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='47' c='_ZNK5ceres9HuberLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='63' c='_ZNK5ceres12SoftLOneLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='72' c='_ZNK5ceres10CauchyLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='81' c='_ZNK5ceres10ArctanLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='98' c='_ZNK5ceres12TolerantLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='117' c='_ZNK5ceres9TukeyLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='150' c='_ZNK5ceres12ComposedLoss8EvaluateEdPd'/>
<use f='ceres-solver/internal/ceres/loss_function.cc' l='152' u='c' c='_ZNK5ceres12ComposedLoss8EvaluateEdPd'/>
<use f='ceres-solver/internal/ceres/loss_function.cc' l='153' u='c' c='_ZNK5ceres12ComposedLoss8EvaluateEdPd'/>
<ovr f='ceres-solver/internal/ceres/loss_function.cc' l='161' c='_ZNK5ceres10ScaledLoss8EvaluateEdPd'/>
<use f='ceres-solver/internal/ceres/loss_function.cc' l='167' u='c' c='_ZNK5ceres10ScaledLoss8EvaluateEdPd'/>
<use f='ceres-solver/internal/ceres/loss_function_test.cc' l='52' u='c' c='_ZN5ceres8internal12_GLOBAL__N_125AssertLossFunctionIsValidERKNS_12LossFunctionEd'/>
<use f='ceres-solver/internal/ceres/loss_function_test.cc' l='61' u='c' c='_ZN5ceres8internal12_GLOBAL__N_125AssertLossFunctionIsValidERKNS_12LossFunctionEd'/>
<use f='ceres-solver/internal/ceres/loss_function_test.cc' l='62' u='c' c='_ZN5ceres8internal12_GLOBAL__N_125AssertLossFunctionIsValidERKNS_12LossFunctionEd'/>
<use f='ceres-solver/internal/ceres/residual_block.cc' l='165' u='c' c='_ZNK5ceres8internal13ResidualBlock8EvaluateEbPdS2_PS2_S2_'/>
