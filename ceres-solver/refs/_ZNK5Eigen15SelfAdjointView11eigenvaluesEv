<dec f='include/eigen3/Eigen/src/Core/SelfAdjointView.h' l='162' type='EigenvaluesReturnType Eigen::SelfAdjointView::eigenvalues() const'/>
<def f='include/eigen3/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h' l='87' ll='94' type='typename SelfAdjointView&lt;MatrixType, UpLo&gt;::EigenvaluesReturnType Eigen::SelfAdjointView::eigenvalues() const'/>
<use f='include/eigen3/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h' l='155' u='c' c='_ZNK5Eigen15SelfAdjointView12operatorNormEv'/>
<doc f='include/eigen3/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h' l='73'>/** \brief Computes the eigenvalues of a matrix
  * \returns Column vector containing the eigenvalues.
  *
  * \eigenvalues_module
  * This function computes the eigenvalues with the help of the
  * SelfAdjointEigenSolver class.  The eigenvalues are repeated according to
  * their algebraic multiplicity, so there are as many eigenvalues as rows in
  * the matrix.
  *
  * Example: \include SelfAdjointView_eigenvalues.cpp
  * Output: \verbinclude SelfAdjointView_eigenvalues.out
  *
  * \sa SelfAdjointEigenSolver::eigenvalues(), MatrixBase::eigenvalues()
  */</doc>
