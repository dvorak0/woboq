<def f='ceres-solver/internal/ceres/parameter_block.h' l='63' ll='402'/>
<size>80</size>
<doc f='ceres-solver/internal/ceres/parameter_block.h' l='54'>// The parameter block encodes the location of the user&apos;s original value, and
// also the &quot;current state&quot; of the parameter. The evaluator uses whatever is in
// the current state of the parameter when evaluating. This is inlined since the
// methods are performance sensitive.
//
// The class is not thread-safe, unless only const methods are called. The
// parameter block may also hold a pointer to a local parameterization; the
// parameter block does not take ownership of this pointer, so the user is
// responsible for the proper disposal of the local parameterization.</doc>
<fun r='_ZN5ceres8internal14ParameterBlockC1EPdii'/>
<fun r='_ZN5ceres8internal14ParameterBlockC1EPdiiPNS_21LocalParameterizationE'/>
<fun r='_ZNK5ceres8internal14ParameterBlock4SizeEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock8SetStateEPKd'/>
<fun r='_ZNK5ceres8internal14ParameterBlock8GetStateEPd'/>
<fun r='_ZNK5ceres8internal14ParameterBlock5stateEv'/>
<fun r='_ZNK5ceres8internal14ParameterBlock10user_stateEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock18mutable_user_stateEv'/>
<fun r='_ZNK5ceres8internal14ParameterBlock22local_parameterizationEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock30mutable_local_parameterizationEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock11SetConstantEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock10SetVaryingEv'/>
<fun r='_ZNK5ceres8internal14ParameterBlock10IsConstantEv'/>
<fun r='_ZNK5ceres8internal14ParameterBlock5indexEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock9set_indexEi'/>
<fun r='_ZNK5ceres8internal14ParameterBlock12state_offsetEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock16set_state_offsetEi'/>
<fun r='_ZNK5ceres8internal14ParameterBlock12delta_offsetEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock16set_delta_offsetEi'/>
<fun r='_ZNK5ceres8internal14ParameterBlock29LocalParameterizationJacobianEv'/>
<fun r='_ZNK5ceres8internal14ParameterBlock9LocalSizeEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock19SetParameterizationEPNS_21LocalParameterizationE'/>
<fun r='_ZN5ceres8internal14ParameterBlock13SetUpperBoundEid'/>
<fun r='_ZN5ceres8internal14ParameterBlock13SetLowerBoundEid'/>
<fun r='_ZN5ceres8internal14ParameterBlock4PlusEPKdS3_Pd'/>
<fun r='_ZNK5ceres8internal14ParameterBlock8ToStringEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock31EnableResidualBlockDependenciesEv'/>
<fun r='_ZN5ceres8internal14ParameterBlock16AddResidualBlockEPNS0_13ResidualBlockE'/>
<fun r='_ZN5ceres8internal14ParameterBlock19RemoveResidualBlockEPNS0_13ResidualBlockE'/>
<fun r='_ZN5ceres8internal14ParameterBlock23mutable_residual_blocksEv'/>
<fun r='_ZNK5ceres8internal14ParameterBlock22LowerBoundForParameterEi'/>
<fun r='_ZNK5ceres8internal14ParameterBlock22UpperBoundForParameterEi'/>
<fun r='_ZN5ceres8internal14ParameterBlock4InitEPdiiPNS_21LocalParameterizationE'/>
<fun r='_ZN5ceres8internal14ParameterBlock35UpdateLocalParameterizationJacobianEv'/>
<mbr r='ceres::internal::ParameterBlock::user_state_' o='0' t='double *'/>
<mbr r='ceres::internal::ParameterBlock::size_' o='64' t='int'/>
<mbr r='ceres::internal::ParameterBlock::is_constant_' o='96' t='bool'/>
<mbr r='ceres::internal::ParameterBlock::local_parameterization_' o='128' t='ceres::LocalParameterization *'/>
<mbr r='ceres::internal::ParameterBlock::state_' o='192' t='const double *'/>
<mbr r='ceres::internal::ParameterBlock::local_parameterization_jacobian_' o='256' t='scoped_array&lt;double&gt;'/>
<mbr r='ceres::internal::ParameterBlock::index_' o='320' t='int32'/>
<mbr r='ceres::internal::ParameterBlock::state_offset_' o='352' t='int32'/>
<mbr r='ceres::internal::ParameterBlock::delta_offset_' o='384' t='int32'/>
<mbr r='ceres::internal::ParameterBlock::residual_blocks_' o='448' t='scoped_ptr&lt;ResidualBlockSet&gt;'/>
<mbr r='ceres::internal::ParameterBlock::upper_bounds_' o='512' t='scoped_array&lt;double&gt;'/>
<mbr r='ceres::internal::ParameterBlock::lower_bounds_' o='576' t='scoped_array&lt;double&gt;'/>
