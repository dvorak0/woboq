<def f='ceres-solver/internal/ceres/gmock/gmock.h' l='13038' ll='13043' type='internal::ElementsAreMatcher&lt; ::testing::tuple&lt;&gt; &gt; testing::ElementsAre()'/>
<doc f='ceres-solver/internal/ceres/gmock/gmock.h' l='13024'>// ElementsAre(e_1, e_2, ... e_n) matches an STL-style container with
// n elements, where the i-th element in the container must
// match the i-th argument in the list.  Each argument of
// ElementsAre() can be either a value or a matcher.  We support up to
// 10 arguments.
//
// The use of DecayArray in the implementation allows ElementsAre()
// to accept string literals, whose type is const char[N], but we
// want to treat them as const char*.
//
// NOTE: Since ElementsAre() cares about the order of the elements, it
// must not be used with containers whose elements&apos;s order is
// undefined (e.g. hash_map).</doc>
