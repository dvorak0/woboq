<inh f='ceres-solver/internal/ceres/linear_solver.h' l='319' c='ceres::internal::TypedLinearSolver'/>
<def f='ceres-solver/internal/ceres/schur_complement_solver.h' l='111' ll='148'/>
<ovr f='ceres-solver/internal/ceres/schur_complement_solver.h' l='151' c='ceres::internal::DenseSchurComplementSolver'/>
<ovr f='ceres-solver/internal/ceres/schur_complement_solver.h' l='167' c='ceres::internal::SparseSchurComplementSolver'/>
<size>336</size>
<doc f='ceres-solver/internal/ceres/schur_complement_solver.h' l='61'>// Base class for Schur complement based linear least squares
// solvers. It assumes that the input linear system Ax = b can be
// partitioned into
//
//  E y + F z = b
//
// Where x = [y;z] is a partition of the variables.  The paritioning
// of the variables is such that, E&apos;E is a block diagonal
// matrix. Further, the rows of A are ordered so that for every
// variable block in y, all the rows containing that variable block
// occur as a vertically contiguous block. i.e the matrix A looks like
//
//              E                 F
//  A = [ y1   0   0   0 |  z1    0    0   0    z5]
//      [ y1   0   0   0 |  z1   z2    0   0     0]
//      [  0  y2   0   0 |   0    0   z3   0     0]
//      [  0   0  y3   0 |  z1   z2   z3  z4    z5]
//      [  0   0  y3   0 |  z1    0    0   0    z5]
//      [  0   0   0  y4 |   0    0    0   0    z5]
//      [  0   0   0  y4 |   0   z2    0   0     0]
//      [  0   0   0  y4 |   0    0    0   0     0]
//      [  0   0   0   0 |  z1    0    0   0     0]
//      [  0   0   0   0 |   0    0   z3  z4    z5]
//
// This structure should be reflected in the corresponding
// CompressedRowBlockStructure object associated with A. The linear
// system Ax = b should either be well posed or the array D below
// should be non-null and the diagonal matrix corresponding to it
// should be non-singular.
//
// SchurComplementSolver has two sub-classes.
//
// DenseSchurComplementSolver: For problems where the Schur complement
// matrix is small and dense, or if CHOLMOD/SuiteSparse is not
// installed. For structure from motion problems, this is solver can
// be used for problems with upto a few hundred cameras.
//
// SparseSchurComplementSolver: For problems where the Schur
// complement matrix is large and sparse. It requires that
// CHOLMOD/SuiteSparse be installed, as it uses CHOLMOD to find a
// sparse Cholesky factorization of the Schur complement. This solver
// can be used for solving structure from motion problems with tens of
// thousands of cameras, though depending on the exact sparsity
// structure, it maybe better to use an iterative solver.
//
// The two solvers can be instantiated by calling
// LinearSolver::CreateLinearSolver with LinearSolver::Options::type
// set to DENSE_SCHUR and SPARSE_SCHUR
// respectively. LinearSolver::Options::elimination_groups[0] should be
// at least 1.</doc>
<fun r='_ZN5ceres8internal21SchurComplementSolverC1ERKNS0_12LinearSolver7OptionsE'/>
<fun r='_ZN5ceres8internal21SchurComplementSolverD1Ev'/>
<fun r='_ZN5ceres8internal21SchurComplementSolver9SolveImplEPNS0_17BlockSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<fun r='_ZNK5ceres8internal21SchurComplementSolver7optionsEv'/>
<fun r='_ZNK5ceres8internal21SchurComplementSolver3lhsEv'/>
<fun r='_ZN5ceres8internal21SchurComplementSolver7set_lhsEPNS0_23BlockRandomAccessMatrixE'/>
<fun r='_ZNK5ceres8internal21SchurComplementSolver3rhsEv'/>
<fun r='_ZN5ceres8internal21SchurComplementSolver7set_rhsEPd'/>
<fun r='_ZN5ceres8internal21SchurComplementSolver11InitStorageEPKNS0_27CompressedRowBlockStructureE'/>
<fun r='_ZN5ceres8internal21SchurComplementSolver24SolveReducedLinearSystemERKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<mbr r='ceres::internal::SchurComplementSolver::options_' o='1856' t='LinearSolver::Options'/>
<mbr r='ceres::internal::SchurComplementSolver::eliminator_' o='2496' t='scoped_ptr&lt;ceres::internal::SchurEliminatorBase&gt;'/>
<mbr r='ceres::internal::SchurComplementSolver::lhs_' o='2560' t='scoped_ptr&lt;ceres::internal::BlockRandomAccessMatrix&gt;'/>
<mbr r='ceres::internal::SchurComplementSolver::rhs_' o='2624' t='scoped_array&lt;double&gt;'/>
<fun r='_ZN5ceres8internal21SchurComplementSolverC1ERKS1_'/>
