<dec f='ceres-solver/internal/ceres/dogleg_strategy.h' l='92' type='bool ceres::internal::DoglegStrategy::FindMinimumOnTrustRegionBoundary(Vector2d * minimum) const'/>
<use f='ceres-solver/internal/ceres/dogleg_strategy.cc' l='320' u='c' c='_ZN5ceres8internal14DoglegStrategy25ComputeSubspaceDoglegStepEPd'/>
<def f='ceres-solver/internal/ceres/dogleg_strategy.cc' l='471' ll='513' type='bool ceres::internal::DoglegStrategy::FindMinimumOnTrustRegionBoundary(Vector2d * minimum) const'/>
<doc f='ceres-solver/internal/ceres/dogleg_strategy.cc' l='458'>// This function attempts to solve the boundary-constrained subspace problem
//
//   min. 1/2 x^T B^T H B x + g^T B x
//   s.t. || B x ||^2 = r^2
//
// where B is an orthonormal subspace basis and r is the trust-region radius.
//
// This is done by finding the roots of a fourth degree polynomial. If the
// root finding fails, the function returns false and minimum will be set
// to (0, 0). If it succeeds, true is returned.
//
// In the failure case, another step should be taken, such as the traditional
// dogleg step.</doc>
