<def f='ceres-solver/internal/ceres/gmock/gmock.h' l='12017' macro='1' type='typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Result testing::MockFunction&lt;type-parameter-0-0 (type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4, type-parameter-0-5, type-parameter-0-6, type-parameter-0-7, type-parameter-0-8)&gt;::Call(typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Argument1 gmock_a1, typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Argument2 gmock_a2, typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Argument3 gmock_a3, typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Argument4 gmock_a4, typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Argument5 gmock_a5, typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Argument6 gmock_a6, typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Argument7 gmock_a7, typename ::testing::internal::Function&lt;R (A0, A1, A2, A3, A4, A5, A6, A7)&gt;::Argument8 gmock_a8)'/>
