<dec f='ceres-solver/internal/ceres/parameter_block_ordering.h' l='58' type='int ceres::internal::ComputeSchurOrdering(const ceres::internal::Program &amp; program, std::vector&lt;ParameterBlock *&gt; * ordering)'/>
<doc f='ceres-solver/internal/ceres/parameter_block_ordering.h' l='45'>// Uses an approximate independent set ordering to order the parameter
// blocks of a problem so that it is suitable for use with Schur
// complement based solvers. The output variable ordering contains an
// ordering of the parameter blocks and the return value is size of
// the independent set or the number of e_blocks (see
// schur_complement_solver.h for an explanation). Constant parameters
// are added to the end.
//
// The ordering vector has the structure
//
// ordering = [independent set,
//             complement of the independent set,
//             fixed blocks]</doc>
<def f='ceres-solver/internal/ceres/parameter_block_ordering.cc' l='81' ll='98' type='int ceres::internal::ComputeSchurOrdering(const ceres::internal::Program &amp; program, vector&lt;ceres::internal::ParameterBlock *&gt; * ordering)'/>
<use f='ceres-solver/internal/ceres/parameter_block_ordering_test.cc' l='174' u='c' c='_ZN5ceres8internal31SchurOrderingTest_OneFixed_Test8TestBodyEv'/>
