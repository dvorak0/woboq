<def f='include/eigen3/Eigen/src/QR/HouseholderQR.h' l='42' ll='196'/>
<doc f='include/eigen3/Eigen/src/QR/HouseholderQR.h' l='17'>/** \ingroup QR_Module
  *
  *
  * \class HouseholderQR
  *
  * \brief Householder QR decomposition of a matrix
  *
  * \param MatrixType the type of the matrix of which we are computing the QR decomposition
  *
  * This class performs a QR decomposition of a matrix \b A into matrices \b Q and \b R
  * such that 
  * \f[
  *  \mathbf{A} = \mathbf{Q} \, \mathbf{R}
  * \f]
  * by using Householder transformations. Here, \b Q a unitary matrix and \b R an upper triangular matrix.
  * The result is stored in a compact way compatible with LAPACK.
  *
  * Note that no pivoting is performed. This is \b not a rank-revealing decomposition.
  * If you want that feature, use FullPivHouseholderQR or ColPivHouseholderQR instead.
  *
  * This Householder QR decomposition is faster, but less numerically stable and less feature-full than
  * FullPivHouseholderQR or ColPivHouseholderQR.
  *
  * \sa MatrixBase::householderQr()
  */</doc>
<fun r='_ZN5Eigen13HouseholderQRC1Ev'/>
<fun r='_ZN5Eigen13HouseholderQRC1ENT_5IndexES2_'/>
<fun r='_ZN5Eigen13HouseholderQRC1ERKT_'/>
<fun r='_ZNK5Eigen13HouseholderQR5solveERKNS_10MatrixBaseIT_EE'/>
<fun r='_ZNK5Eigen13HouseholderQR12householderQEv'/>
<fun r='_ZNK5Eigen13HouseholderQR8matrixQREv'/>
<fun r='_ZN5Eigen13HouseholderQR7computeERKT_'/>
<fun r='_ZNK5Eigen13HouseholderQR14absDeterminantEv'/>
<fun r='_ZNK5Eigen13HouseholderQR17logAbsDeterminantEv'/>
<fun r='_ZNK5Eigen13HouseholderQR4rowsEv'/>
<fun r='_ZNK5Eigen13HouseholderQR4colsEv'/>
<fun r='_ZNK5Eigen13HouseholderQR7hCoeffsEv'/>
<mbr r='Eigen::HouseholderQR::m_qr' t='MatrixType'/>
<mbr r='Eigen::HouseholderQR::m_hCoeffs' t='HCoeffsType'/>
<mbr r='Eigen::HouseholderQR::m_temp' t='RowVectorType'/>
<mbr r='Eigen::HouseholderQR::m_isInitialized' t='bool'/>
<fun r='_ZNK5Eigen13HouseholderQR14absDeterminantEv'/>
<fun r='_ZNK5Eigen13HouseholderQR17logAbsDeterminantEv'/>
<fun r='_ZN5Eigen13HouseholderQR7computeERKT_'/>
