<dec f='ceres-solver/internal/ceres/linear_solver.h' l='284' type='static ceres::LinearSolverType ceres::internal::LinearSolver::LinearSolverForZeroEBlocks(ceres::LinearSolverType linear_solver_type)'/>
<doc f='ceres-solver/internal/ceres/linear_solver.h' l='279'>// If the optimization problem is such that there are no remaining
  // e-blocks, a Schur type linear solver cannot be used. If the
  // linear solver is of Schur type, this function implements a policy
  // to select an alternate nearest linear solver to the one selected
  // by the user. The input linear_solver_type is returned otherwise.</doc>
<def f='ceres-solver/internal/ceres/linear_solver.cc' l='49' ll='71' type='static ceres::LinearSolverType ceres::internal::LinearSolver::LinearSolverForZeroEBlocks(ceres::LinearSolverType linear_solver_type)'/>
<use f='ceres-solver/internal/ceres/trust_region_preprocessor.cc' l='84' u='c' c='_ZN5ceres8internal12_GLOBAL__N_162AlternateLinearSolverAndPreconditionerForSchurTypeLinearSolverEPNS_6Solver7OptionsE'/>
