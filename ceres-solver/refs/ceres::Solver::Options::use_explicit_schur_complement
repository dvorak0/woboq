<use f='ceres-solver/include/ceres/solver.h' l='122' u='w' c='_ZN5ceres6Solver7OptionsC1Ev'/>
<dec f='ceres-solver/include/ceres/solver.h' l='522' type='bool'/>
<use f='ceres-solver/examples/bundle_adjuster.cc' l='144' u='w' c='_ZN5ceres8examples15SetLinearSolverEPNS_6Solver7OptionsE'/>
<offset>1984</offset>
<doc f='ceres-solver/include/ceres/solver.h' l='501'>// Use an explicitly computed Schur complement matrix with
    // ITERATIVE_SCHUR.
    //
    // By default this option is disabled and ITERATIVE_SCHUR
    // evaluates evaluates matrix-vector products between the Schur
    // complement and a vector implicitly by exploiting the algebraic
    // expression for the Schur complement.
    //
    // The cost of this evaluation scales with the number of non-zeros
    // in the Jacobian.
    //
    // For small to medium sized problems there is a sweet spot where
    // computing the Schur complement is cheap enough that it is much
    // more efficient to explicitly compute it and use it for evaluating
    // the matrix-vector products.
    //
    // Enabling this option tells ITERATIVE_SCHUR to use an explicitly
    // computed Schur complement.
    //
    // NOTE: This option can only be used with the SCHUR_JACOBI
    // preconditioner.</doc>
<use f='ceres-solver/internal/ceres/solver.cc' l='130' u='r' c='_ZN5ceres12_GLOBAL__N_126TrustRegionOptionsAreValidERKNS_6Solver7OptionsEPSs'/>
<use f='ceres-solver/internal/ceres/trust_region_preprocessor.cc' l='192' u='r' c='_ZN5ceres8internal12_GLOBAL__N_117SetupLinearSolverEPNS0_19PreprocessedProblemE'/>
