<def f='include/eigen3/Eigen/src/plugins/ArrayCwiseUnaryOps.h' l='62' ll='66' type='const CwiseUnaryOp&lt;internal::scalar_sqrt_op&lt;Scalar&gt;, const Derived&gt; Eigen::ArrayBase::sqrt() const'/>
<doc f='include/eigen3/Eigen/src/plugins/ArrayCwiseUnaryOps.h' l='55'>/** \returns an expression of the coefficient-wise square root of *this.
  *
  * Example: \include Cwise_sqrt.cpp
  * Output: \verbinclude Cwise_sqrt.out
  *
  * \sa pow(), square()
  */</doc>
<use f='ceres-solver/internal/ceres/dogleg_strategy.cc' l='126' u='c' c='_ZN5ceres8internal14DoglegStrategy11ComputeStepERKNS0_19TrustRegionStrategy15PerSolveOptionsEPNS0_12SparseMatrixEPKdPd'/>
<use f='ceres-solver/internal/ceres/dogleg_strategy_test.cc' l='76' u='c' c='_ZN5ceres8internal12_GLOBAL__N_128DoglegStrategyFixtureEllipse5SetUpEv'/>
<use f='ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc' l='87' u='c' c='_ZN5ceres8internal26LevenbergMarquardtStrategy11ComputeStepERKNS0_19TrustRegionStrategy15PerSolveOptionsEPNS0_12SparseMatrixEPKdPd'/>
