<dec f='ceres-solver/internal/ceres/block_random_access_dense_matrix.h' l='75' type='void ceres::internal::BlockRandomAccessDenseMatrix::SetZero()'/>
<use f='ceres-solver/internal/ceres/block_random_access_dense_matrix.cc' l='58' u='c' c='_ZN5ceres8internal28BlockRandomAccessDenseMatrixC1ERKSt6vectorIiSaIiEE'/>
<inh f='ceres-solver/internal/ceres/block_random_access_matrix.h' l='121' c='_ZN5ceres8internal23BlockRandomAccessMatrix7SetZeroEv'/>
<def f='ceres-solver/internal/ceres/block_random_access_dense_matrix.cc' l='81' ll='85' type='void ceres::internal::BlockRandomAccessDenseMatrix::SetZero()'/>
<doc f='ceres-solver/internal/ceres/block_random_access_dense_matrix.cc' l='79'>// Assume that the user does not hold any locks on any cell blocks
// when they are calling SetZero.</doc>
<doc f='ceres-solver/internal/ceres/block_random_access_dense_matrix.h' l='73'>// This is not a thread safe method, it assumes that no cell is
  // locked.</doc>
