<dec f='ceres-solver/internal/ceres/evaluator.h' l='141' type='bool ceres::internal::Evaluator::Evaluate(const ceres::internal::Evaluator::EvaluateOptions &amp; evaluate_options, const double * state, double * cost, double * residuals, double * gradient, ceres::internal::SparseMatrix * jacobian)'/>
<use f='ceres-solver/internal/ceres/evaluator.h' l='156' u='c' c='_ZN5ceres8internal9Evaluator8EvaluateEPKdPdS4_S4_PNS0_12SparseMatrixE'/>
<doc f='ceres-solver/internal/ceres/evaluator.h' l='132'>// Evaluate the cost function for the given state. Returns the cost,
  // residuals, and jacobian in the corresponding arguments. Both residuals and
  // jacobian are optional; to avoid computing them, pass NULL.
  //
  // If non-NULL, the Jacobian must have a suitable sparsity pattern; only the
  // values array of the jacobian is modified.
  //
  // state is an array of size NumParameters(), cost is a pointer to a single
  // double, and residuals is an array of doubles of size NumResiduals().</doc>
<ovr f='ceres-solver/internal/ceres/program_evaluator.h' l='138' c='_ZN5ceres8internal16ProgramEvaluator8EvaluateERKNS0_9Evaluator15EvaluateOptionsEPKdPdS8_S8_PNS0_12SparseMatrixE'/>
<ovr f='ceres-solver/internal/ceres/gradient_problem_evaluator.h' l='52' c='_ZN5ceres8internal24GradientProblemEvaluator8EvaluateERKNS0_9Evaluator15EvaluateOptionsEPKdPdS8_S8_PNS0_12SparseMatrixE'/>
<use f='ceres-solver/internal/ceres/problem_impl.cc' l='807' u='c' c='_ZN5ceres8internal11ProblemImpl8EvaluateERKNS_7Problem15EvaluateOptionsEPdPSt6vectorIdSaIdEESA_PNS_9CRSMatrixE'/>
<ovr f='ceres-solver/internal/ceres/trust_region_minimizer_test.cc' l='86' c='_ZN5ceres8internal16PowellEvaluator28EvaluateERKNS0_9Evaluator15EvaluateOptionsEPKdPdS8_S8_PNS0_12SparseMatrixE'/>
