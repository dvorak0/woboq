<dec f='ceres-solver/include/ceres/covariance.h' l='385' type='bool ceres::Covariance::Compute(const std::vector&lt;const double *&gt; &amp; parameter_blocks, ceres::Problem * problem)'/>
<doc f='ceres-solver/include/ceres/covariance.h' l='366'>// Compute a part of the covariance matrix.
  //
  // The vector parameter_blocks contains the parameter blocks that
  // are used for computing the covariance matrix. From this vector
  // all covariance pairs are generated. This allows the covariance
  // estimation algorithm to only compute and store these blocks.
  //
  // parameter_blocks cannot contain duplicates. Bad things will
  // happen if they do.
  //
  // Note that the list of covariance_blocks is only used to determine
  // what parts of the covariance matrix are computed. The full
  // Jacobian is used to do the computation, i.e. they do not have an
  // impact on what part of the Jacobian is used for computation.
  //
  // The return value indicates the success or failure of the
  // covariance computation. Please see the documentation for
  // Covariance::Options for more on the conditions under which this
  // function returns false.</doc>
<def f='ceres-solver/internal/ceres/covariance.cc' l='58' ll='62' type='bool ceres::Covariance::Compute(const vector&lt;const double *&gt; &amp; parameter_blocks, ceres::Problem * problem)'/>
<use f='ceres-solver/internal/ceres/covariance_test.cc' l='990' u='c' c='_ZN5ceres8internal60CovarianceTest_DenseCovarianceMatrixFromSetOfParameters_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/covariance_test.cc' l='1019' u='c' c='_ZN5ceres8internal68CovarianceTest_DenseCovarianceMatrixFromSetOfParametersThreaded_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/covariance_test.cc' l='1058' u='c' c='_ZN5ceres8internal74CovarianceTest_DenseCovarianceMatrixFromSetOfParametersInTangentSpace_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/covariance_test.cc' l='1088' u='c' c='_ZN5ceres8internal44CovarianceTest_ComputeCovarianceFailure_Test8TestBodyEv'/>
