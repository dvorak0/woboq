<def f='include/c++/4.8/bits/stl_list.h' l='77' ll='97'/>
<ovr f='include/c++/4.8/bits/stl_list.h' l='106' c='std::_List_node'/>
<size>16</size>
<doc f='include/c++/4.8/bits/stl_list.h' l='70'>// Supporting structures are split into common and templated
    // types; the latter publicly inherits from the former in an
    // effort to reduce code duplication.  This results in some
    // &quot;needless&quot; static_cast&apos;ing later on, but it&apos;s all safe
    // downcasting.

    /// Common part of a node in the %list. </doc>
<mbr r='std::__detail::_List_node_base::_M_next' o='0' t='std::__detail::_List_node_base *'/>
<mbr r='std::__detail::_List_node_base::_M_prev' o='64' t='std::__detail::_List_node_base *'/>
<fun r='_ZNSt8__detail15_List_node_base4swapERS0_S1_'/>
<fun r='_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_'/>
<fun r='_ZNSt8__detail15_List_node_base10_M_reverseEv'/>
<fun r='_ZNSt8__detail15_List_node_base7_M_hookEPS0_'/>
<fun r='_ZNSt8__detail15_List_node_base9_M_unhookEv'/>
