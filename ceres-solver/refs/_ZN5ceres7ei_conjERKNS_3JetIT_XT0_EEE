<def f='ceres-solver/include/ceres/jet.h' l='799' type='const Jet&lt;T, N&gt; &amp; ceres::ei_conj(const Jet&lt;T, N&gt; &amp; x)'/>
<doc f='ceres-solver/include/ceres/jet.h' l='784'>// Define the helper functions Eigen needs to embed Jet types.
//
// NOTE(keir): machine_epsilon() and precision() are missing, because they don&apos;t
// work with nested template types (e.g. where the scalar is itself templated).
// Among other things, this means that decompositions of Jet&apos;s does not work,
// for example
//
//   Matrix&lt;Jet&lt;T, N&gt; ... &gt; A, x, b;
//   ...
//   A.solve(b, &amp;x)
//
// does not work and will fail with a strange compiler error.
//
// TODO(keir): This is an Eigen 2.0 limitation that is lifted in 3.0. When we
// switch to 3.0, also add the rest of the specialization functionality.</doc>
<doc f='ceres-solver/include/ceres/jet.h' l='799'>// NOLINT</doc>
