<use f='include/eigen3/Eigen/src/SparseQR/SparseQR.h' l='86' u='c' c='_ZN5Eigen8SparseQR7computeERKT_'/>
<dec f='include/eigen3/Eigen/src/SparseQR/SparseQR.h' l='89' type='void Eigen::SparseQR::analyzePattern(const MatrixType &amp; mat)'/>
<def f='include/eigen3/Eigen/src/SparseQR/SparseQR.h' l='263' ll='290' type='void Eigen::SparseQR::analyzePattern(const MatrixType &amp; mat)'/>
<doc f='include/eigen3/Eigen/src/SparseQR/SparseQR.h' l='256'>/** \brief Preprocessing step of a QR factorization 
  * 
  * In this step, the fill-reducing permutation is computed and applied to the columns of A
  * and the column elimination tree is computed as well. Only the sparcity pattern of \a mat is exploited.
  * 
  * \note In this step it is assumed that there is no empty row in the matrix \a mat.
  */</doc>
