<use f='ceres-solver/include/ceres/gradient_problem_solver.h' l='62' u='w' c='_ZN5ceres21GradientProblemSolver7OptionsC1Ev'/>
<dec f='ceres-solver/include/ceres/gradient_problem_solver.h' l='116' type='int'/>
<offset>96</offset>
<doc f='ceres-solver/include/ceres/gradient_problem_solver.h' l='92'>// The LBFGS hessian approximation is a low rank approximation to
    // the inverse of the Hessian matrix. The rank of the
    // approximation determines (linearly) the space and time
    // complexity of using the approximation. Higher the rank, the
    // better is the quality of the approximation. The increase in
    // quality is however is bounded for a number of reasons.
    //
    // 1. The method only uses secant information and not actual
    // derivatives.
    //
    // 2. The Hessian approximation is constrained to be positive
    // definite.
    //
    // So increasing this rank to a large number will cost time and
    // space complexity without the corresponding increase in solution
    // quality. There are no hard and fast rules for choosing the
    // maximum rank. The best choice usually requires some problem
    // specific experimentation.
    //
    // For more theoretical and implementation details of the LBFGS
    // method, please see:
    //
    // Nocedal, J. (1980). &quot;Updating Quasi-Newton Matrices with
    // Limited Storage&quot;. Mathematics of Computation 35 (151): 773â€“782.</doc>
<use f='ceres-solver/internal/ceres/gradient_problem_solver.cc' l='62' u='r' c='_ZN5ceres12_GLOBAL__N_143GradientProblemSolverOptionsToSolverOptionsERKNS_21GradientProblemSolver7OptionsE'/>
<use f='ceres-solver/internal/ceres/gradient_problem_solver.cc' l='116' u='r' c='_ZN5ceres21GradientProblemSolver5SolveERKNS0_7OptionsERKNS_15GradientProblemEPdPNS0_7SummaryE'/>
