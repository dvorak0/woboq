<dec f='ceres-solver/include/ceres/covariance.h' l='455' type='bool ceres::Covariance::GetCovarianceMatrixInTangentSpace(const std::vector&lt;const double *&gt; &amp; parameter_blocks, double * covariance_matrix)'/>
<doc f='ceres-solver/include/ceres/covariance.h' l='440'>// Return the covariance matrix corresponding to parameter_blocks
  // in the tangent space if a local parameterization is associated
  // with one of the parameter blocks else returns the covariance
  // matrix in the ambient space.
  //
  // Compute must be called before calling GetCovarianceMatrix and all
  // parameter_blocks must have been present in the vector
  // parameters_blocks when Compute was called. Otherwise
  // GetCovarianceMatrix returns false.
  //
  // covariance_matrix must point to a memory location that can store
  // the size of the covariance matrix. The covariance matrix will be
  // a square matrix whose row and column count is equal to the sum of
  // the sizes of the tangent spaces of the individual parameter
  // blocks. The covariance matrix will be a row-major matrix.</doc>
<def f='ceres-solver/internal/ceres/covariance.cc' l='91' ll='97' type='bool ceres::Covariance::GetCovarianceMatrixInTangentSpace(const std::vector&lt;const double *&gt; &amp; parameter_blocks, double * covariance_matrix)'/>
<use f='ceres-solver/internal/ceres/covariance_test.cc' l='1060' u='c' c='_ZN5ceres8internal74CovarianceTest_DenseCovarianceMatrixFromSetOfParametersInTangentSpace_Test8TestBodyEv'/>
