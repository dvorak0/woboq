<dec f='include/suitesparse/cholmod_core.h' l='504' type='int'/>
<offset>1024</offset>
<doc f='include/suitesparse/cholmod_core.h' l='491'>/* Let ns be the total number of columns in two adjacent supernodes.
	 * Let z be the fraction of zero entries in the two supernodes if they
	 * are merged (z includes zero entries from prior amalgamations).  The
	 * two supernodes are merged if:
	 *    (ns &lt;= nrelax [0]) || (no new zero entries added) ||
	 *    (ns &lt;= nrelax [1] &amp;&amp; z &lt; zrelax [0]) ||
	 *    (ns &lt;= nrelax [2] &amp;&amp; z &lt; zrelax [1]) || (z &lt; zrelax [2])
	 *
	 * Default parameters result in the following rule:
	 *    (ns &lt;= 4) || (no new zero entries added) ||
	 *    (ns &lt;= 16 &amp;&amp; z &lt; 0.8) || (ns &lt;= 48 &amp;&amp; z &lt; 0.1) || (z &lt; 0.05)
	 */</doc>
<doc f='include/suitesparse/cholmod_core.h' l='504'>/* X = cholmod_solve (sys, L, B, Common) computes
			     * x=A\b or solves a related system.  If L and B are
	 * both real, then X is real.  Otherwise, X is returned as
	 * CHOLMOD_COMPLEX if Common-&gt;prefer_zomplex is FALSE, or
	 * CHOLMOD_ZOMPLEX if Common-&gt;prefer_zomplex is TRUE.  This parameter
	 * is needed because there is no supernodal zomplex L.  Suppose the
	 * caller wants all complex matrices to be stored in zomplex form
	 * (MATLAB, for example).  A supernodal L is returned in complex form
	 * if A is zomplex.  B can be real, and thus X = cholmod_solve (L,B)
	 * should return X as zomplex.  This cannot be inferred from the input
	 * arguments L and B.  Default: FALSE, since all data types are
	 * supported in CHOLMOD_COMPLEX form and since this is the native type
	 * of LAPACK and the BLAS.  Note that the MATLAB/cholmod.c mexFunction
	 * sets this parameter to TRUE, since MATLAB matrices are in
	 * CHOLMOD_ZOMPLEX form.
	 */</doc>
