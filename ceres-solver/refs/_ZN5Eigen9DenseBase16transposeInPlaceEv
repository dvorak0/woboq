<dec f='include/eigen3/Eigen/src/Core/DenseBase.h' l='286' type='void Eigen::DenseBase::transposeInPlace()'/>
<def f='include/eigen3/Eigen/src/Core/Transpose.h' l='290' ll='296' type='void Eigen::DenseBase::transposeInPlace()'/>
<doc f='include/eigen3/Eigen/src/Core/Transpose.h' l='272'>/** This is the &quot;in place&quot; version of transpose(): it replaces \c *this by its own transpose.
  * Thus, doing
  * \code
  * m.transposeInPlace();
  * \endcode
  * has the same effect on m as doing
  * \code
  * m = m.transpose().eval();
  * \endcode
  * and is faster and also safer because in the latter line of code, forgetting the eval() results
  * in a bug caused by \ref TopicAliasing &quot;aliasing&quot;.
  *
  * Notice however that this method is only useful if you want to replace a matrix by its own transpose.
  * If you just need the transpose of a matrix, use transpose().
  *
  * \note if the matrix is not square, then \c *this must be a resizable matrix.
  *
  * \sa transpose(), adjoint(), adjointInPlace() */</doc>
