<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='55'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='56'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='67' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='68' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='69' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='70' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='71' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='72' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='73' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='74' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='75' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='76' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='77' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='78' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='79' macro='1'/>
<def f='ceres-solver/include/ceres/internal/manual_constructor.h' l='80' macro='1'/>
<doc f='ceres-solver/include/ceres/internal/manual_constructor.h' l='52'>// Because MSVC and older GCCs require that the argument to their alignment
// construct to be a literal constant integer, we use a template instantiated
// at all the possible powers of two.</doc>
