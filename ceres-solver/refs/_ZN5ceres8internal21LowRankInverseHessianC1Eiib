<dec f='ceres-solver/internal/ceres/low_rank_inverse_hessian.h' l='73' type='void ceres::internal::LowRankInverseHessian::LowRankInverseHessian(int num_parameters, int max_num_corrections, bool use_approximate_eigenvalue_scaling)'/>
<use f='ceres-solver/internal/ceres/line_search_direction.cc' l='104' u='c' c='_ZN5ceres8internal5LBFGSC1Eiib'/>
<doc f='ceres-solver/internal/ceres/low_rank_inverse_hessian.h' l='64'>// num_parameters is the row/column size of the Hessian.
  // max_num_corrections is the rank of the Hessian approximation.
  // use_approximate_eigenvalue_scaling controls whether the initial
  // inverse Hessian used during Right/LeftMultiply() is scaled by
  // the approximate eigenvalue of the true inverse Hessian at the
  // current operating point.
  // The approximation uses:
  // 2 * max_num_corrections * num_parameters + max_num_corrections
  // doubles.</doc>
<def f='ceres-solver/internal/ceres/low_rank_inverse_hessian.cc' l='77' ll='88' type='void ceres::internal::LowRankInverseHessian::LowRankInverseHessian(int num_parameters, int max_num_corrections, bool use_approximate_eigenvalue_scaling)'/>
