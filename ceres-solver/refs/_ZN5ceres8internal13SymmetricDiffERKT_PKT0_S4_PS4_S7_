<def f='ceres-solver/internal/ceres/autodiff_test.cc' l='52' ll='98' type='bool ceres::internal::SymmetricDiff(const B &amp; b, const T * par, T del, T * fun, T * jac)'/>
<use f='ceres-solver/internal/ceres/autodiff_test.cc' l='184' u='c' c='_ZN5ceres8internal35AutoDiff_ProjectiveCameraModel_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/autodiff_test.cc' l='305' u='c' c='_ZN5ceres8internal20AutoDiff_Metric_Test8TestBodyEv'/>
<doc f='ceres-solver/internal/ceres/autodiff_test.cc' l='44'>// Do (symmetric) finite differencing using the given function object &apos;b&apos; of
// type &apos;B&apos; and scalar type &apos;T&apos; with step size &apos;del&apos;.
//
// The type B should have a signature
//
//   bool operator()(T const *, T *) const;
//
// which maps a vector of parameters to a vector of outputs.</doc>
