<def f='include/c++/4.8/bits/stl_list.h' l='1014' ll='1016' type='void std::list::push_back(const value_type &amp; __x)'/>
<use f='include/c++/4.8/bits/stl_list.h' l='1493' u='c' c='_ZNSt4list22_M_initialize_dispatchET_S0_St12__false_type'/>
<use f='include/c++/4.8/bits/stl_list.h' l='1503' u='c' c='_ZNSt4list18_M_fill_initializeEmRKT_'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='2588' u='c' c='_ZN7testing8internal13edit_distance12_GLOBAL__N_14Hunk8PushLineEcPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='2592' u='c' c='_ZN7testing8internal13edit_distance12_GLOBAL__N_14Hunk8PushLineEcPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='2596' u='c' c='_ZN7testing8internal13edit_distance12_GLOBAL__N_14Hunk8PushLineEcPKc'/>
<doc f='include/c++/4.8/bits/stl_list.h' l='1004'>/**
       *  @brief  Add data to the end of the %list.
       *  @param  __x  Data to be added.
       *
       *  This is a typical stack operation.  The function creates an
       *  element at the end of the %list and assigns the given data to
       *  it.  Due to the nature of a %list this operation can be done
       *  in constant time, and does not invalidate iterators and
       *  references.
       */</doc>
<use f='ceres-solver/internal/ceres/low_rank_inverse_hessian.cc' l='112' u='c' c='_ZN5ceres8internal21LowRankInverseHessian6UpdateERKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEES6_'/>
