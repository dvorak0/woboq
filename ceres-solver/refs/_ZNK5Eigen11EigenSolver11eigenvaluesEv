<def f='include/eigen3/Eigen/src/Eigenvalues/EigenSolver.h' l='243' ll='247' type='const EigenvalueType &amp; Eigen::EigenSolver::eigenvalues() const'/>
<doc f='include/eigen3/Eigen/src/Eigenvalues/EigenSolver.h' l='225'>/** \brief Returns the eigenvalues of given matrix. 
      *
      * \returns A const reference to the column vector containing the eigenvalues.
      *
      * \pre Either the constructor 
      * EigenSolver(const MatrixType&amp;,bool) or the member function
      * compute(const MatrixType&amp;, bool) has been called before.
      *
      * The eigenvalues are repeated according to their algebraic multiplicity,
      * so there are as many eigenvalues as rows in the matrix. The eigenvalues 
      * are not sorted in any particular order.
      *
      * Example: \include EigenSolver_eigenvalues.cpp
      * Output: \verbinclude EigenSolver_eigenvalues.out
      *
      * \sa eigenvectors(), pseudoEigenvalueMatrix(),
      *     MatrixBase::eigenvalues()
      */</doc>
<use f='ceres-solver/internal/ceres/polynomial.cc' l='245' u='c' c='_ZN5ceres8internal19FindPolynomialRootsERKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEPS3_S6_'/>
<use f='ceres-solver/internal/ceres/polynomial.cc' l='252' u='c' c='_ZN5ceres8internal19FindPolynomialRootsERKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEPS3_S6_'/>
