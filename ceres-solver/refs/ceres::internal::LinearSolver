<def f='ceres-solver/internal/ceres/linear_solver.h' l='91' ll='309'/>
<ovr f='ceres-solver/internal/ceres/linear_solver.h' l='319' c='ceres::internal::TypedLinearSolver'/>
<ovr f='ceres-solver/internal/ceres/conjugate_gradients_solver.h' l='58' c='ceres::internal::ConjugateGradientsSolver'/>
<size>8</size>
<doc f='ceres-solver/internal/ceres/linear_solver.h' l='75'>// Abstract base class for objects that implement algorithms for
// solving linear systems
//
//   Ax = b
//
// It is expected that a single instance of a LinearSolver object
// maybe used multiple times for solving multiple linear systems with
// the same sparsity structure. This allows them to cache and reuse
// information across solves. This means that calling Solve on the
// same LinearSolver instance with two different linear systems will
// result in undefined behaviour.
//
// Subclasses of LinearSolver use two structs to configure themselves.
// The Options struct configures the LinearSolver object for its
// lifetime. The PerSolveOptions struct is used to specify options for
// a particular Solve call.</doc>
<fun r='_ZN5ceres8internal12LinearSolver26LinearSolverForZeroEBlocksENS_16LinearSolverTypeE'/>
<fun r='_ZN5ceres8internal12LinearSolverD1Ev'/>
<fun r='_ZN5ceres8internal12LinearSolver5SolveEPNS0_14LinearOperatorEPKdRKNS1_15PerSolveOptionsEPd'/>
<fun r='_ZNK5ceres8internal12LinearSolver14CallStatisticsEv'/>
<fun r='_ZNK5ceres8internal12LinearSolver14TimeStatisticsEv'/>
<fun r='_ZN5ceres8internal12LinearSolver6CreateERKNS1_7OptionsE'/>
