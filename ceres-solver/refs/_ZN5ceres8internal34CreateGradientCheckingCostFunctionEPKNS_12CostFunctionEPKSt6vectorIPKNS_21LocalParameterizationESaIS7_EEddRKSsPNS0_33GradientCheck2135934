<dec f='ceres-solver/internal/ceres/gradient_checking_cost_function.h' l='74' type='ceres::CostFunction * ceres::internal::CreateGradientCheckingCostFunction(const ceres::CostFunction * cost_function, const std::vector&lt;const LocalParameterization *&gt; * local_parameterizations, double relative_step_size, double relative_precision, const std::string &amp; extra_info, ceres::internal::GradientCheckingIterationCallback * callback)'/>
<def f='ceres-solver/internal/ceres/gradient_checking_cost_function.cc' l='157' ll='172' type='ceres::CostFunction * ceres::internal::CreateGradientCheckingCostFunction(const ceres::CostFunction * cost_function, const std::vector&lt;const LocalParameterization *&gt; * local_parameterizations, double relative_step_size, double relative_precision, const std::string &amp; extra_info, ceres::internal::GradientCheckingIterationCallback * callback)'/>
<doc f='ceres-solver/internal/ceres/gradient_checking_cost_function.h' l='70'>// Creates a CostFunction that checks the Jacobians that cost_function computes
// with finite differences. This API is only intended for unit tests that intend
// to  check the functionality of the GradientCheckingCostFunction
// implementation directly.</doc>
<use f='ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc' l='165' u='c' c='_ZN5ceres8internal71GradientCheckingCostFunction_ResidualsAndJacobiansArePreservedTest_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc' l='222' u='c' c='_ZN5ceres8internal43GradientCheckingCostFunction_SmokeTest_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc' l='241' u='c' c='_ZN5ceres8internal43GradientCheckingCostFunction_SmokeTest_Test8TestBodyEv'/>
