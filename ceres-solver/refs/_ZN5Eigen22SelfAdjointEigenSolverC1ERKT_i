<def f='include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h' l='153' ll='160' type='void Eigen::SelfAdjointEigenSolver::SelfAdjointEigenSolver&lt;_MatrixType&gt;(const MatrixType &amp; matrix, int options = ComputeEigenvectors)'/>
<doc f='include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h' l='138'>/** \brief Constructor; computes eigendecomposition of given matrix.
      *
      * \param[in]  matrix  Selfadjoint matrix whose eigendecomposition is to
      *    be computed. Only the lower triangular part of the matrix is referenced.
      * \param[in]  options Can be #ComputeEigenvectors (default) or #EigenvaluesOnly.
      *
      * This constructor calls compute(const MatrixType&amp;, int) to compute the
      * eigenvalues of the matrix \p matrix. The eigenvectors are computed if
      * \p options equals #ComputeEigenvectors.
      *
      * Example: \include SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp
      * Output: \verbinclude SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.out
      *
      * \sa compute(const MatrixType&amp;, int)
      */</doc>
