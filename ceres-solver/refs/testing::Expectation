<def f='ceres-solver/internal/ceres/gmock/gmock.h' l='9665' ll='9726'/>
<size>16</size>
<doc f='ceres-solver/internal/ceres/gmock/gmock.h' l='9644'>// An abstract handle of an expectation.  Useful in the .After()
// clause of EXPECT_CALL() for setting the (partial) order of
// expectations.  The syntax:
//
//   Expectation e1 = EXPECT_CALL(...)...;
//   EXPECT_CALL(...).After(e1)...;
//
// sets two expectations where the latter can only be matched after
// the former has been satisfied.
//
// Notes:
//   - This class is copyable and has value semantics.
//   - Constness is shallow: a const Expectation object itself cannot
//     be modified, but the mutable methods of the ExpectationBase
//     object it references can be called via expectation_base().
//   - The constructors and destructor are defined out-of-line because
//     the Symbian WINSCW compiler wants to otherwise instantiate them
//     when it sees this class definition, at which point it doesn&apos;t have
//     ExpectationBase available yet, leading to incorrect destruction
//     in the linked_ptr (or compilation errors if using a checking
//     linked_ptr).</doc>
<fun r='_ZN7testing11ExpectationC1Ev'/>
<fun r='_ZN7testing11ExpectationD1Ev'/>
<fun r='_ZN7testing11ExpectationC1ERNS_8internal15ExpectationBaseE'/>
<fun r='_ZNK7testing11ExpectationeqERKS0_'/>
<fun r='_ZNK7testing11ExpectationneERKS0_'/>
<fun r='_ZN7testing11ExpectationC1ERKNS_8internal10linked_ptrINS1_15ExpectationBaseEEE'/>
<fun r='_ZNK7testing11Expectation16expectation_baseEv'/>
<mbr r='testing::Expectation::expectation_base_' o='0' t='internal::linked_ptr&lt;internal::ExpectationBase&gt;'/>
<fun r='_ZN7testing11ExpectationC1ERNS_8internal15ExpectationBaseE'/>
<fun r='_ZN7testing11ExpectationC1Ev'/>
<fun r='_ZN7testing11ExpectationC1ERKNS_8internal10linked_ptrINS1_15ExpectationBaseEEE'/>
<fun r='_ZN7testing11ExpectationD1Ev'/>
