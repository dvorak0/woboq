<dec f='ceres-solver/internal/ceres/visibility_based_preconditioner.h' l='154' type='void ceres::internal::VisibilityBasedPreconditioner::ClusterCameras(const std::vector&lt;std::set&lt;int&gt; &gt; &amp; visibility)'/>
<use f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='150' u='c' c='_ZN5ceres8internal29VisibilityBasedPreconditioner28ComputeClusterJacobiSparsityERKNS0_27CompressedRowBlockStructureE'/>
<use f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='168' u='c' c='_ZN5ceres8internal29VisibilityBasedPreconditioner33ComputeClusterTridiagonalSparsityERKNS0_27CompressedRowBlockStructureE'/>
<def f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='196' ll='229' type='void ceres::internal::VisibilityBasedPreconditioner::ClusterCameras(const vector&lt;set&lt;int&gt; &gt; &amp; visibility)'/>
<doc f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='190'>// Call the canonical views algorithm and cluster the cameras based on
// their visibility sets. The visibility set of a camera is the set of
// e_blocks/3D points in the scene that are seen by it.
//
// The cluster_membership_ vector is updated to indicate cluster
// memberships for each camera block.</doc>
