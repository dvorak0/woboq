<def f='ceres-solver/internal/ceres/mutex.h' l='284' ll='293'/>
<size>8</size>
<doc f='ceres-solver/internal/ceres/mutex.h' l='272'>// --------------------------------------------------------------------------
// Some helper classes

// Note: The weird &quot;Ceres&quot; prefix for the class is a workaround for having two
// similar mutex.h files included in the same translation unit. This is a
// problem because macros do not respect C++ namespaces, and as a result, this
// does not work well (e.g. inside Chrome). The offending macros are
// &quot;MutexLock(x) COMPILE_ASSERT(false)&quot;. To work around this, &quot;Ceres&quot; is
// prefixed to the class names; this permits defining the classes.

// CeresMutexLock(mu) acquires mu when constructed and releases it
// when destroyed.</doc>
<fun r='_ZN5ceres8internal14CeresMutexLockC1EPNS0_5MutexE'/>
<fun r='_ZN5ceres8internal14CeresMutexLockD1Ev'/>
<mbr r='ceres::internal::CeresMutexLock::mu_' o='0' t='ceres::internal::Mutex *const'/>
<fun r='_ZN5ceres8internal14CeresMutexLockC1ERKS1_'/>
<fun r='_ZN5ceres8internal14CeresMutexLockaSERKS1_'/>
