<dec f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.h' l='60' type='void ceres::internal::BlockRandomAccessSparseMatrix::BlockRandomAccessSparseMatrix(const std::vector&lt;int&gt; &amp; blocks, const std::set&lt;std::pair&lt;int, int&gt; &gt; &amp; block_pairs)'/>
<def f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc' l='52' ll='123' type='void ceres::internal::BlockRandomAccessSparseMatrix::BlockRandomAccessSparseMatrix(const vector&lt;int&gt; &amp; blocks, const set&lt;pair&lt;int, int&gt; &gt; &amp; block_pairs)'/>
<doc f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.h' l='57'>// blocks is an array of block sizes. block_pairs is a set of
  // &lt;row_block_id, col_block_id&gt; pairs to identify the non-zero cells
  // of this matrix.</doc>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc' l='67' u='c' c='_ZN5ceres8internal42BlockRandomAccessSparseMatrix_GetCell_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc' l='147' u='c' c='_ZN5ceres8internal33BlockRandomAccessSparseMatrixTest5SetUpEv'/>
<use f='ceres-solver/internal/ceres/schur_complement_solver.cc' l='314' u='c' c='_ZN5ceres8internal27SparseSchurComplementSolver11InitStorageEPKNS0_27CompressedRowBlockStructureE'/>
<use f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='187' u='c' c='_ZN5ceres8internal29VisibilityBasedPreconditioner11InitStorageERKNS0_27CompressedRowBlockStructureE'/>
