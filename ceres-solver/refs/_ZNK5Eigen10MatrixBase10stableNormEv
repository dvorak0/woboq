<dec f='include/eigen3/Eigen/src/Core/MatrixBase.h' l='207' type='RealScalar Eigen::MatrixBase::stableNorm() const'/>
<def f='include/eigen3/Eigen/src/Core/StableNorm.h' l='138' ll='158' type='typename NumTraits&lt;typename internal::traits&lt;Derived&gt;::Scalar&gt;::Real Eigen::MatrixBase::stableNorm() const'/>
<doc f='include/eigen3/Eigen/src/Core/StableNorm.h' l='128'>/** \returns the \em l2 norm of \c *this avoiding underflow and overflow.
  * This version use a blockwise two passes algorithm:
  *  1 - find the absolute largest coefficient \c s
  *  2 - compute \f$ s \Vert \frac{*this}{s} \Vert \f$ in a standard way
  *
  * For architecture/scalar types supporting vectorization, this version
  * is faster than blueNorm(). Otherwise the blueNorm() is much faster.
  *
  * \sa norm(), blueNorm(), hypotNorm()
  */</doc>
