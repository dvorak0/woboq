<use f='ceres-solver/internal/ceres/compressed_row_sparse_matrix.h' l='157' u='a' c='_ZNK5ceres8internal25CompressedRowSparseMatrix13block_offsetsEv'/>
<use f='ceres-solver/internal/ceres/compressed_row_sparse_matrix.h' l='158' u='a' c='_ZN5ceres8internal25CompressedRowSparseMatrix21mutable_block_offsetsEv'/>
<dec f='ceres-solver/internal/ceres/compressed_row_sparse_matrix.h' l='275' type='std::vector&lt;int&gt;'/>
<offset>1152</offset>
<doc f='ceres-solver/internal/ceres/compressed_row_sparse_matrix.h' l='270'>// For outer product matrix (J&apos; * J), we pre-compute its block
  // offsets information here for fast outer product computation in
  // block unit.  Since the outer product matrix is symmetric, we do
  // not need to distinguish row or col block. In another word, this
  // is the prefix sum of row_blocks_/col_blocks_.</doc>
