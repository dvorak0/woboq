<def f='include/eigen3/Eigen/src/Core/GenericPacketMath.h' l='235' type='Packet Eigen::internal::psin(const Packet &amp; a)'/>
<def f='include/eigen3/Eigen/src/Core/arch/SSE/MathFunctions.h' l='257' ll='355' type='Packet4f Eigen::internal::psin(const Packet4f &amp; _x)'/>
<doc f='include/eigen3/Eigen/src/Core/arch/SSE/MathFunctions.h' l='245'>/* evaluation of 4 sines at onces, using SSE2 intrinsics.

   The code is the exact rewriting of the cephes sinf function.
   Precision is excellent as long as x &lt; 8192 (I did not bother to
   take into account the special handling they have for greater values
   -- it does not return garbage for arguments over 8192, though, but
   the extra precision is missing).

   Note that it is such that sinf((float)M_PI) = 8.74e-8, which is the
   surprising but correct result.
*/</doc>
