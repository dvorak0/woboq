<dec f='ceres-solver/internal/ceres/trust_region_step_evaluator.h' l='86' type='void ceres::internal::TrustRegionStepEvaluator::TrustRegionStepEvaluator(double initial_cost, int max_consecutive_nonmonotonic_steps)'/>
<doc f='ceres-solver/internal/ceres/trust_region_step_evaluator.h' l='79'>// initial_cost is as the name implies the cost of the starting
  // state of the trust region minimizer.
  //
  // max_consecutive_nonmonotonic_steps controls the window size used
  // by the step selection algorithm to accept non-monotonic
  // steps. Setting this parameter to zero, recovers the classic
  // montonic descent algorithm.</doc>
<use f='ceres-solver/internal/ceres/trust_region_minimizer.cc' l='77' u='c' c='_ZN5ceres8internal20TrustRegionMinimizer8MinimizeERKNS0_9Minimizer7OptionsEPdPNS_6Solver7SummaryE'/>
<def f='ceres-solver/internal/ceres/trust_region_step_evaluator.cc' l='38' ll='49' type='void ceres::internal::TrustRegionStepEvaluator::TrustRegionStepEvaluator(const double initial_cost, const int max_consecutive_nonmonotonic_steps)'/>
