<dec f='ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.h' l='91' type='void ceres::internal::DynamicCompressedRowSparseMatrix::Finalize(int num_additional_elements)'/>
<doc f='ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.h' l='85'>// Make the underlying internal `CompressedRowSparseMatrix` data structures
  // consistent. Additional space for non-zero entries in the
  // `CompressedRowSparseMatrix` can be reserved by specifying
  // `num_additional_elements`. This is useful when it is known that rows will
  // be appended to the `CompressedRowSparseMatrix` (e.g. appending a diagonal
  // matrix to the jacobian) as it prevents need for future reallocation.</doc>
<def f='ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.cc' l='70' ll='104' type='void ceres::internal::DynamicCompressedRowSparseMatrix::Finalize(int num_additional_elements)'/>
<use f='ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc' l='69' u='c' c='_ZN5ceres8internal36DynamicCompressedRowSparseMatrixTest8FinalizeEv'/>
<use f='ceres-solver/internal/ceres/dynamic_compressed_row_finalizer.h' l='44' u='c' c='_ZN5ceres8internal37DynamicCompressedRowJacobianFinalizerclEPNS0_12SparseMatrixEi'/>
