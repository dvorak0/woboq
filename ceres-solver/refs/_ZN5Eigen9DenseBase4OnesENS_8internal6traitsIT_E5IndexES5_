<dec f='include/eigen3/Eigen/src/Core/DenseBase.h' l='324' type='static const ConstantReturnType Eigen::DenseBase::Ones(Index rows, Index cols)'/>
<def f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='555' ll='560' type='static const typename DenseBase&lt;Derived&gt;::ConstantReturnType Eigen::DenseBase::Ones(Index nbRows, Index nbCols)'/>
<doc f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='541'>/** \returns an expression of a matrix where all coefficients equal one.
  *
  * The parameters \a nbRows and \a nbCols are the number of rows and of columns of
  * the returned matrix. Must be compatible with this MatrixBase type.
  *
  * This variant is meant to be used for dynamic-size matrix types. For fixed-size types,
  * it is redundant to pass \a rows and \a cols as arguments, so Ones() should be used
  * instead.
  *
  * Example: \include MatrixBase_ones_int_int.cpp
  * Output: \verbinclude MatrixBase_ones_int_int.out
  *
  * \sa Ones(), Ones(Index), isOnes(), class Ones
  */</doc>
<use f='ceres-solver/internal/ceres/block_random_access_dense_matrix_test.cc' l='91' u='c' c='_ZN5ceres8internal43BlockRandomAccessDenseMatrix_WriteCell_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc' l='87' u='c' c='_ZN5ceres8internal35BlockRandomAccessDiagonalMatrixTest5SetUpEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc' l='110' u='c' c='_ZN5ceres8internal55BlockRandomAccessDiagonalMatrixTest_MatrixContents_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc' l='116' u='c' c='_ZN5ceres8internal55BlockRandomAccessDiagonalMatrixTest_MatrixContents_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc' l='122' u='c' c='_ZN5ceres8internal55BlockRandomAccessDiagonalMatrixTest_MatrixContents_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc' l='93' u='c' c='_ZN5ceres8internal42BlockRandomAccessSparseMatrix_GetCell_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc' l='106' u='c' c='_ZN5ceres8internal42BlockRandomAccessSparseMatrix_GetCell_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc' l='110' u='c' c='_ZN5ceres8internal42BlockRandomAccessSparseMatrix_GetCell_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc' l='114' u='c' c='_ZN5ceres8internal42BlockRandomAccessSparseMatrix_GetCell_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc' l='118' u='c' c='_ZN5ceres8internal42BlockRandomAccessSparseMatrix_GetCell_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/local_parameterization_test.cc' l='69' u='c' c='_ZN5ceres8internal44IdentityParameterization_EverythingTest_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/local_parameterization_test.cc' l='187' u='c' c='_ZN5ceres8internal46SubsetParameterization_NormalFunctionTest_Test8TestBodyEv'/>
