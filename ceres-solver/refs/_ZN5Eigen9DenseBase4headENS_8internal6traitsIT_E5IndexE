<def f='include/eigen3/Eigen/src/plugins/BlockMethods.h' l='781' ll='785' type='SegmentReturnType Eigen::DenseBase::head(Index vecSize)'/>
<doc f='include/eigen3/Eigen/src/plugins/BlockMethods.h' l='766'>/** \returns a dynamic-size expression of the first coefficients of *this.
  *
  * \only_for_vectors
  *
  * \param vecSize the number of coefficients in the block
  *
  * Example: \include MatrixBase_start_int.cpp
  * Output: \verbinclude MatrixBase_start_int.out
  *
  * \note Even though the returned expression has dynamic size, in the case
  * when it is applied to a fixed-size vector, it inherits a fixed maximal size,
  * which means that evaluating it does not cause a dynamic memory allocation.
  *
  * \sa class Block, block(Index,Index)
  */</doc>
<use f='ceres-solver/internal/ceres/dense_qr_solver.cc' l='94' u='c' c='_ZN5ceres8internal13DenseQRSolver16SolveUsingLAPACKEPNS0_17DenseSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<use f='ceres-solver/internal/ceres/dense_qr_solver.cc' l='115' u='c' c='_ZN5ceres8internal13DenseQRSolver16SolveUsingLAPACKEPNS0_17DenseSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<use f='ceres-solver/internal/ceres/dense_qr_solver.cc' l='145' u='c' c='_ZN5ceres8internal13DenseQRSolver15SolveUsingEigenEPNS0_17DenseSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<use f='ceres-solver/internal/ceres/local_parameterization.cc' l='248' u='c' c='_ZNK5ceres33HomogeneousVectorParameterization4PlusEPKdS2_Pd'/>
<use f='ceres-solver/internal/ceres/polynomial_test.cc' l='63' u='c' c='_ZN5ceres8internal12_GLOBAL__N_111AddRealRootERKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEd'/>
<use f='ceres-solver/internal/ceres/polynomial_test.cc' l='74' u='c' c='_ZN5ceres8internal12_GLOBAL__N_118AddComplexRootPairERKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEdd'/>
