<dec f='include/c++/4.8/tr1/hashtable.h' l='363' type='std::pair&lt;iterator, bool&gt; std::tr1::_Hashtable::_M_insert(const value_type &amp; , std::tr1::true_type )'/>
<def f='include/c++/4.8/tr1/hashtable.h' l='879' ll='898' type='std::pair&lt;typename _Hashtable&lt;_Key, _Value, _Allocator, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, __chc, __cit, __uk&gt;::iterator, bool&gt; std::tr1::_Hashtable::_M_insert(const value_type &amp; __v, std::tr1::true_type )'/>
<doc f='include/c++/4.8/tr1/hashtable.h' l='878'>// Insert v if no element with its key is already present.</doc>
