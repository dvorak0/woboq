<dec f='ceres-solver/examples/fields_of_experts.h' l='67' type='bool ceres::examples::FieldsOfExpertsCost::Evaluate(const double *const * parameters, double * residuals, double ** jacobians) const'/>
<doc f='ceres-solver/examples/fields_of_experts.h' l='65'>// The number of scalar parameters passed to Evaluate must equal the number of
  // filter coefficients passed to the constructor.</doc>
<inh f='ceres-solver/include/ceres/cost_function.h' l='114' c='_ZNK5ceres12CostFunction8EvaluateEPKPKdPdPS5_'/>
<def f='ceres-solver/examples/fields_of_experts.cc' l='54' ll='72' type='bool ceres::examples::FieldsOfExpertsCost::Evaluate(const double *const * parameters, double * residuals, double ** jacobians) const'/>
<doc f='ceres-solver/examples/fields_of_experts.cc' l='52'>// This is a dot product between a the scalar parameters and a vector of filter
// coefficients.</doc>
