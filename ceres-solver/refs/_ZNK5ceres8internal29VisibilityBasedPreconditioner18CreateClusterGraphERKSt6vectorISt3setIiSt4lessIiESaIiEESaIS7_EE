<dec f='ceres-solver/internal/ceres/visibility_based_preconditioner.h' l='160' type='WeightedGraph&lt;int&gt; * ceres::internal::VisibilityBasedPreconditioner::CreateClusterGraph(const std::vector&lt;std::set&lt;int&gt; &gt; &amp; visibility) const'/>
<use f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='177' u='c' c='_ZN5ceres8internal29VisibilityBasedPreconditioner33ComputeClusterTridiagonalSparsityERKNS0_27CompressedRowBlockStructureE'/>
<def f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='552' ll='580' type='WeightedGraph&lt;int&gt; * ceres::internal::VisibilityBasedPreconditioner::CreateClusterGraph(const vector&lt;set&lt;int&gt; &gt; &amp; cluster_visibility) const'/>
<doc f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='549'>// Construct a graph whose vertices are the clusters, and the edge
// weights are the number of 3D points visible to cameras in both the
// vertices.</doc>
