<dec f='ceres-solver/internal/ceres/suitesparse.h' l='193' type='cholmod_dense * ceres::internal::SuiteSparse::Solve(cholmod_factor * L, cholmod_dense * b, std::string * message)'/>
<doc f='ceres-solver/internal/ceres/suitesparse.h' l='188'>// Given a Cholesky factorization of a matrix A = LL^T, solve the
  // linear system Ax = b, and return the result. If the Solve fails
  // NULL is returned. Caller owns the result.
  //
  // message contains an explanation of the failures if any.</doc>
<use f='ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc' l='272' u='c' c='_ZN5ceres8internal33DynamicSparseNormalCholeskySolver25SolveImplUsingSuiteSparseEPNS0_25CompressedRowSparseMatrixEPd'/>
<use f='ceres-solver/internal/ceres/schur_complement_solver.cc' l='435' u='c' c='_ZN5ceres8internal27SparseSchurComplementSolver40SolveReducedLinearSystemUsingSuiteSparseERKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<use f='ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc' l='400' u='c' c='_ZN5ceres8internal26SparseNormalCholeskySolver25SolveImplUsingSuiteSparseEPd'/>
<def f='ceres-solver/internal/ceres/suitesparse.cc' l='323' ll='332' type='cholmod_dense * ceres::internal::SuiteSparse::Solve(cholmod_factor * L, cholmod_dense * b, string * message)'/>
<use f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='477' u='c' c='_ZNK5ceres8internal29VisibilityBasedPreconditioner13RightMultiplyEPKdPd'/>
