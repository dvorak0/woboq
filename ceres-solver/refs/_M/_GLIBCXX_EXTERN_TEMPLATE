<dec f='include/x86_64-linux-gnu/c++/4.8/bits/c++config.h' l='141'/>
<use f='include/c++/4.8/bits/allocator.h' l='150' u='c'/>
<use f='include/c++/4.8/bits/ostream_insert.h' l='117' u='c'/>
<use f='include/c++/4.8/bits/basic_string.tcc' l='1131' u='c'/>
<use f='include/c++/4.8/bits/locale_classes.tcc' l='269' u='c'/>
<use f='include/c++/4.8/bits/streambuf.tcc' l='148' u='c'/>
<use f='include/c++/4.8/bits/locale_facets.tcc' l='1277' u='c'/>
<use f='include/c++/4.8/bits/basic_ios.tcc' l='177' u='c'/>
<use f='include/c++/4.8/bits/ostream.tcc' l='358' u='c'/>
<use f='include/c++/4.8/bits/istream.tcc' l='1039' u='c'/>
<use f='include/c++/4.8/bits/codecvt.h' l='480' u='c'/>
<use f='include/c++/4.8/bits/fstream.tcc' l='965' u='c'/>
<use f='include/c++/4.8/bits/sstream.tcc' l='271' u='c'/>
<use f='include/c++/4.8/complex' l='1509' u='c'/>
<doc f='include/x86_64-linux-gnu/c++/4.8/bits/c++config.h' l='131'>// Macro for extern template, ie controling template linkage via use
// of extern keyword on template declaration. As documented in the g++
// manual, it inhibits all implicit instantiations and is used
// throughout the library to avoid multiple weak definitions for
// required types that are already explicitly instantiated in the
// library binary. This substantially reduces the binary size of
// resulting executables.
// Special case: _GLIBCXX_EXTERN_TEMPLATE == -1 disallows extern
// templates only in basic_string, thus activating its debug-mode
// checks even at -O0.</doc>
<use f='include/c++/4.8/iomanip' l='342' u='c'/>
