<dec f='ceres-solver/internal/ceres/gtest/gtest.h' l='734'/>
<use f='ceres-solver/internal/ceres/gtest/gtest.h' l='3848' u='c'/>
<use f='ceres-solver/internal/ceres/gtest/gtest.h' l='7885' u='c'/>
<use f='ceres-solver/internal/ceres/gtest/gtest.h' l='9182' u='c'/>
<doc f='ceres-solver/internal/ceres/gtest/gtest.h' l='727'>// clang defines __EXCEPTIONS iff exceptions are enabled before clang 220714,
// but iff cleanups are enabled after that. In Obj-C++ files, there can be
// cleanups for ObjC exceptions which also need cleanups, even if C++ exceptions
// are disabled. clang has __has_feature(cxx_exceptions) which checks for C++
// exceptions starting at clang r206352, but which checked for cleanups prior to
// that. To reliably check for C++ exception availability with clang, check for
// __EXCEPTIONS &amp;&amp; __has_feature(cxx_exceptions).</doc>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='394' u='c'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='3797' u='c'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='3884' u='c'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='5607' u='c'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6437' u='c'/>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='4819' u='c'/>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='10686' u='c'/>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='14874' u='c'/>
