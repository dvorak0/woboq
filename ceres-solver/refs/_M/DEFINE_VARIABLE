<dec f='include/gflags/gflags.h' l='466'/>
<doc f='include/gflags/gflags.h' l='455'>// Each command-line flag has two variables associated with it: one
// with the current value, and one with the default value.  However,
// we have a third variable, which is where value is assigned; it&apos;s a
// constant.  This guarantees that FLAG_##value is initialized at
// static initialization time (e.g. before program-start) rather than
// than global construction time (which is after program-start but
// before main), at least when &apos;value&apos; is a compile-time constant.  We
// use a small trick for the &quot;default value&quot; variable, and call it
// FLAGS_no&lt;name&gt;.  This serves the second purpose of assuring a
// compile error if someone tries to define a flag named no&lt;name&gt;
// which is illegal (--foo and --nofoo both affect the &quot;foo&quot; flag).</doc>
