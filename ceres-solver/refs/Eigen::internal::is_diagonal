<def f='include/eigen3/Eigen/src/Core/util/Meta.h' l='227' ll='228'/>
<def f='include/eigen3/Eigen/src/Core/util/Meta.h' l='230' ll='231'/>
<def f='include/eigen3/Eigen/src/Core/util/Meta.h' l='233' ll='234'/>
<def f='include/eigen3/Eigen/src/Core/util/Meta.h' l='236' ll='237'/>
<doc f='include/eigen3/Eigen/src/Core/util/Meta.h' l='221'>// FIXME quick workaround around current limitation of result_of
// template&lt;typename Scalar, typename ArgType0, typename ArgType1&gt;
// struct result_of&lt;scalar_product_op&lt;Scalar&gt;(ArgType0,ArgType1)&gt; {
// typedef typename scalar_product_traits&lt;typename remove_all&lt;ArgType0&gt;::type, typename remove_all&lt;ArgType1&gt;::type&gt;::ReturnType type;
// };</doc>
