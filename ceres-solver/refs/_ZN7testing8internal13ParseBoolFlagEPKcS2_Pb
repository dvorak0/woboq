<def f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6501' ll='6511' type='bool testing::internal::ParseBoolFlag(const char * str, const char * flag, bool * value)'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6672' u='c' c='_ZN7testing8internal19ParseGoogleTestFlagEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6674' u='c' c='_ZN7testing8internal19ParseGoogleTestFlagEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6676' u='c' c='_ZN7testing8internal19ParseGoogleTestFlagEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6681' u='c' c='_ZN7testing8internal19ParseGoogleTestFlagEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6686' u='c' c='_ZN7testing8internal19ParseGoogleTestFlagEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6688' u='c' c='_ZN7testing8internal19ParseGoogleTestFlagEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6691' u='c' c='_ZN7testing8internal19ParseGoogleTestFlagEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6696' u='c' c='_ZN7testing8internal19ParseGoogleTestFlagEPKc'/>
<doc f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6491'>// Parses a string for a bool flag, in the form of either
// &quot;--flag=value&quot; or &quot;--flag&quot;.
//
// In the former case, the value is taken as true as long as it does
// not start with &apos;0&apos;, &apos;f&apos;, or &apos;F&apos;.
//
// In the latter case, the value is taken as true.
//
// On success, stores the value of the flag in *value, and returns
// true.  On failure, returns false without changing *value.</doc>
