<def f='include/eigen3/Eigen/src/Core/VectorwiseOp.h' l='165' ll='587'/>
<doc f='include/eigen3/Eigen/src/Core/VectorwiseOp.h' l='148'>/** \class VectorwiseOp
  * \ingroup Core_Module
  *
  * \brief Pseudo expression providing partial reduction operations
  *
  * \param ExpressionType the type of the object on which to do partial reductions
  * \param Direction indicates the direction of the redux (#Vertical or #Horizontal)
  *
  * This class represents a pseudo expression with partial reduction features.
  * It is the return type of DenseBase::colwise() and DenseBase::rowwise()
  * and most of the time this is the only way it is used.
  *
  * Example: \include MatrixBase_colwise.cpp
  * Output: \verbinclude MatrixBase_colwise.out
  *
  * \sa DenseBase::colwise(), DenseBase::rowwise(), class PartialReduxExpr
  */</doc>
<fun r='_ZN5Eigen12VectorwiseOp9subVectorENT_5IndexE'/>
<fun r='_ZNK5Eigen12VectorwiseOp10subVectorsEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp10extendedToERKNS_9DenseBaseIT_EE'/>
<fun r='_ZNK5Eigen12VectorwiseOp18extendedToOppositeERKNS_9DenseBaseIT_EE'/>
<fun r='_ZN5Eigen12VectorwiseOpC1ERT_'/>
<fun r='_ZNK5Eigen12VectorwiseOp11_expressionEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp5reduxERKT_'/>
<fun r='_ZNK5Eigen12VectorwiseOp8minCoeffEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp8maxCoeffEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp11squaredNormEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp4normEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp8blueNormEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp10stableNormEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp9hypotNormEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp3sumEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp4meanEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp3allEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp3anyEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp5countEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp4prodEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp7reverseEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp9replicateENT_5IndexE'/>
<fun r='_ZNK5Eigen12VectorwiseOp9replicateENT_5IndexE'/>
<fun r='_ZN5Eigen12VectorwiseOpaSERKNS_9DenseBaseIT_EE'/>
<fun r='_ZN5Eigen12VectorwiseOppLERKNS_9DenseBaseIT_EE'/>
<fun r='_ZN5Eigen12VectorwiseOpmIERKNS_9DenseBaseIT_EE'/>
<fun r='_ZN5Eigen12VectorwiseOpmLERKNS_9DenseBaseIT_EE'/>
<fun r='_ZN5Eigen12VectorwiseOpdVERKNS_9DenseBaseIT_EE'/>
<fun r='_ZNK5Eigen12VectorwiseOpplERKNS_9DenseBaseIT_EE'/>
<fun r='_ZNK5Eigen12VectorwiseOpmiERKNS_9DenseBaseIT_EE'/>
<fun r='_ZNK5Eigen12VectorwiseOpmlERKNS_9DenseBaseIT_EE'/>
<fun r='_ZNK5Eigen12VectorwiseOpdvERKNS_9DenseBaseIT_EE'/>
<fun r='_ZNK5Eigen12VectorwiseOp10normalizedEv'/>
<fun r='_ZN5Eigen12VectorwiseOp9normalizeEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp11homogeneousEv'/>
<fun r='_ZNK5Eigen12VectorwiseOp5crossERKNS_10MatrixBaseIT_EE'/>
<fun r='_ZNK5Eigen12VectorwiseOp11hnormalizedEv'/>
<mbr r='Eigen::VectorwiseOp::m_matrix' t='ExpressionTypeNested'/>
<fun r='_ZNK5Eigen12VectorwiseOp9replicateENT_5IndexE'/>
