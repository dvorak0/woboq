<dec f='ceres-solver/include/ceres/rotation.h' l='173' type='void ceres::QuaternionToRotation(const T * q, T * R)'/>
<def f='ceres-solver/include/ceres/rotation.h' l='486' ll='489' type='void ceres::QuaternionToRotation(const T * q, T * R)'/>
<doc f='ceres-solver/include/ceres/rotation.h' l='168'>// Same as above except that the rotation matrix is normalized by the
// Frobenius norm, so that R * R&apos; = I (and det(R) = 1).
//
// WARNING: The rotation matrix is ROW MAJOR</doc>
<use f='ceres-solver/internal/ceres/rotation_test.cc' l='884' u='c' c='_ZN5ceres8internal66Quaternion_RotatePointGivesSameAnswerAsRotationByMatrixCanned_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/rotation_test.cc' l='904' u='c' c='_ZN5ceres8internal60Quaternion_RotatePointGivesSameAnswerAsRotationByMatrix_Test8TestBodyEv'/>
