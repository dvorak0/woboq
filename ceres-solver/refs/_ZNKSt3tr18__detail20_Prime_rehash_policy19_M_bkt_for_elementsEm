<dec f='include/c++/4.8/tr1/hashtable_policy.h' l='396' type='std::size_t std::tr1::__detail::_Prime_rehash_policy::_M_bkt_for_elements(std::size_t __n) const'/>
<def f='include/c++/4.8/tr1/hashtable_policy.h' l='432' ll='442' type='std::size_t std::tr1::__detail::_Prime_rehash_policy::_M_bkt_for_elements(std::size_t __n) const'/>
<doc f='include/c++/4.8/tr1/hashtable_policy.h' l='394'>// Return a bucket count appropriate for n elements</doc>
<doc f='include/c++/4.8/tr1/hashtable_policy.h' l='430'>// Return the smallest prime p such that alpha p &gt;= n, where alpha
  // is the load factor.</doc>
