<dec f='ceres-solver/internal/ceres/visibility_based_preconditioner.h' l='162' type='void ceres::internal::VisibilityBasedPreconditioner::ForestToClusterPairs(const WeightedGraph&lt;int&gt; &amp; forest, HashSet&lt;std::pair&lt;int, int&gt; &gt; * cluster_pairs) const'/>
<use f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='180' u='c' c='_ZN5ceres8internal29VisibilityBasedPreconditioner33ComputeClusterTridiagonalSparsityERKNS0_27CompressedRowBlockStructureE'/>
<def f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='508' ll='532' type='void ceres::internal::VisibilityBasedPreconditioner::ForestToClusterPairs(const WeightedGraph&lt;int&gt; &amp; forest, HashSet&lt;pair&lt;int, int&gt; &gt; * cluster_pairs) const'/>
<doc f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='506'>// Convert a graph into a list of edges that includes self edges for
// each vertex.</doc>
