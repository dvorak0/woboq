<dec f='ceres-solver/internal/ceres/lapack.h' l='87' type='static ceres::internal::LinearSolverTerminationType ceres::internal::LAPACK::SolveInPlaceUsingQR(int num_rows, int num_cols, const double * lhs, int work_size, double * work, double * rhs_and_solution, std::string * message)'/>
<doc f='ceres-solver/internal/ceres/lapack.h' l='68'>// Solve
  //
  //  lhs * solution = rhs
  //
  // using a dense QR factorization. lhs is an arbitrary (possibly
  // rectangular) matrix with full column rank.
  //
  // work is an array of size work_size that this routine uses for its
  // temporary storage. The optimal size of this array can be obtained
  // by calling EstimateWorkSizeForQR.
  //
  // When calling, rhs_and_solution contains the rhs, and upon return
  // the first num_col entries are the solution.
  //
  // This function uses the LAPACK dgels routine.
  //
  // The return value and the message string together describe whether
  // the solver terminated successfully or not and if so, what was the
  // reason for failure.</doc>
<use f='ceres-solver/internal/ceres/dense_qr_solver.cc' l='106' u='c' c='_ZN5ceres8internal13DenseQRSolver16SolveUsingLAPACKEPNS0_17DenseSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<def f='ceres-solver/internal/ceres/lapack.cc' l='147' ll='190' type='static ceres::internal::LinearSolverTerminationType ceres::internal::LAPACK::SolveInPlaceUsingQR(int num_rows, int num_cols, const double * in_lhs, int work_size, double * work, double * rhs_and_solution, std::string * message)'/>
