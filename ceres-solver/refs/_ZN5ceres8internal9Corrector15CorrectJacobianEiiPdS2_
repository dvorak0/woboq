<dec f='ceres-solver/internal/ceres/corrector.h' l='77' type='void ceres::internal::Corrector::CorrectJacobian(int num_rows, int num_cols, double * residuals, double * jacobian)'/>
<def f='ceres-solver/internal/ceres/corrector.cc' l='118' ll='155' type='void ceres::internal::Corrector::CorrectJacobian(const int num_rows, const int num_cols, double * residuals, double * jacobian)'/>
<doc f='ceres-solver/internal/ceres/corrector.h' l='71'>// jacobian = sqrt(rho[1]) * jacobian -
  // sqrt(rho[1]) * alpha / sq_norm * residuals residuals&apos; * jacobian.
  //
  // The method assumes that the jacobian has row-major storage. It is
  // the caller&apos;s responsibility to ensure that the pointer to
  // jacobian is not null.</doc>
<use f='ceres-solver/internal/ceres/corrector_test.cc' l='79' u='c' c='_ZN5ceres8internal31Corrector_ScalarCorrection_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/corrector_test.cc' l='106' u='c' c='_ZN5ceres8internal43Corrector_ScalarCorrectionZeroResidual_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/corrector_test.cc' l='135' u='c' c='_ZN5ceres8internal43Corrector_ScalarCorrectionAlphaClamped_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/corrector_test.cc' l='199' u='c' c='_ZN5ceres8internal55Corrector_MultidimensionalGaussNewtonApproximation_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/corrector_test.cc' l='260' u='c' c='_ZN5ceres8internal67Corrector_MultidimensionalGaussNewtonApproximationZeroResidual_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/residual_block.cc' l='183' u='c' c='_ZNK5ceres8internal13ResidualBlock8EvaluateEbPdS2_PS2_S2_'/>
