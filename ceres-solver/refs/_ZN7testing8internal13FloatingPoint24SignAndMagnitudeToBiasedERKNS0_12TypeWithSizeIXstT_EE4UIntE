<def f='ceres-solver/internal/ceres/gtest/gtest.h' l='8134' ll='8142' type='static Bits testing::internal::FloatingPoint::SignAndMagnitudeToBiased(const Bits &amp; sam)'/>
<use f='ceres-solver/internal/ceres/gtest/gtest.h' l='8148' u='c' c='_ZN7testing8internal13FloatingPoint38DistanceBetweenSignAndMagnitudeNumbersERKNS0_12TypeWithSizeIXstT_EE4UIntES7_'/>
<use f='ceres-solver/internal/ceres/gtest/gtest.h' l='8149' u='c' c='_ZN7testing8internal13FloatingPoint38DistanceBetweenSignAndMagnitudeNumbersERKNS0_12TypeWithSizeIXstT_EE4UIntES7_'/>
<doc f='ceres-solver/internal/ceres/gtest/gtest.h' l='8119'>// Converts an integer from the sign-and-magnitude representation to
  // the biased representation.  More precisely, let N be 2 to the
  // power of (kBitCount - 1), an integer x is represented by the
  // unsigned number x + N.
  //
  // For instance,
  //
  //   -N + 1 (the most negative number representable using
  //          sign-and-magnitude) is represented by 1;
  //   0      is represented by N; and
  //   N - 1  (the biggest number representable using
  //          sign-and-magnitude) is represented by 2N - 1.
  //
  // Read http://en.wikipedia.org/wiki/Signed_number_representations
  // for more details on signed number representations.</doc>
