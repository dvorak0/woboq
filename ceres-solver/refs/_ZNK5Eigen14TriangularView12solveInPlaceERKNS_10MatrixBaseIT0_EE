<dec f='include/eigen3/Eigen/src/Core/TriangularMatrix.h' l='333' type='void Eigen::TriangularView::solveInPlace(const MatrixBase&lt;OtherDerived&gt; &amp; other) const'/>
<def f='include/eigen3/Eigen/src/Core/SolveTriangular.h' l='172' ll='190' type='void Eigen::TriangularView::solveInPlace(const MatrixBase&lt;OtherDerived&gt; &amp; _other) const'/>
<doc f='include/eigen3/Eigen/src/Core/SolveTriangular.h' l='165'>/** &quot;in-place&quot; version of TriangularView::solve() where the result is written in \a other
  *
  * \warning The parameter is only marked &apos;const&apos; to make the C++ compiler accept a temporary expression here.
  * This function will const_cast it, so constness isn&apos;t honored here.
  *
  * See TriangularView:solve() for the details.
  */</doc>
