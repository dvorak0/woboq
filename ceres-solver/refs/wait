<def f='include/x86_64-linux-gnu/bits/waitstatus.h' l='66' ll='97'/>
<size>4</size>
<mbr r='wait::w_status' o='0' t='int'/>
<mbr r='wait::__wait_terminated' o='0' t='struct &lt;anonymous struct at /usr/include/x86_64-linux-gnu/bits/waitstatus.h:69:5&gt;'/>
<mbr r='wait::__wait_stopped' o='0' t='struct &lt;anonymous struct at /usr/include/x86_64-linux-gnu/bits/waitstatus.h:84:5&gt;'/>
<dec f='include/x86_64-linux-gnu/sys/wait.h' l='102' type='__pid_t wait(void * __stat_loc)'/>
<doc f='include/x86_64-linux-gnu/sys/wait.h' l='97'>/* Wait for a child to die.  When one does, put its status in *STAT_LOC
   and return its process ID.  For errors, return (pid_t) -1.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
