<dec f='ceres-solver/internal/ceres/trust_region_minimizer.h' l='66' type='bool ceres::internal::TrustRegionMinimizer::EvaluateGradientAndJacobian()'/>
<use f='ceres-solver/internal/ceres/trust_region_minimizer.cc' l='204' u='c' c='_ZN5ceres8internal20TrustRegionMinimizer13IterationZeroEv'/>
<def f='ceres-solver/internal/ceres/trust_region_minimizer.cc' l='226' ll='279' type='bool ceres::internal::TrustRegionMinimizer::EvaluateGradientAndJacobian()'/>
<use f='ceres-solver/internal/ceres/trust_region_minimizer.cc' l='771' u='c' c='_ZN5ceres8internal20TrustRegionMinimizer20HandleSuccessfulStepEv'/>
<doc f='ceres-solver/internal/ceres/trust_region_minimizer.cc' l='214'>// For the current x_, compute
//
//  1. Cost
//  2. Jacobian
//  3. Gradient
//  4. Scale the Jacobian if needed (and compute the scaling if we are
//     in iteration zero).
//  5. Compute the 2 and max norm of the gradient.
//
// Returns true if all computations could be performed
// successfully. Any failures are considered fatal and the
// Solver::Summary is updated to indicate this.</doc>
