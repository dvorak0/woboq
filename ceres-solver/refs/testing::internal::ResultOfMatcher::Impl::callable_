<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='7177' u='w' c='_ZN7testing8internal15ResultOfMatcher4ImplC1ENS0_14CallableTraitsIT_E11StorageTypeERKNS_7MatcherINS5_10ResultTypeEEE'/>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='7194' c='_ZNK7testing8internal15ResultOfMatcher4Impl15MatchAndExplainET_PNS_19MatchResultListenerE'/>
<dec f='ceres-solver/internal/ceres/gmock/gmock.h' l='7204' type='CallableStorageType'/>
<doc f='ceres-solver/internal/ceres/gmock/gmock.h' l='7199'>// Functors often define operator() as non-const method even though
    // they are actualy stateless. But we need to use them even when
    // &apos;this&apos; is a const pointer. It&apos;s the user&apos;s responsibility not to
    // use stateful callables with ResultOf(), which does&apos;t guarantee
    // how many times the callable will be invoked.</doc>
