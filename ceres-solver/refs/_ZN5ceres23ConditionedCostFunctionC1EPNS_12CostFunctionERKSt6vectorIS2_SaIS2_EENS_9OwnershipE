<dec f='ceres-solver/include/ceres/conditioned_cost_function.h' l='80' type='void ceres::ConditionedCostFunction::ConditionedCostFunction(ceres::CostFunction * wrapped_cost_function, const std::vector&lt;CostFunction *&gt; &amp; conditioners, ceres::Ownership ownership)'/>
<def f='ceres-solver/internal/ceres/conditioned_cost_function.cc' l='46' ll='67' type='void ceres::ConditionedCostFunction::ConditionedCostFunction(ceres::CostFunction * wrapped_cost_function, const std::vector&lt;CostFunction *&gt; &amp; conditioners, ceres::Ownership ownership)'/>
<doc f='ceres-solver/internal/ceres/conditioned_cost_function.cc' l='44'>// This cost function has the same dimensions (parameters, residuals) as
// the one it&apos;s wrapping.</doc>
<doc f='ceres-solver/include/ceres/conditioned_cost_function.h' l='76'>// Builds a cost function based on a wrapped cost function, and a
  // per-residual conditioner. Takes ownership of all of the wrapped cost
  // functions, or not, depending on the ownership parameter. Conditioners
  // may be NULL, in which case the corresponding residual is not modified.</doc>
<use f='ceres-solver/internal/ceres/conditioned_cost_function_test.cc' l='95' u='c' c='_ZN5ceres8internal45CostFunctionTest_ConditionedCostFunction_Test8TestBodyEv'/>
