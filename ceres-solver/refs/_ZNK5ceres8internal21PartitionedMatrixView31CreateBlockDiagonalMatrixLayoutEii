<dec f='ceres-solver/internal/ceres/partitioned_matrix_view.h' l='138' type='ceres::internal::BlockSparseMatrix * ceres::internal::PartitionedMatrixView::CreateBlockDiagonalMatrixLayout(int start_col_block, int end_col_block) const'/>
<def f='ceres-solver/internal/ceres/partitioned_matrix_view_impl.h' l='233' ll='269' type='ceres::internal::BlockSparseMatrix * ceres::internal::PartitionedMatrixView::CreateBlockDiagonalMatrixLayout(int start_col_block, int end_col_block) const'/>
<use f='ceres-solver/internal/ceres/partitioned_matrix_view_impl.h' l='276' u='c' c='_ZNK5ceres8internal21PartitionedMatrixView22CreateBlockDiagonalEtEEv'/>
<use f='ceres-solver/internal/ceres/partitioned_matrix_view_impl.h' l='286' u='c' c='_ZNK5ceres8internal21PartitionedMatrixView22CreateBlockDiagonalFtFEv'/>
<doc f='ceres-solver/internal/ceres/partitioned_matrix_view_impl.h' l='228'>// Given a range of columns blocks of a matrix m, compute the block
// structure of the block diagonal of the matrix m(:,
// start_col_block:end_col_block)&apos;m(:, start_col_block:end_col_block)
// and return a BlockSparseMatrix with the this block structure. The
// caller owns the result.</doc>
