<def f='ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc' l='75' ll='81' type='CompressedRowSparseMatrix::StorageType ceres::internal::StorageTypeForSparseLinearAlgebraLibrary(ceres::SparseLinearAlgebraLibraryType sparse_linear_algebra_library_type)'/>
<use f='ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc' l='187' u='c' c='_ZN5ceres8internal26SparseNormalCholeskySolver9SolveImplEPNS0_25CompressedRowSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<doc f='ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc' l='56'>// Different sparse linear algebra libraries prefer different storage
// orders for the input matrix. This trait class helps choose the
// ordering based on the sparse linear algebra backend being used.
//
// The storage order is lower-triangular by default. It is only
// SuiteSparse which prefers an upper triangular matrix. Saves a whole
// matrix copy in the process.
//
// Note that this is the storage order for a compressed row sparse
// matrix. All the sparse linear algebra libraries take compressed
// column sparse matrices as input. We map these matrices to into
// compressed column sparse matrices before calling them and in the
// process, transpose them.
//
// TODO(sameeragarwal): This does not account for post ordering, where
// the optimal storage order maybe different. Either get rid of post
// ordering support entirely, or investigate making this trait class
// richer.</doc>
