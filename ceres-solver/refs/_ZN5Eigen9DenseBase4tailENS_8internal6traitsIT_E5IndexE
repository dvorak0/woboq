<def f='include/eigen3/Eigen/src/plugins/BlockMethods.h' l='810' ll='814' type='SegmentReturnType Eigen::DenseBase::tail(Index vecSize)'/>
<doc f='include/eigen3/Eigen/src/plugins/BlockMethods.h' l='795'>/** \returns a dynamic-size expression of the last coefficients of *this.
  *
  * \only_for_vectors
  *
  * \param vecSize the number of coefficients in the block
  *
  * Example: \include MatrixBase_end_int.cpp
  * Output: \verbinclude MatrixBase_end_int.out
  *
  * \note Even though the returned expression has dynamic size, in the case
  * when it is applied to a fixed-size vector, it inherits a fixed maximal size,
  * which means that evaluating it does not cause a dynamic memory allocation.
  *
  * \sa class Block, block(Index,Index)
  */</doc>
<use f='ceres-solver/internal/ceres/polynomial_test.cc' l='64' u='c' c='_ZN5ceres8internal12_GLOBAL__N_111AddRealRootERKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEd'/>
<use f='ceres-solver/internal/ceres/polynomial_test.cc' l='76' u='c' c='_ZN5ceres8internal12_GLOBAL__N_118AddComplexRootPairERKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEdd'/>
<use f='ceres-solver/internal/ceres/schur_eliminator_test.cc' l='170' u='c' c='_ZN5ceres8internal19SchurEliminatorTest24EliminateSolveAndCompareERKN5Eigen3MapINS2_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS2_6StrideILi0ELi0EEEEEbd'/>
