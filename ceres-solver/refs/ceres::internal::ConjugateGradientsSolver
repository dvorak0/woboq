<inh f='ceres-solver/internal/ceres/linear_solver.h' l='91' c='ceres::internal::LinearSolver'/>
<def f='ceres-solver/internal/ceres/conjugate_gradients_solver.h' l='58' ll='69'/>
<size>88</size>
<doc f='ceres-solver/internal/ceres/conjugate_gradients_solver.h' l='45'>// This class implements the now classical Conjugate Gradients
// algorithm of Hestenes &amp; Stiefel for solving postive semidefinite
// linear sytems. Optionally it can use a preconditioner also to
// reduce the condition number of the linear system and improve the
// convergence rate. Modern references for Conjugate Gradients are the
// books by Yousef Saad and Trefethen &amp; Bau. This implementation of CG
// has been augmented with additional termination tests that are
// needed for forcing early termination when used as part of an
// inexact Newton solver.
//
// For more details see the documentation for
// LinearSolver::PerSolveOptions::r_tolerance and
// LinearSolver::PerSolveOptions::q_tolerance in linear_solver.h.</doc>
<fun r='_ZN5ceres8internal24ConjugateGradientsSolverC1ERKNS0_12LinearSolver7OptionsE'/>
<fun r='_ZN5ceres8internal24ConjugateGradientsSolver5SolveEPNS0_14LinearOperatorEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<mbr r='ceres::internal::ConjugateGradientsSolver::options_' o='64' t='const LinearSolver::Options'/>
<fun r='_ZN5ceres8internal24ConjugateGradientsSolverC1ERKS1_'/>
