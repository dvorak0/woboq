<def f='ceres-solver/internal/ceres/gmock/gmock.h' l='10366' ll='10396' type='const Action&lt;F&gt; * testing::internal::TypedExpectation::GetActionForArguments(const FunctionMockerBase&lt;F&gt; * mocker, const ArgumentTuple &amp; args, ::std::ostream * what, ::std::ostream * why)'/>
<doc f='ceres-solver/internal/ceres/gmock/gmock.h' l='10359'>// Given the arguments of a mock function call, if the call will
  // over-saturate this expectation, returns the default action;
  // otherwise, returns the next action in this expectation.  Also
  // describes *what* happened to &apos;what&apos;, and explains *why* Google
  // Mock does it to &apos;why&apos;.  This method is not const as it calls
  // IncrementCallCount().  A return value of NULL means the default
  // action.</doc>
