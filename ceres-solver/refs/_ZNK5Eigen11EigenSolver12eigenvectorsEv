<dec f='include/eigen3/Eigen/src/Eigenvalues/EigenSolver.h' l='178' type='EigenvectorsType Eigen::EigenSolver::eigenvectors() const'/>
<def f='include/eigen3/Eigen/src/Eigenvalues/EigenSolver.h' l='332' ll='361' type='typename EigenSolver&lt;MatrixType&gt;::EigenvectorsType Eigen::EigenSolver::eigenvectors() const'/>
<doc f='include/eigen3/Eigen/src/Eigenvalues/EigenSolver.h' l='158'>/** \brief Returns the eigenvectors of given matrix. 
      *
      * \returns  %Matrix whose columns are the (possibly complex) eigenvectors.
      *
      * \pre Either the constructor 
      * EigenSolver(const MatrixType&amp;,bool) or the member function
      * compute(const MatrixType&amp;, bool) has been called before, and
      * \p computeEigenvectors was set to true (the default).
      *
      * Column \f$ k \f$ of the returned matrix is an eigenvector corresponding
      * to eigenvalue number \f$ k \f$ as returned by eigenvalues().  The
      * eigenvectors are normalized to have (Euclidean) norm equal to one. The
      * matrix returned by this function is the matrix \f$ V \f$ in the
      * eigendecomposition \f$ A = V D V^{-1} \f$, if it exists.
      *
      * Example: \include EigenSolver_eigenvectors.cpp
      * Output: \verbinclude EigenSolver_eigenvectors.out
      *
      * \sa eigenvalues(), pseudoEigenvectors()
      */</doc>
