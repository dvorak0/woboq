<use f='include/eigen3/Eigen/src/SparseCore/SparseMatrix.h' l='200' u='c' c='_ZN5Eigen12SparseMatrix8coeffRefENS_8internal6traitsINS_12SparseMatrixIT_XT0_ET1_EEE5IndexES9_'/>
<use f='include/eigen3/Eigen/src/SparseCore/SparseMatrix.h' l='205' u='c' c='_ZN5Eigen12SparseMatrix8coeffRefENS_8internal6traitsINS_12SparseMatrixIT_XT0_ET1_EEE5IndexES9_'/>
<def f='include/eigen3/Eigen/src/SparseCore/SparseMatrix.h' l='220' ll='229' type='Scalar &amp; Eigen::SparseMatrix::insert(Index row, Index col)'/>
<use f='include/eigen3/Eigen/src/SparseCore/SparseMatrix.h' l='444' u='c' c='_ZN5Eigen12SparseMatrix18insertByOuterInnerENS_8internal6traitsINS_12SparseMatrixIT_XT0_ET1_EEE5IndexES9_'/>
<doc f='include/eigen3/Eigen/src/SparseCore/SparseMatrix.h' l='208'>/** \returns a reference to a novel non zero coefficient with coordinates \a row x \a col.
      * The non zero coefficient must \b not already exist.
      *
      * If the matrix \c *this is in compressed mode, then \c *this is turned into uncompressed
      * mode while reserving room for 2 non zeros per inner vector. It is strongly recommended to first
      * call reserve(const SizesType &amp;) to reserve a more appropriate number of elements per
      * inner vector that better match your scenario.
      *
      * This function performs a sorted insertion in O(1) if the elements of each inner vector are
      * inserted in increasing inner index order, and in O(nnz_j) for a random insertion.
      *
      */</doc>
