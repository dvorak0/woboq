<dec f='ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h' l='59' type='ceres::internal::ScratchEvaluatePreparer * ceres::internal::DynamicCompressedRowJacobianWriter::CreateEvaluatePreparers(int num_threads)'/>
<def f='ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.cc' l='45' ll='48' type='ceres::internal::ScratchEvaluatePreparer * ceres::internal::DynamicCompressedRowJacobianWriter::CreateEvaluatePreparers(int num_threads)'/>
<doc f='ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h' l='53'>// JacobianWriter interface.

  // The compressed row matrix has different layout than that assumed by
  // the cost functions. The scratch space is therefore used to store
  // the jacobians (including zeros) temporarily before only the non-zero
  // entries are copied over to the larger jacobian in `Write`.</doc>
