<dec f='ceres-solver/internal/ceres/suitesparse.h' l='105' type='cholmod_dense * ceres::internal::SuiteSparse::CreateDenseVector(const double * x, int in_size, int out_size)'/>
<doc f='ceres-solver/internal/ceres/suitesparse.h' l='102'>// Given a vector x, build a cholmod_dense vector of size out_size
  // with the first in_size entries copied from x. If x is NULL, then
  // an all zeros vector is returned. Caller owns the result.</doc>
<use f='ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc' l='271' u='c' c='_ZN5ceres8internal33DynamicSparseNormalCholeskySolver25SolveImplUsingSuiteSparseEPNS0_25CompressedRowSparseMatrixEPd'/>
<use f='ceres-solver/internal/ceres/schur_complement_solver.cc' l='434' u='c' c='_ZN5ceres8internal27SparseSchurComplementSolver40SolveReducedLinearSystemUsingSuiteSparseERKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<use f='ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc' l='399' u='c' c='_ZN5ceres8internal26SparseNormalCholeskySolver25SolveImplUsingSuiteSparseEPd'/>
<def f='ceres-solver/internal/ceres/suitesparse.cc' l='127' ll='136' type='cholmod_dense * ceres::internal::SuiteSparse::CreateDenseVector(const double * x, int in_size, int out_size)'/>
<use f='ceres-solver/internal/ceres/visibility_based_preconditioner.cc' l='119' u='c' c='_ZN5ceres8internal29VisibilityBasedPreconditionerC1ERKNS0_27CompressedRowBlockStructureERKNS0_14Preconditioner7OptionsE'/>
