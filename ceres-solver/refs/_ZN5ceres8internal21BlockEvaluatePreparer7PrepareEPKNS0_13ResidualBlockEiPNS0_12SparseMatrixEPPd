<dec f='ceres-solver/internal/ceres/block_evaluate_preparer.h' l='60' type='void ceres::internal::BlockEvaluatePreparer::Prepare(const ceres::internal::ResidualBlock * residual_block, int residual_block_index, ceres::internal::SparseMatrix * jacobian, double ** jacobians)'/>
<def f='ceres-solver/internal/ceres/block_evaluate_preparer.cc' l='50' ll='80' type='void ceres::internal::BlockEvaluatePreparer::Prepare(const ceres::internal::ResidualBlock * residual_block, int residual_block_index, ceres::internal::SparseMatrix * jacobian, double ** jacobians)'/>
<doc f='ceres-solver/internal/ceres/block_evaluate_preparer.cc' l='49'>// Point the jacobian blocks directly into the block sparse matrix.</doc>
<doc f='ceres-solver/internal/ceres/block_evaluate_preparer.h' l='55'>// EvaluatePreparer interface

  // Point the jacobian blocks directly into the block sparse matrix, if
  // jacobian is non-null. Otherwise, uses an internal per-thread buffer to
  // store the jacobians temporarily.</doc>
