<inh f='ceres-solver/internal/ceres/linear_operator.h' l='43' c='ceres::internal::LinearOperator'/>
<def f='ceres-solver/internal/ceres/implicit_schur_complement.h' l='89' ll='162'/>
<size>136</size>
<doc f='ceres-solver/internal/ceres/implicit_schur_complement.h' l='49'>// This class implements various linear algebraic operations related
// to the Schur complement without explicitly forming it.
//
//
// Given a reactangular linear system Ax = b, where
//
//   A = [E F]
//
// The normal equations are given by
//
//   A&apos;Ax = A&apos;b
//
//  |E&apos;E E&apos;F||y| = |E&apos;b|
//  |F&apos;E F&apos;F||z|   |F&apos;b|
//
// and the Schur complement system is given by
//
//  [F&apos;F - F&apos;E (E&apos;E)^-1 E&apos;F] z = F&apos;b - F&apos;E (E&apos;E)^-1 E&apos;b
//
// Now if we wish to solve Ax = b in the least squares sense, one way
// is to form this Schur complement system and solve it using
// Preconditioned Conjugate Gradients.
//
// The key operation in a conjugate gradient solver is the evaluation of the
// matrix vector product with the Schur complement
//
//   S = F&apos;F - F&apos;E (E&apos;E)^-1 E&apos;F
//
// It is straightforward to see that matrix vector products with S can
// be evaluated without storing S in memory. Instead, given (E&apos;E)^-1
// (which for our purposes is an easily inverted block diagonal
// matrix), it can be done in terms of matrix vector products with E,
// F and (E&apos;E)^-1. This class implements this functionality and other
// auxilliary bits needed to implement a CG solver on the Schur
// complement using the PartitionedMatrixView object.
//
// THREAD SAFETY: This class is nqot thread safe. In particular, the
// RightMultiply (and the LeftMultiply) methods are not thread safe as
// they depend on mutable arrays used for the temporaries needed to
// compute the product y += Sx;</doc>
<fun r='_ZN5ceres8internal23ImplicitSchurComplementC1ERKNS0_12LinearSolver7OptionsE'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplementD1Ev'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplement4InitERKNS0_17BlockSparseMatrixEPKdS6_'/>
<fun r='_ZNK5ceres8internal23ImplicitSchurComplement13RightMultiplyEPKdPd'/>
<fun r='_ZNK5ceres8internal23ImplicitSchurComplement12LeftMultiplyEPKdPd'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplement14BackSubstituteEPKdPd'/>
<fun r='_ZNK5ceres8internal23ImplicitSchurComplement8num_rowsEv'/>
<fun r='_ZNK5ceres8internal23ImplicitSchurComplement8num_colsEv'/>
<fun r='_ZNK5ceres8internal23ImplicitSchurComplement3rhsEv'/>
<fun r='_ZNK5ceres8internal23ImplicitSchurComplement26block_diagonal_EtE_inverseEv'/>
<fun r='_ZNK5ceres8internal23ImplicitSchurComplement26block_diagonal_FtF_inverseEv'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplement20AddDiagonalAndInvertEPKdPNS0_17BlockSparseMatrixE'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplement9UpdateRhsEv'/>
<mbr r='ceres::internal::ImplicitSchurComplement::options_' o='64' t='const LinearSolver::Options &amp;'/>
<mbr r='ceres::internal::ImplicitSchurComplement::A_' o='128' t='scoped_ptr&lt;ceres::internal::PartitionedMatrixViewBase&gt;'/>
<mbr r='ceres::internal::ImplicitSchurComplement::D_' o='192' t='const double *'/>
<mbr r='ceres::internal::ImplicitSchurComplement::b_' o='256' t='const double *'/>
<mbr r='ceres::internal::ImplicitSchurComplement::block_diagonal_EtE_inverse_' o='320' t='scoped_ptr&lt;ceres::internal::BlockSparseMatrix&gt;'/>
<mbr r='ceres::internal::ImplicitSchurComplement::block_diagonal_FtF_inverse_' o='384' t='scoped_ptr&lt;ceres::internal::BlockSparseMatrix&gt;'/>
<mbr r='ceres::internal::ImplicitSchurComplement::rhs_' o='448' t='Vector'/>
<mbr r='ceres::internal::ImplicitSchurComplement::tmp_rows_' o='576' t='Vector'/>
<mbr r='ceres::internal::ImplicitSchurComplement::tmp_e_cols_' o='704' t='Vector'/>
<mbr r='ceres::internal::ImplicitSchurComplement::tmp_e_cols_2_' o='832' t='Vector'/>
<mbr r='ceres::internal::ImplicitSchurComplement::tmp_f_cols_' o='960' t='Vector'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplementC1ERKNS0_12LinearSolver7OptionsE'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplementD1Ev'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplement4InitERKNS0_17BlockSparseMatrixEPKdS6_'/>
<fun r='_ZNK5ceres8internal23ImplicitSchurComplement13RightMultiplyEPKdPd'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplement20AddDiagonalAndInvertEPKdPNS0_17BlockSparseMatrixE'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplement14BackSubstituteEPKdPd'/>
<fun r='_ZN5ceres8internal23ImplicitSchurComplement9UpdateRhsEv'/>
