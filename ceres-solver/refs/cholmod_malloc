<dec f='include/suitesparse/cholmod_core.h' l='2228' type='void * cholmod_malloc(size_t n, size_t size, cholmod_common * Common)'/>
<doc f='include/suitesparse/cholmod_core.h' l='2212'>/* The user may make use of these, just like malloc and free.  You can even
 * malloc an object and safely free it with cholmod_free, and visa versa
 * (except that the memory usage statistics will be corrupted).  These routines
 * do differ from malloc and free.  If cholmod_free is given a NULL pointer,
 * for example, it does nothing (unlike the ANSI free).  cholmod_realloc does
 * not return NULL if given a non-NULL pointer and a nonzero size, even if it
 * fails (it returns the original pointer and sets an error code in
 * Common-&gt;status instead).
 *
 * CHOLMOD keeps track of the amount of memory it has allocated, and so the
 * cholmod_free routine also takes the size of the object being freed.  This
 * is only used for statistics.  If you, the user of CHOLMOD, pass the wrong
 * size, the only consequence is that the memory usage statistics will be
 * corrupted.
 */</doc>
<doc f='include/suitesparse/cholmod_core.h' l='2228'>/* returns pointer to the newly malloc&apos;d block */</doc>
