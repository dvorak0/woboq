<def f='ceres-solver/internal/ceres/gmock/gmock.h' l='2262' ll='2302'/>
<size>16</size>
<doc f='ceres-solver/internal/ceres/gmock/gmock.h' l='2257'>// A Cardinality is a copyable and IMMUTABLE (except by assignment)
// object that specifies how many times a mock function is expected to
// be called.  The implementation of Cardinality is just a linked_ptr
// to const CardinalityInterface, so copying is fairly cheap.
// Don&apos;t inherit from Cardinality!</doc>
<fun r='_ZN7testing11CardinalityC1Ev'/>
<fun r='_ZN7testing11CardinalityC1EPKNS_20CardinalityInterfaceE'/>
<fun r='_ZNK7testing11Cardinality22ConservativeLowerBoundEv'/>
<fun r='_ZNK7testing11Cardinality22ConservativeUpperBoundEv'/>
<fun r='_ZNK7testing11Cardinality22IsSatisfiedByCallCountEi'/>
<fun r='_ZNK7testing11Cardinality22IsSaturatedByCallCountEi'/>
<fun r='_ZNK7testing11Cardinality26IsOverSaturatedByCallCountEi'/>
<fun r='_ZNK7testing11Cardinality10DescribeToEPSo'/>
<fun r='_ZN7testing11Cardinality25DescribeActualCallCountToEiPSo'/>
<mbr r='testing::Cardinality::impl_' o='0' t='internal::linked_ptr&lt;const CardinalityInterface&gt;'/>
<fun r='_ZN7testing11Cardinality25DescribeActualCallCountToEiPSo'/>
