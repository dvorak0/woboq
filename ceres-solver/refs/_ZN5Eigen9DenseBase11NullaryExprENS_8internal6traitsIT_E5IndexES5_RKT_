<dec f='include/eigen3/Eigen/src/Core/DenseBase.h' l='313' type='static const CwiseNullaryOp&lt;CustomNullaryOp, Derived&gt; Eigen::DenseBase::NullaryExpr(Index rows, Index cols, const CustomNullaryOp &amp; func)'/>
<def f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='114' ll='120' type='static const CwiseNullaryOp&lt;CustomNullaryOp, Derived&gt; Eigen::DenseBase::NullaryExpr(Index rows, Index cols, const CustomNullaryOp &amp; func)'/>
<doc f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='101'>/** \returns an expression of a matrix defined by a custom functor \a func
  *
  * The parameters \a rows and \a cols are the number of rows and of columns of
  * the returned matrix. Must be compatible with this MatrixBase type.
  *
  * This variant is meant to be used for dynamic-size matrix types. For fixed-size types,
  * it is redundant to pass \a rows and \a cols as arguments, so Zero() should be used
  * instead.
  *
  * The template parameter \a CustomNullaryOp is the type of the functor.
  *
  * \sa class CwiseNullaryOp
  */</doc>
