<def f='ceres-solver/internal/ceres/gmock/gmock.h' l='6835' ll='6838' type='Matcher&lt;FloatType&gt; testing::internal::FloatingEqMatcher::operator Matcher&lt;type-parameter-0-0&gt;() const'/>
<doc f='ceres-solver/internal/ceres/gmock/gmock.h' l='6829'>// The following 3 type conversion operators allow FloatEq(expected) and
  // NanSensitiveFloatEq(expected) to be used as a Matcher&lt;float&gt;, a
  // Matcher&lt;const float&amp;&gt;, or a Matcher&lt;float&amp;&gt;, but nothing else.
  // (While Google&apos;s C++ coding style doesn&apos;t allow arguments passed
  // by non-const reference, we may see them in code not conforming to
  // the style.  Therefore Google Mock needs to support them.)</doc>
