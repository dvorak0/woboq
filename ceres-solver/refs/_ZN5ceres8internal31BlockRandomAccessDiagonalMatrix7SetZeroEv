<dec f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h' l='71' type='void ceres::internal::BlockRandomAccessDiagonalMatrix::SetZero()'/>
<use f='ceres-solver/internal/ceres/block_jacobi_preconditioner.cc' l='60' u='c' c='_ZN5ceres8internal25BlockJacobiPreconditioner10UpdateImplERKNS0_17BlockSparseMatrixEPKd'/>
<doc f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h' l='69'>// This is not a thread safe method, it assumes that no cell is
  // locked.</doc>
<inh f='ceres-solver/internal/ceres/block_random_access_matrix.h' l='121' c='_ZN5ceres8internal23BlockRandomAccessMatrix7SetZeroEv'/>
<def f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc' l='117' ll='122' type='void ceres::internal::BlockRandomAccessDiagonalMatrix::SetZero()'/>
<doc f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc' l='115'>// Assume that the user does not hold any locks on any cell blocks
// when they are calling SetZero.</doc>
