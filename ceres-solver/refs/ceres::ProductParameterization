<inh f='ceres-solver/include/ceres/local_parameterization.h' l='112' c='ceres::LocalParameterization'/>
<def f='ceres-solver/include/ceres/local_parameterization.h' l='283' ll='317'/>
<size>48</size>
<doc f='ceres-solver/include/ceres/local_parameterization.h' l='267'>// Construct a local parameterization by taking the Cartesian product
// of a number of other local parameterizations. This is useful, when
// a parameter block is the cartesian product of two or more
// manifolds. For example the parameters of a camera consist of a
// rotation and a translation, i.e., SO(3) x R^3.
//
// Currently this class supports taking the cartesian product of up to
// four local parameterizations.
//
// Example usage:
//
// ProductParameterization product_param(new QuaterionionParameterization(),
//                                       new IdentityParameterization(3));
//
// is the local parameterization for a rigid transformation, where the
// rotation is represented using a quaternion.</doc>
<fun r='_ZN5ceres23ProductParameterizationC1EPNS_21LocalParameterizationES2_'/>
<fun r='_ZN5ceres23ProductParameterizationC1EPNS_21LocalParameterizationES2_S2_'/>
<fun r='_ZN5ceres23ProductParameterizationC1EPNS_21LocalParameterizationES2_S2_S2_'/>
<fun r='_ZN5ceres23ProductParameterizationD1Ev'/>
<fun r='_ZNK5ceres23ProductParameterization4PlusEPKdS2_Pd'/>
<fun r='_ZNK5ceres23ProductParameterization15ComputeJacobianEPKdPd'/>
<fun r='_ZNK5ceres23ProductParameterization10GlobalSizeEv'/>
<fun r='_ZNK5ceres23ProductParameterization9LocalSizeEv'/>
<fun r='_ZN5ceres23ProductParameterization4InitEv'/>
<mbr r='ceres::ProductParameterization::local_params_' o='64' t='std::vector&lt;LocalParameterization *&gt;'/>
<mbr r='ceres::ProductParameterization::local_size_' o='256' t='int'/>
<mbr r='ceres::ProductParameterization::global_size_' o='288' t='int'/>
<mbr r='ceres::ProductParameterization::buffer_size_' o='320' t='int'/>
