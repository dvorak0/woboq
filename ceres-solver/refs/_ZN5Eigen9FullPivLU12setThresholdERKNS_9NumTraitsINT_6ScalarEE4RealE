<def f='include/eigen3/Eigen/src/LU/FullPivLU.h' l='254' ll='259' type='FullPivLU&lt;MatrixType&gt; &amp; Eigen::FullPivLU::setThreshold(const RealScalar &amp; threshold)'/>
<doc f='include/eigen3/Eigen/src/LU/FullPivLU.h' l='237'>/** Allows to prescribe a threshold to be used by certain methods, such as rank(),
      * who need to determine when pivots are to be considered nonzero. This is not used for the
      * LU decomposition itself.
      *
      * When it needs to get the threshold value, Eigen calls threshold(). By default, this
      * uses a formula to automatically determine a reasonable threshold.
      * Once you have called the present method setThreshold(const RealScalar&amp;),
      * your value is used instead.
      *
      * \param threshold The new value to use as the threshold.
      *
      * A pivot will be considered nonzero if its absolute value is strictly greater than
      *  \f$ \vert pivot \vert \leqslant threshold \times \vert maxpivot \vert \f$
      * where maxpivot is the biggest pivot.
      *
      * If you want to come back to the default behavior, call setThreshold(Default_t)
      */</doc>
<use f='ceres-solver/internal/ceres/polynomial.cc' l='376' u='c' c='_ZN5ceres8internal27FindInterpolatingPolynomialERKSt6vectorINS0_14FunctionSampleESaIS2_EE'/>
