<dec f='include/eigen3/Eigen/src/LU/PartialPivLU.h' l='166' type='typename internal::traits&lt;MatrixType&gt;::Scalar Eigen::PartialPivLU::determinant() const'/>
<def f='include/eigen3/Eigen/src/LU/PartialPivLU.h' l='409' ll='414' type='typename internal::traits&lt;MatrixType&gt;::Scalar Eigen::PartialPivLU::determinant() const'/>
<doc f='include/eigen3/Eigen/src/LU/PartialPivLU.h' l='153'>/** \returns the determinant of the matrix of which
      * *this is the LU decomposition. It has only linear complexity
      * (that is, O(n) where n is the dimension of the square matrix)
      * as the LU decomposition has already been computed.
      *
      * \note For fixed-size matrices of size up to 4, MatrixBase::determinant() offers
      *       optimized paths.
      *
      * \warning a determinant can be very big or small, so for matrices
      * of large enough dimension, there is a risk of overflow/underflow.
      *
      * \sa MatrixBase::determinant()
      */</doc>
