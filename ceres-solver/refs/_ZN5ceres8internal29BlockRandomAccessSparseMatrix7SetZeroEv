<dec f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.h' l='78' type='void ceres::internal::BlockRandomAccessSparseMatrix::SetZero()'/>
<inh f='ceres-solver/internal/ceres/block_random_access_matrix.h' l='121' c='_ZN5ceres8internal23BlockRandomAccessMatrix7SetZeroEv'/>
<def f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc' l='157' ll='162' type='void ceres::internal::BlockRandomAccessSparseMatrix::SetZero()'/>
<doc f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc' l='155'>// Assume that the user does not hold any locks on any cell blocks
// when they are calling SetZero.</doc>
<doc f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.h' l='76'>// This is not a thread safe method, it assumes that no cell is
  // locked.</doc>
