<dec f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h' l='59' type='void ceres::internal::BlockRandomAccessDiagonalMatrix::~BlockRandomAccessDiagonalMatrix()'/>
<doc f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h' l='57'>// The destructor is not thread safe. It assumes that no one is
  // modifying any cells when the matrix is being destroyed.</doc>
<inh f='ceres-solver/internal/ceres/block_random_access_matrix.h' l='101' c='_ZN5ceres8internal23BlockRandomAccessMatrixD1Ev'/>
<def f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc' l='92' ll='94' type='void ceres::internal::BlockRandomAccessDiagonalMatrix::~BlockRandomAccessDiagonalMatrix()'/>
<doc f='ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc' l='90'>// Assume that the user does not hold any locks on any cell blocks
// when they are calling SetZero.</doc>
