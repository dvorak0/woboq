<dec f='ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h' l='71' type='void ceres::internal::DynamicCompressedRowJacobianWriter::Write(int residual_id, int residual_offset, double ** jacobians, ceres::internal::SparseMatrix * base_jacobian)'/>
<def f='ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.cc' l='73' ll='114' type='void ceres::internal::DynamicCompressedRowJacobianWriter::Write(int residual_id, int residual_offset, double ** jacobians, ceres::internal::SparseMatrix * base_jacobian)'/>
<doc f='ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h' l='66'>// Write only the non-zero jacobian entries for a residual block
  // (specified by `residual_id`) into `base_jacobian`, starting at the row
  // specifed by `residual_offset`.
  //
  // This method is thread-safe over residual blocks (each `residual_id`).</doc>
