<def f='ceres-solver/internal/ceres/gmock/gmock.h' l='6722' ll='6729' type='void testing::internal::FloatingEqMatcher::FloatingEqMatcher&lt;FloatType&gt;(FloatType expected, bool nan_eq_nan, FloatType max_abs_error)'/>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='8649' u='c' c='_ZN7testing10DoubleNearEdd'/>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='8657' u='c' c='_ZN7testing22NanSensitiveDoubleNearEdd'/>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='8677' u='c' c='_ZN7testing9FloatNearEff'/>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='8685' u='c' c='_ZN7testing21NanSensitiveFloatNearEff'/>
<doc f='ceres-solver/internal/ceres/gmock/gmock.h' l='6719'>// Constructor that supports a user-specified max_abs_error that will be used
  // for comparison instead of ULP-based approximation.  The max absolute
  // should be non-negative.</doc>
