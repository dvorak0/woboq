<dec f='include/c++/4.8/bits/basic_string.h' l='2325' type='int std::basic_string::compare(size_type __pos, size_type __n1, const _CharT * __s) const'/>
<def f='include/c++/4.8/bits/basic_string.tcc' l='961' ll='975' type='int std::basic_string::compare(size_type __pos, size_type __n1, const _CharT * __s) const'/>
<doc f='include/c++/4.8/bits/basic_string.h' l='2305'>/**
       *  @brief  Compare substring to a C string.
       *  @param __pos  Index of first character of substring.
       *  @param __n1  Number of characters in substring.
       *  @param __s  C string to compare against.
       *  @return  Integer &lt; 0, 0, or &gt; 0.
       *
       *  Form the substring of this string from the @a __n1
       *  characters starting at @a pos.  Returns an integer &lt; 0 if
       *  the substring is ordered before @a __s, 0 if their values
       *  are equivalent, or &gt; 0 if the substring is ordered after @a
       *  __s.  Determines the effective length rlen of the strings to
       *  compare as the smallest of the length of the substring and
       *  the length of a string constructed from @a __s.  The
       *  function then compares the two string by calling
       *  traits::compare(substring.data(),__s,rlen).  If the result of
       *  the comparison is nonzero returns it, otherwise the shorter
       *  one is ordered first.
      */</doc>
