<dec f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.h' l='118' type='std::vector&lt;std::pair&lt;std::pair&lt;int, int&gt;, double *&gt; &gt;'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc' l='96' u='m' c='_ZN5ceres8internal29BlockRandomAccessSparseMatrixC1ERKSt6vectorIiSaIiEERKSt3setISt4pairIiiESt4lessIS9_ESaIS9_EE'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc' l='167' u='m' c='_ZNK5ceres8internal29BlockRandomAccessSparseMatrix22SymmetricRightMultiplyEPKdPd'/>
<use f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc' l='168' u='m' c='_ZNK5ceres8internal29BlockRandomAccessSparseMatrix22SymmetricRightMultiplyEPKdPd'/>
<offset>896</offset>
<doc f='ceres-solver/internal/ceres/block_random_access_sparse_matrix.h' l='115'>// In order traversal of contents of the matrix. This allows us to
  // implement a matrix-vector which is 20% faster than using the
  // iterator in the Layout object instead.</doc>
