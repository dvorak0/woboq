<def f='ceres-solver/include/ceres/jet.h' l='606' ll='617' type='bool ceres::IsFinite(const Jet&lt;T, N&gt; &amp; f)'/>
<doc f='ceres-solver/include/ceres/jet.h' l='595'>// Jet Classification. It is not clear what the appropriate semantics are for
// these classifications. This picks that IsFinite and isnormal are &quot;all&quot;
// operations, i.e. all elements of the jet must be finite for the jet itself
// to be finite (or normal). For IsNaN and IsInfinite, the answer is less
// clear. This takes a &quot;any&quot; approach for IsNaN and IsInfinite such that if any
// part of a jet is nan or inf, then the entire jet is nan or inf. This leads
// to strange situations like a jet can be both IsInfinite and IsNaN, but in
// practice the &quot;any&quot; semantics are the most useful for e.g. checking that
// derivatives are sane.

// The jet is finite if all parts of the jet are finite.</doc>
<use f='ceres-solver/internal/ceres/jet_test.cc' l='541' u='c' c='_ZN5ceres8internal38JetTraitsTest_ClassificationMixed_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/jet_test.cc' l='552' u='c' c='_ZN5ceres8internal36JetTraitsTest_ClassificationNaN_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/jet_test.cc' l='563' u='c' c='_ZN5ceres8internal36JetTraitsTest_ClassificationInf_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/jet_test.cc' l='574' u='c' c='_ZN5ceres8internal39JetTraitsTest_ClassificationFinite_Test8TestBodyEv'/>
