<def f='include/eigen3/Eigen/src/Householder/HouseholderSequence.h' l='154' ll='158' type='void Eigen::HouseholderSequence::HouseholderSequence&lt;VectorsType, CoeffsType, Side&gt;(const VectorsType &amp; v, const CoeffsType &amp; h)'/>
<doc f='include/eigen3/Eigen/src/Householder/HouseholderSequence.h' l='137'>/** \brief Constructor.
      * \param[in]  v      %Matrix containing the essential parts of the Householder vectors
      * \param[in]  h      Vector containing the Householder coefficients
      *
      * Constructs the Householder sequence with coefficients given by \p h and vectors given by \p v. The
      * i-th Householder coefficient \f$ h_i \f$ is given by \p h(i) and the essential part of the i-th
      * Householder vector \f$ v_i \f$ is given by \p v(k,i) with \p k &gt; \p i (the subdiagonal part of the
      * i-th column). If \p v has fewer columns than rows, then the Householder sequence contains as many
      * Householder reflections as there are columns.
      *
      * \note The %HouseholderSequence object stores \p v and \p h by reference.
      *
      * Example: \include HouseholderSequence_HouseholderSequence.cpp
      * Output: \verbinclude HouseholderSequence_HouseholderSequence.out
      *
      * \sa setLength(), setShift()
      */</doc>
