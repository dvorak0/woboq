<dec f='ceres-solver/internal/ceres/gtest/gtest.h' l='19871' type='testing::Environment * testing::UnitTest::AddEnvironment(testing::Environment * env)'/>
<use f='ceres-solver/internal/ceres/gtest/gtest.h' l='19960' u='c' c='_ZN7testing24AddGlobalTestEnvironmentEPNS_11EnvironmentE'/>
<doc f='ceres-solver/internal/ceres/gtest/gtest.h' l='19862'>// Registers and returns a global test environment.  When a test
  // program is run, all global test environments will be set-up in
  // the order they were registered.  After all tests in the program
  // have finished, all global test environments will be torn-down in
  // the *reverse* order they were registered.
  //
  // The UnitTest object takes ownership of the given environment.
  //
  // This method can only be called from the main thread.</doc>
<def f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='5543' ll='5550' type='testing::Environment * testing::UnitTest::AddEnvironment(testing::Environment * env)'/>
<doc f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='5533'>// Registers and returns a global test environment.  When a test
// program is run, all global test environments will be set-up in the
// order they were registered.  After all tests in the program have
// finished, all global test environments will be torn-down in the
// *reverse* order they were registered.
//
// The UnitTest object takes ownership of the given environment.
//
// We don&apos;t protect this under mutex_, as we only support calling it
// from the main thread.</doc>
