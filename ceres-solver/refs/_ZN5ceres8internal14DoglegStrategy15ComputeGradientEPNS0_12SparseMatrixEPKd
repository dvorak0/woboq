<dec f='ceres-solver/internal/ceres/dogleg_strategy.h' l='87' type='void ceres::internal::DoglegStrategy::ComputeGradient(ceres::internal::SparseMatrix * jacobian, const double * residuals)'/>
<use f='ceres-solver/internal/ceres/dogleg_strategy.cc' l='128' u='c' c='_ZN5ceres8internal14DoglegStrategy11ComputeStepERKNS0_19TrustRegionStrategy15PerSolveOptionsEPNS0_12SparseMatrixEPKdPd'/>
<def f='ceres-solver/internal/ceres/dogleg_strategy.cc' l='172' ll='178' type='void ceres::internal::DoglegStrategy::ComputeGradient(ceres::internal::SparseMatrix * jacobian, const double * residuals)'/>
<doc f='ceres-solver/internal/ceres/dogleg_strategy.cc' l='165'>// The trust region is assumed to be elliptical with the
// diagonal scaling matrix D defined by sqrt(diagonal_).
// It is implemented by substituting step&apos; = D * step.
// The trust region for step&apos; is spherical.
// The gradient, the Gauss-Newton step, the Cauchy point,
// and all calculations involving the Jacobian have to
// be adjusted accordingly.</doc>
