<def f='ceres-solver/internal/ceres/trust_region_strategy.h' l='56' ll='159'/>
<size>8</size>
<doc f='ceres-solver/internal/ceres/trust_region_strategy.h' l='44'>// Interface for classes implementing various trust region strategies
// for nonlinear least squares problems.
//
// The object is expected to maintain and update a trust region
// radius, which it then uses to solve for the trust region step using
// the jacobian matrix and residual vector.
//
// Here the term trust region radius is used loosely, as the strategy
// is free to treat it as guidance and violate it as need be. e.g.,
// the LevenbergMarquardtStrategy uses the inverse of the trust region
// radius to scale the damping term, which controls the step size, but
// does not set a hard limit on its size.</doc>
<fun r='_ZN5ceres8internal19TrustRegionStrategyD1Ev'/>
<fun r='_ZN5ceres8internal19TrustRegionStrategy11ComputeStepERKNS1_15PerSolveOptionsEPNS0_12SparseMatrixEPKdPd'/>
<fun r='_ZN5ceres8internal19TrustRegionStrategy12StepAcceptedEd'/>
<fun r='_ZN5ceres8internal19TrustRegionStrategy12StepRejectedEd'/>
<fun r='_ZN5ceres8internal19TrustRegionStrategy13StepIsInvalidEv'/>
<fun r='_ZNK5ceres8internal19TrustRegionStrategy6RadiusEv'/>
<fun r='_ZN5ceres8internal19TrustRegionStrategy6CreateERKNS1_7OptionsE'/>
<ovr f='ceres-solver/internal/ceres/dogleg_strategy.h' l='55' c='ceres::internal::DoglegStrategy'/>
<ovr f='ceres-solver/internal/ceres/levenberg_marquardt_strategy.h' l='45' c='ceres::internal::LevenbergMarquardtStrategy'/>
