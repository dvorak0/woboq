<dec f='ceres-solver/include/ceres/solver.h' l='1045' type='void ceres::Solver::Solve(const ceres::Solver::Options &amp; options, ceres::Problem * problem, Solver::Summary * summary)'/>
<doc f='ceres-solver/include/ceres/solver.h' l='1040'>// Once a least squares problem has been built, this function takes
  // the problem and optimizes it based on the values of the options
  // parameters. Upon return, a detailed summary of the work performed
  // by the preprocessor, the non-linear minmizer and the linear
  // solver are reported in the summary object.</doc>
<use f='ceres-solver/internal/ceres/gradient_checker_test.cc' l='499' u='c' c='_ZN5ceres8internal62GradientChecker_TestCorrectnessWithLocalParameterizations_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/gradient_checker_test.cc' l='540' u='c' c='_ZN5ceres8internal62GradientChecker_TestCorrectnessWithLocalParameterizations_Test8TestBodyEv'/>
<use f='ceres-solver/internal/ceres/gradient_checker_test.cc' l='580' u='c' c='_ZN5ceres8internal62GradientChecker_TestCorrectnessWithLocalParameterizations_Test8TestBodyEv'/>
<def f='ceres-solver/internal/ceres/solver.cc' l='491' ll='602' type='void ceres::Solver::Solve(const Solver::Options &amp; options, ceres::Problem * problem, Solver::Summary * summary)'/>
<use f='ceres-solver/internal/ceres/solver.cc' l='608' u='c' c='_ZN5ceres5SolveERKNS_6Solver7OptionsEPNS_7ProblemEPNS0_7SummaryE'/>
