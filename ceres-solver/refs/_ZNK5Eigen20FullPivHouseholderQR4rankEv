<def f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='216' ll='225' type='Index Eigen::FullPivHouseholderQR::rank() const'/>
<use f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='236' u='c' c='_ZNK5Eigen20FullPivHouseholderQR17dimensionOfKernelEv'/>
<use f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='249' u='c' c='_ZNK5Eigen20FullPivHouseholderQR11isInjectiveEv'/>
<use f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='262' u='c' c='_ZNK5Eigen20FullPivHouseholderQR12isSurjectiveEv'/>
<doc f='include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h' l='210'>/** \returns the rank of the matrix of which *this is the QR decomposition.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      */</doc>
