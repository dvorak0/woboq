<use f='ceres-solver/include/ceres/solver.h' l='79' u='w' c='_ZN5ceres6Solver7OptionsC1Ev'/>
<dec f='ceres-solver/include/ceres/solver.h' l='336' type='bool'/>
<use f='ceres-solver/examples/bundle_adjuster.cc' l='233' u='w' c='_ZN5ceres8examples19SetMinimizerOptionsEPNS_6Solver7OptionsE'/>
<offset>768</offset>
<doc f='ceres-solver/include/ceres/solver.h' l='311'>// The classical trust region methods are descent methods, in that
    // they only accept a point if it strictly reduces the value of
    // the objective function.
    //
    // Relaxing this requirement allows the algorithm to be more
    // efficient in the long term at the cost of some local increase
    // in the value of the objective function.
    //
    // This is because allowing for non-decreasing objective function
    // values in a princpled manner allows the algorithm to &quot;jump over
    // boulders&quot; as the method is not restricted to move into narrow
    // valleys while preserving its convergence properties.
    //
    // Setting use_nonmonotonic_steps to true enables the
    // non-monotonic trust region algorithm as described by Conn,
    // Gould &amp; Toint in &quot;Trust Region Methods&quot;, Section 10.1.
    //
    // The parameter max_consecutive_nonmonotonic_steps controls the
    // window size used by the step selection algorithm to accept
    // non-monotonic steps.
    //
    // Even though the value of the objective function may be larger
    // than the minimum value encountered over the course of the
    // optimization, the final parameters returned to the user are the
    // ones corresponding to the minimum cost over all iterations.</doc>
<use f='ceres-solver/examples/libmv_bundle_adjuster.cc' l='760' u='w' c='_ZN12_GLOBAL__N_131EuclideanBundleCommonIntrinsicsERKSt6vectorINS_6MarkerESaIS1_EEiiPdPS0_INS_15EuclideanCameraESaIS7_EEPS0_INS_14EuclideanPointESaISB_EE'/>
<use f='ceres-solver/examples/nist.cc' l='568' u='w' c='_ZN5ceres8examples19SetMinimizerOptionsEPNS_6Solver7OptionsE'/>
<use f='ceres-solver/internal/ceres/minimizer.h' l='75' u='r' c='_ZN5ceres8internal9Minimizer7Options4InitERKNS_6Solver7OptionsE'/>
<use f='ceres-solver/internal/ceres/solver.cc' l='125' u='r' c='_ZN5ceres12_GLOBAL__N_126TrustRegionOptionsAreValidERKNS_6Solver7OptionsEPSs'/>
