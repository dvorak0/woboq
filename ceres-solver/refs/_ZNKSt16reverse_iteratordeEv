<def f='include/c++/4.8/bits/stl_iterator.h' l='159' ll='164' type='reference std::reverse_iterator::operator*() const'/>
<use f='include/c++/4.8/bits/stl_iterator.h' l='173' u='c' c='_ZNKSt16reverse_iteratorptEv'/>
<doc f='include/c++/4.8/bits/stl_iterator.h' l='149'>/**
       *  @return  A reference to the value at @c --current
       *
       *  This requires that @c --current is dereferenceable.
       *
       *  @warning This implementation requires that for an iterator of the
       *           underlying iterator type, @c x, a reference obtained by
       *           @c *x remains valid after @c x has been modified or
       *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
      */</doc>
<use f='ceres-solver/internal/ceres/gmock/gmock.h' l='10661' u='c' c='_ZNK7testing8internal18FunctionMockerBase14FindOnCallSpecERKNS0_8FunctionIT_E13ArgumentTupleE'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='10757' u='c' c='_ZN7testing8internal3LogENS0_11LogSeverityERKSsi'/>
<use f='ceres-solver/internal/ceres/low_rank_inverse_hessian.cc' l='134' u='c' c='_ZNK5ceres8internal21LowRankInverseHessian13RightMultiplyEPKdPd'/>
<use f='ceres-solver/internal/ceres/low_rank_inverse_hessian.cc' l='135' u='c' c='_ZNK5ceres8internal21LowRankInverseHessian13RightMultiplyEPKdPd'/>
<use f='ceres-solver/internal/ceres/low_rank_inverse_hessian.cc' l='136' u='c' c='_ZNK5ceres8internal21LowRankInverseHessian13RightMultiplyEPKdPd'/>
<use f='ceres-solver/internal/ceres/low_rank_inverse_hessian.cc' l='137' u='c' c='_ZNK5ceres8internal21LowRankInverseHessian13RightMultiplyEPKdPd'/>
<use f='ceres-solver/internal/ceres/visibility.cc' l='94' u='c' c='_ZN5ceres8internal26CreateSchurComplementGraphERKSt6vectorISt3setIiSt4lessIiESaIiEESaIS6_EE'/>
