<dec f='ceres-solver/internal/ceres/suitesparse.h' l='255' type='bool ceres::internal::SuiteSparse::ConstrainedApproximateMinimumDegreeOrdering(cholmod_sparse * matrix, int * constraints, int * ordering)'/>
<doc f='ceres-solver/internal/ceres/suitesparse.h' l='242'>// Find a fill reducing approximate minimum degree
  // ordering. constraints is an array which associates with each
  // column of the matrix an elimination group. i.e., all columns in
  // group 0 are eliminated first, all columns in group 1 are
  // eliminated next etc. This function finds a fill reducing ordering
  // that obeys these constraints.
  //
  // Calling ApproximateMinimumDegreeOrdering is equivalent to calling
  // ConstrainedApproximateMinimumDegreeOrdering with a constraint
  // array that puts all columns in the same elimination group.
  //
  // If CERES_NO_CAMD is defined then calling this function will
  // result in a crash.</doc>
<use f='ceres-solver/internal/ceres/reorder_program.cc' l='140' u='c' c='_ZN5ceres8internal12_GLOBAL__N_147OrderingForSparseNormalCholeskyUsingSuiteSparseERKNS0_19TripletSparseMatrixERKSt6vectorIPNS0_14ParameterBlockESaIS7_10447557'/>
<use f='ceres-solver/internal/ceres/reorder_program.cc' l='374' u='c' c='_ZN5ceres8internal50MaybeReorderSchurComplementColumnsUsingSuiteSparseERKNS_13OrderedGroupsIPdEEPNS0_7ProgramE'/>
<def f='ceres-solver/internal/ceres/suitesparse.cc' l='339' ll='353' type='bool ceres::internal::SuiteSparse::ConstrainedApproximateMinimumDegreeOrdering(cholmod_sparse * matrix, int * constraints, int * ordering)'/>
