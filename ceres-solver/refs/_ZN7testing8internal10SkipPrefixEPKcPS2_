<dec f='ceres-solver/internal/ceres/gtest/gtest.h' l='8288' type='bool testing::internal::SkipPrefix(const char * prefix, const char ** pstr)'/>
<def f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6449' ll='6456' type='bool testing::internal::SkipPrefix(const char * prefix, const char ** pstr)'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6554' u='c' c='_ZN7testing8internalL23HasGoogleTestFlagPrefixEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6555' u='c' c='_ZN7testing8internalL23HasGoogleTestFlagPrefixEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6556' u='c' c='_ZN7testing8internalL23HasGoogleTestFlagPrefixEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6557' u='c' c='_ZN7testing8internalL23HasGoogleTestFlagPrefixEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6558' u='c' c='_ZN7testing8internalL23HasGoogleTestFlagPrefixEPKc'/>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6559' u='c' c='_ZN7testing8internalL23HasGoogleTestFlagPrefixEPKc'/>
<doc f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='6446'>// If *pstr starts with the given prefix, modifies *pstr to be right
// past the prefix and returns true; otherwise leaves *pstr unchanged
// and returns false.  None of pstr, *pstr, and prefix can be NULL.</doc>
