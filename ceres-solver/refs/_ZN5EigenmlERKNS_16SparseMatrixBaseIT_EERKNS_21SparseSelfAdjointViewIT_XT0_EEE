<def f='include/eigen3/Eigen/src/SparseCore/SparseSelfAdjointView.h' l='89' ll='94' type='SparseSparseProduct&lt;OtherDerived, typename OtherDerived::PlainObject&gt; Eigen::operator*(const SparseMatrixBase&lt;OtherDerived&gt; &amp; lhs, const SparseSelfAdjointView&lt;MatrixType, UpLo&gt; &amp; rhs)'/>
<doc f='include/eigen3/Eigen/src/SparseCore/SparseSelfAdjointView.h' l='84'>/** \returns an expression of the matrix product between a sparse matrix \a lhs and a sparse self-adjoint matrix \a rhs.
      *
      * Note that there is no algorithmic advantage of performing such a product compared to a general sparse-sparse matrix product.
      * Indeed, the SparseSelfadjointView operand is first copied into a temporary SparseMatrix before computing the product.
      */</doc>
