<def f='ceres-solver/internal/ceres/gtest/gtest.h' l='9091' ll='9159'/>
<size>8</size>
<doc f='ceres-solver/internal/ceres/gtest/gtest.h' l='9078'>// DeathTest is a class that hides much of the complexity of the
// GTEST_DEATH_TEST_ macro.  It is abstract; its static Create method
// returns a concrete class that depends on the prevailing death test
// style, as defined by the --gtest_death_test_style and/or
// --gtest_internal_run_death_test flags.

// In describing the results of death tests, these terms are used with
// the corresponding definitions:
//
// exit status:  The integer exit information in the format specified
//               by wait(2)
// exit code:    The integer code passed to exit(3), _exit(2), or
//               returned from main()</doc>
<fun r='_ZN7testing8internal9DeathTest6CreateEPKcPKNS0_2REES3_iPPS1_'/>
<fun r='_ZN7testing8internal9DeathTestC1Ev'/>
<fun r='_ZN7testing8internal9DeathTestD1Ev'/>
<fun r='_ZN7testing8internal9DeathTest10AssumeRoleEv'/>
<fun r='_ZN7testing8internal9DeathTest4WaitEv'/>
<fun r='_ZN7testing8internal9DeathTest6PassedEb'/>
<fun r='_ZN7testing8internal9DeathTest5AbortENS1_11AbortReasonE'/>
<fun r='_ZN7testing8internal9DeathTest11LastMessageEv'/>
<fun r='_ZN7testing8internal9DeathTest27set_last_death_test_messageERKSs'/>
<smbr r='testing::internal::DeathTest::last_death_test_message_' t='std::string'/>
<fun r='_ZN7testing8internal9DeathTestC1ERKS1_'/>
<ovr f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='7203' c='testing::internal::DeathTestImpl'/>
<fun r='_ZN7testing8internal9DeathTestC1Ev'/>
<fun r='_ZN7testing8internal9DeathTest6CreateEPKcPKNS0_2REES3_iPPS1_'/>
<fun r='_ZN7testing8internal9DeathTest11LastMessageEv'/>
<fun r='_ZN7testing8internal9DeathTest27set_last_death_test_messageERKSs'/>
<smbr r='testing::internal::DeathTest::last_death_test_message_' t='std::string'/>
