<dec f='include/eigen3/Eigen/src/Core/DenseBase.h' l='305' type='static const RandomAccessLinSpacedReturnType Eigen::DenseBase::LinSpaced(Index size, const Scalar &amp; low, const Scalar &amp; high)'/>
<def f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='274' ll='280' type='static const typename DenseBase&lt;Derived&gt;::RandomAccessLinSpacedReturnType Eigen::DenseBase::LinSpaced(Index size, const Scalar &amp; low, const Scalar &amp; high)'/>
<doc f='include/eigen3/Eigen/src/Core/CwiseNullaryOp.h' l='261'>/**
  * \brief Sets a linearly space vector.
  *
  * The function generates &apos;size&apos; equally spaced values in the closed interval [low,high].
  * When size is set to 1, a vector of length 1 containing &apos;high&apos; is returned.
  *
  * \only_for_vectors
  *
  * Example: \include DenseBase_LinSpaced.cpp
  * Output: \verbinclude DenseBase_LinSpaced.out
  *
  * \sa setLinSpaced(Index,const Scalar&amp;,const Scalar&amp;), LinSpaced(Sequential_t,Index,const Scalar&amp;,const Scalar&amp;,Index), CwiseNullaryOp
  */</doc>
