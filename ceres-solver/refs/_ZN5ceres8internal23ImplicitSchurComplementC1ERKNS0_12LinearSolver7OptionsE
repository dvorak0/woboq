<dec f='ceres-solver/internal/ceres/implicit_schur_complement.h' l='100' type='void ceres::internal::ImplicitSchurComplement::ImplicitSchurComplement(const LinearSolver::Options &amp; options)'/>
<def f='ceres-solver/internal/ceres/implicit_schur_complement.cc' l='45' ll='50' type='void ceres::internal::ImplicitSchurComplement::ImplicitSchurComplement(const LinearSolver::Options &amp; options)'/>
<doc f='ceres-solver/internal/ceres/implicit_schur_complement.h' l='91'>// num_eliminate_blocks is the number of E blocks in the matrix
  // A.
  //
  // preconditioner indicates whether the inverse of the matrix F&apos;F
  // should be computed or not as a preconditioner for the Schur
  // Complement.
  //
  // TODO(sameeragarwal): Get rid of the two bools below and replace
  // them with enums.</doc>
<use f='ceres-solver/internal/ceres/implicit_schur_complement_test.cc' l='127' u='c' c='_ZN5ceres8internal27ImplicitSchurComplementTest27TestImplicitSchurComplementEPd'/>
<use f='ceres-solver/internal/ceres/iterative_schur_complement_solver.cc' l='81' u='c' c='_ZN5ceres8internal30IterativeSchurComplementSolver9SolveImplEPNS0_17BlockSparseMatrixEPKdRKNS0_12LinearSolver15PerSolveOptionsEPd'/>
