<dec f='ceres-solver/internal/ceres/suitesparse.h' l='175' type='cholmod_factor * ceres::internal::SuiteSparse::AnalyzeCholeskyWithNaturalOrdering(cholmod_sparse * A, std::string * message)'/>
<doc f='ceres-solver/internal/ceres/suitesparse.h' l='169'>// Perform a symbolic factorization of A without re-ordering A. No
  // postordering of the elimination tree is performed. This ensures
  // that the symbolic factor does not introduce an extra permutation
  // on the matrix. See the documentation for CHOLMOD for more details.
  //
  // message contains an explanation of the failures if any.</doc>
<use f='ceres-solver/internal/ceres/schur_complement_solver.cc' l='409' u='c' c='_ZN5ceres8internal27SparseSchurComplementSolver40SolveReducedLinearSystemUsingSuiteSparseERKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<use f='ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc' l='380' u='c' c='_ZN5ceres8internal26SparseNormalCholeskySolver25SolveImplUsingSuiteSparseEPd'/>
<def f='ceres-solver/internal/ceres/suitesparse.cc' l='197' ll='215' type='cholmod_factor * ceres::internal::SuiteSparse::AnalyzeCholeskyWithNaturalOrdering(cholmod_sparse * A, string * message)'/>
