<use f='ceres-solver/internal/ceres/parameter_block.h' l='197' u='m' c='_ZN5ceres8internal14ParameterBlock13SetUpperBoundEid'/>
<use f='ceres-solver/internal/ceres/parameter_block.h' l='198' u='m' c='_ZN5ceres8internal14ParameterBlock13SetUpperBoundEid'/>
<use f='ceres-solver/internal/ceres/parameter_block.h' l='199' u='m' c='_ZN5ceres8internal14ParameterBlock13SetUpperBoundEid'/>
<use f='ceres-solver/internal/ceres/parameter_block.h' l='200' u='m' c='_ZN5ceres8internal14ParameterBlock13SetUpperBoundEid'/>
<use f='ceres-solver/internal/ceres/parameter_block.h' l='204' u='m' c='_ZN5ceres8internal14ParameterBlock13SetUpperBoundEid'/>
<use f='ceres-solver/internal/ceres/parameter_block.h' l='240' u='m' c='_ZN5ceres8internal14ParameterBlock4PlusEPKdS3_Pd'/>
<use f='ceres-solver/internal/ceres/parameter_block.h' l='242' u='m' c='_ZN5ceres8internal14ParameterBlock4PlusEPKdS3_Pd'/>
<use f='ceres-solver/internal/ceres/parameter_block.h' l='301' u='m' c='_ZNK5ceres8internal14ParameterBlock22UpperBoundForParameterEi'/>
<use f='ceres-solver/internal/ceres/parameter_block.h' l='304' u='m' c='_ZNK5ceres8internal14ParameterBlock22UpperBoundForParameterEi'/>
<dec f='ceres-solver/internal/ceres/parameter_block.h' l='397' type='scoped_array&lt;double&gt;'/>
<offset>512</offset>
<doc f='ceres-solver/internal/ceres/parameter_block.h' l='386'>// Upper and lower bounds for the parameter block.  SetUpperBound
  // and SetLowerBound lazily initialize the upper_bounds_ and
  // lower_bounds_ arrays. If they are never called, then memory for
  // these arrays is never allocated. Thus for problems where there
  // are no bounds, or only one sided bounds we do not pay the cost of
  // allocating memory for the inactive bounds constraints.
  //
  // Upon initialization these arrays are initialized to
  // std::numeric_limits&lt;double&gt;::max() and
  // -std::numeric_limits&lt;double&gt;::max() respectively which correspond
  // to the parameter block being unconstrained.</doc>
