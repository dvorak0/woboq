<dec f='ceres-solver/internal/ceres/schur_complement_solver.h' l='159' type='LinearSolver::Summary ceres::internal::DenseSchurComplementSolver::SolveReducedLinearSystem(const LinearSolver::PerSolveOptions &amp; per_solve_options, double * solution)'/>
<inh f='ceres-solver/internal/ceres/schur_complement_solver.h' l='137' c='_ZN5ceres8internal21SchurComplementSolver24SolveReducedLinearSystemERKNS0_12LinearSolver15PerSolveOptionsEPd'/>
<def f='ceres-solver/internal/ceres/schur_complement_solver.cc' l='182' ll='226' type='LinearSolver::Summary ceres::internal::DenseSchurComplementSolver::SolveReducedLinearSystem(const LinearSolver::PerSolveOptions &amp; per_solve_options, double * solution)'/>
<doc f='ceres-solver/internal/ceres/schur_complement_solver.cc' l='179'>// Solve the system Sx = r, assuming that the matrix S is stored in a
// BlockRandomAccessDenseMatrix. The linear system is solved using
// Eigen&apos;s Cholesky factorization.</doc>
