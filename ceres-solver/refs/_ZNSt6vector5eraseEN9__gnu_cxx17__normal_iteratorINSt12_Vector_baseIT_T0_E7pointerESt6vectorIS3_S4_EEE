<dec f='include/c++/4.8/bits/stl_vector.h' l='1075' type='iterator std::vector::erase(iterator __position)'/>
<def f='include/c++/4.8/bits/vector.tcc' l='132' ll='142' type='typename vector&lt;_Tp, _Alloc&gt;::iterator std::vector::erase(iterator __position)'/>
<doc f='include/c++/4.8/bits/stl_vector.h' l='1059'>/**
       *  @brief  Remove element at given position.
       *  @param  __position  Iterator pointing to element to be erased.
       *  @return  An iterator pointing to the next element (or end()).
       *
       *  This function will erase the element at the given position and thus
       *  shorten the %vector by one.
       *
       *  Note This operation could be expensive and if it is
       *  frequently used the user should consider using std::list.
       *  The user is also cautioned that this function only erases
       *  the element, and that if the element is itself a pointer,
       *  the pointed-to memory is not touched in any way.  Managing
       *  the pointer is the user&apos;s responsibility.
       */</doc>
<use f='ceres-solver/internal/ceres/gmock_gtest_all.cc' l='4732' u='c' c='_ZN7testing8internal17TestEventRepeater7ReleaseEPNS_17TestEventListenerE'/>
